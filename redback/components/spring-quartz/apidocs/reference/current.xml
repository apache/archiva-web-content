<api>
<package name="org.apache.archiva.redback.components.scheduler"
>
<class name="AbstractJob"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="AbstractJob"
 type="org.apache.archiva.redback.components.scheduler.AbstractJob"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="execute"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="context" type="org.quartz.JobExecutionContext">
</parameter>
<exception name="JobExecutionException" type="org.quartz.JobExecutionException">
</exception>
</method>
<method name="getJobDataMap"
 return="org.quartz.JobDataMap"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLogger"
 return="org.slf4j.Logger"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="interrupt"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="UnableToInterruptJobException" type="org.quartz.UnableToInterruptJobException">
</exception>
</method>
<method name="isInterrupted"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setJobDataMap"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jobDataMap" type="org.quartz.JobDataMap">
</parameter>
</method>
<field name="CONTEXT"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;JOB_CONTEXT&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="EXECUTION_CONFIGURATION"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;JOB_EXECUTION_CONFIGURATION&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="LOGGER"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;JOB_LOGGER&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="SERVICE_MANAGER"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;JOB_SERVICE_MANAGER&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="CronExpressionValidator"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="CronExpressionValidator"
 type="org.apache.archiva.redback.components.scheduler.CronExpressionValidator"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="validate"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cronExpression" type="java.lang.String">
</parameter>
</method>
</class>
<class name="DefaultJobListener"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.quartz.JobListener">
</implements>
<constructor name="DefaultJobListener"
 type="org.apache.archiva.redback.components.scheduler.DefaultJobListener"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="jobExecutionVetoed"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jobExecutionContext" type="org.quartz.JobExecutionContext">
</parameter>
</method>
<method name="jobToBeExecuted"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="context" type="org.quartz.JobExecutionContext">
</parameter>
</method>
<method name="jobWasExecuted"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="context" type="org.quartz.JobExecutionContext">
</parameter>
<parameter name="jobException" type="org.quartz.JobExecutionException">
</parameter>
</method>
</class>
<class name="DefaultScheduler"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.components.scheduler.Scheduler">
</implements>
<constructor name="DefaultScheduler"
 type="org.apache.archiva.redback.components.scheduler.DefaultScheduler"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="addGlobalJobListener"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="org.quartz.JobListener">
</parameter>
<exception name="SchedulerException" type="org.quartz.SchedulerException">
</exception>
</method>
<method name="addGlobalTriggerListener"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="org.quartz.TriggerListener">
</parameter>
<exception name="SchedulerException" type="org.quartz.SchedulerException">
</exception>
</method>
<method name="getProperties"
 return="java.util.Properties"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getScheduler"
 return="org.quartz.impl.StdScheduler"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="initialize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="SchedulerException" type="org.quartz.SchedulerException">
</exception>
</method>
<method name="interruptSchedule"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jobName" type="java.lang.String">
</parameter>
<parameter name="groupName" type="java.lang.String">
</parameter>
<exception name="SchedulerException" type="org.quartz.SchedulerException">
</exception>
</method>
<method name="scheduleJob"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jobDetail" type="org.quartz.JobDetail">
</parameter>
<parameter name="trigger" type="org.quartz.Trigger">
</parameter>
<exception name="SchedulerException" type="org.quartz.SchedulerException">
</exception>
</method>
<method name="setProperties"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="properties" type="java.util.Properties">
</parameter>
</method>
<method name="shutdown"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="waitForJobsToComplete" type="boolean">
</parameter>
</method>
<method name="stop"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="unscheduleJob"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jobName" type="java.lang.String">
</parameter>
<parameter name="groupName" type="java.lang.String">
</parameter>
<exception name="SchedulerException" type="org.quartz.SchedulerException">
</exception>
</method>
</class>
<interface name="Scheduler"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="addGlobalJobListener"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="org.quartz.JobListener">
</parameter>
<exception name="SchedulerException" type="org.quartz.SchedulerException">
</exception>
</method>
<method name="addGlobalTriggerListener"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="org.quartz.TriggerListener">
</parameter>
<exception name="SchedulerException" type="org.quartz.SchedulerException">
</exception>
</method>
<method name="getProperties"
 return="java.util.Properties"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="interruptSchedule"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jobName" type="java.lang.String">
</parameter>
<parameter name="groupName" type="java.lang.String">
</parameter>
<exception name="SchedulerException" type="org.quartz.SchedulerException">
</exception>
</method>
<method name="scheduleJob"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jobDetail" type="org.quartz.JobDetail">
</parameter>
<parameter name="trigger" type="org.quartz.Trigger">
</parameter>
<exception name="SchedulerException" type="org.quartz.SchedulerException">
</exception>
</method>
<method name="setProperties"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="properties" type="java.util.Properties">
</parameter>
</method>
<method name="shutdown"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="waitForJobsToComplete" type="boolean">
</parameter>
</method>
<method name="unscheduleJob"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jobName" type="java.lang.String">
</parameter>
<parameter name="groupName" type="java.lang.String">
</parameter>
<exception name="SchedulerException" type="org.quartz.SchedulerException">
</exception>
</method>
</interface>
</package>
<package name="org.apache.archiva.redback.components.scheduler.configuration"
>
<class name="SchedulerConfiguration"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="SchedulerConfiguration"
 type="org.apache.archiva.redback.components.scheduler.configuration.SchedulerConfiguration"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getClassLoadHelper"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getContextKey"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getDbFailureRetryInterval"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getIdleWaitTime"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getInstanceId"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getInstanceName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getThreadName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUserTransactionURL"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getWrapJobExecutionInUserTransaction"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setClassLoadHelper"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="classLoadHelper" type="java.lang.String">
</parameter>
</method>
<method name="setContextKey"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="contextKey" type="java.lang.String">
</parameter>
</method>
<method name="setDbFailureRetryInterval"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dbFailureRetryInterval" type="java.lang.String">
</parameter>
</method>
<method name="setIdleWaitTime"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="idleWaitTime" type="java.lang.String">
</parameter>
</method>
<method name="setInstanceId"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="InstanceId" type="java.lang.String">
</parameter>
</method>
<method name="setInstanceName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="instanceName" type="java.lang.String">
</parameter>
</method>
<method name="setThreadName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="threadName" type="java.lang.String">
</parameter>
</method>
<method name="setUserTransactionURL"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userTransactionURL" type="java.lang.String">
</parameter>
</method>
<method name="setWrapJobExecutionInUserTransaction"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="wrapJobExecutionInUserTransaction" type="java.lang.String">
</parameter>
</method>
</class>
</package>
</api>
