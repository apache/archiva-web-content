<api>
<package name="org.apache.archiva.redback.authentication"
>
<class name="AbstractAuthenticator"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.authentication.Authenticator">
</implements>
<constructor name="AbstractAuthenticator"
 type="org.apache.archiva.redback.authentication.AbstractAuthenticator"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="initialize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="AuthenticationException" type="org.apache.archiva.redback.authentication.AuthenticationException">
</exception>
</method>
</class>
<class name="AuthenticationConstants"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="AuthenticationConstants"
 type="org.apache.archiva.redback.authentication.AuthenticationConstants"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<field name="AUTHN_LOCKED_USER_EXCEPTION"
 type="int"
 transient="false"
 volatile="false"
 value="3"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="AUTHN_MUST_CHANGE_PASSWORD_EXCEPTION"
 type="int"
 transient="false"
 volatile="false"
 value="4"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="AUTHN_NO_SUCH_USER"
 type="int"
 transient="false"
 volatile="false"
 value="1"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="AUTHN_RUNTIME_EXCEPTION"
 type="int"
 transient="false"
 volatile="false"
 value="2"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<interface name="AuthenticationDataSource"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getUsername"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isEnforcePasswordChange"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</interface>
<class name="AuthenticationException"
 extends="java.lang.Exception"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="AuthenticationException"
 type="org.apache.archiva.redback.authentication.AuthenticationException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="AuthenticationException"
 type="org.apache.archiva.redback.authentication.AuthenticationException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
</constructor>
<constructor name="AuthenticationException"
 type="org.apache.archiva.redback.authentication.AuthenticationException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="cause" type="java.lang.Throwable">
</parameter>
</constructor>
<constructor name="AuthenticationException"
 type="org.apache.archiva.redback.authentication.AuthenticationException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cause" type="java.lang.Throwable">
</parameter>
</constructor>
</class>
<class name="AuthenticationFailureCause"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="AuthenticationFailureCause"
 type="org.apache.archiva.redback.authentication.AuthenticationFailureCause"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cause" type="int">
</parameter>
<parameter name="message" type="java.lang.String">
</parameter>
</constructor>
<method name="getCause"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getMessage"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUser"
 return="org.apache.archiva.redback.users.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setCause"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cause" type="int">
</parameter>
</method>
<method name="setMessage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
</method>
<method name="setUser"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
</method>
<method name="user"
 return="org.apache.archiva.redback.authentication.AuthenticationFailureCause"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
</method>
</class>
<interface name="AuthenticationManager"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="authenticate"
 return="org.apache.archiva.redback.authentication.AuthenticationResult"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="source" type="org.apache.archiva.redback.authentication.AuthenticationDataSource">
</parameter>
<exception name="AccountLockedException" type="org.apache.archiva.redback.policy.AccountLockedException">
</exception>
<exception name="AuthenticationException" type="org.apache.archiva.redback.authentication.AuthenticationException">
</exception>
<exception name="MustChangePasswordException" type="org.apache.archiva.redback.policy.MustChangePasswordException">
</exception>
</method>
<method name="getAuthenticators"
 return="java.util.List&lt;org.apache.archiva.redback.authentication.Authenticator&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getId"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</interface>
<class name="AuthenticationResult"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="AuthenticationResult"
 type="org.apache.archiva.redback.authentication.AuthenticationResult"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="AuthenticationResult"
 type="org.apache.archiva.redback.authentication.AuthenticationResult"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="authenticated" type="boolean">
</parameter>
<parameter name="principal" type="java.lang.String">
</parameter>
<parameter name="exception" type="java.lang.Exception">
</parameter>
</constructor>
<constructor name="AuthenticationResult"
 type="org.apache.archiva.redback.authentication.AuthenticationResult"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="authenticated" type="boolean">
</parameter>
<parameter name="principal" type="java.lang.String">
</parameter>
<parameter name="exception" type="java.lang.Exception">
</parameter>
<parameter name="authenticationFailureCauses" type="java.util.List&lt;org.apache.archiva.redback.authentication.AuthenticationFailureCause&gt;">
</parameter>
</constructor>
<method name="getAuthenticationFailureCauses"
 return="java.util.List&lt;org.apache.archiva.redback.authentication.AuthenticationFailureCause&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getException"
 return="java.lang.Exception"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPrincipal"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUser"
 return="org.apache.archiva.redback.users.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isAuthenticated"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setUser"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
</method>
<method name="user"
 return="org.apache.archiva.redback.authentication.AuthenticationResult"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
</method>
</class>
<interface name="Authenticator"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="authenticate"
 return="org.apache.archiva.redback.authentication.AuthenticationResult"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="source" type="org.apache.archiva.redback.authentication.AuthenticationDataSource">
</parameter>
<exception name="AccountLockedException" type="org.apache.archiva.redback.policy.AccountLockedException">
</exception>
<exception name="AuthenticationException" type="org.apache.archiva.redback.authentication.AuthenticationException">
</exception>
<exception name="MustChangePasswordException" type="org.apache.archiva.redback.policy.MustChangePasswordException">
</exception>
</method>
<method name="getId"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="initialize"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="AuthenticationException" type="org.apache.archiva.redback.authentication.AuthenticationException">
</exception>
</method>
<method name="supportsDataSource"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="source" type="org.apache.archiva.redback.authentication.AuthenticationDataSource">
</parameter>
</method>
</interface>
<class name="DefaultAuthenticationManager"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.authentication.AuthenticationManager">
</implements>
<constructor name="DefaultAuthenticationManager"
 type="org.apache.archiva.redback.authentication.DefaultAuthenticationManager"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="authenticate"
 return="org.apache.archiva.redback.authentication.AuthenticationResult"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="source" type="org.apache.archiva.redback.authentication.AuthenticationDataSource">
</parameter>
<exception name="AccountLockedException" type="org.apache.archiva.redback.policy.AccountLockedException">
</exception>
<exception name="AuthenticationException" type="org.apache.archiva.redback.authentication.AuthenticationException">
</exception>
<exception name="MustChangePasswordException" type="org.apache.archiva.redback.policy.MustChangePasswordException">
</exception>
</method>
<method name="getAuthenticators"
 return="java.util.List&lt;org.apache.archiva.redback.authentication.Authenticator&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getId"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="initialize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="NotAuthenticatedException"
 extends="java.lang.Exception"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="NotAuthenticatedException"
 type="org.apache.archiva.redback.authentication.NotAuthenticatedException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="NotAuthenticatedException"
 type="org.apache.archiva.redback.authentication.NotAuthenticatedException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
</constructor>
<constructor name="NotAuthenticatedException"
 type="org.apache.archiva.redback.authentication.NotAuthenticatedException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="cause" type="java.lang.Exception">
</parameter>
</constructor>
</class>
<class name="PasswordBasedAuthenticationDataSource"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.authentication.AuthenticationDataSource">
</implements>
<constructor name="PasswordBasedAuthenticationDataSource"
 type="org.apache.archiva.redback.authentication.PasswordBasedAuthenticationDataSource"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="PasswordBasedAuthenticationDataSource"
 type="org.apache.archiva.redback.authentication.PasswordBasedAuthenticationDataSource"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
<parameter name="password" type="java.lang.String">
</parameter>
</constructor>
<method name="getPassword"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUsername"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isEnforcePasswordChange"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="password" type="java.lang.String">
</parameter>
</method>
<method name="setPrincipal"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
</method>
</class>
<class name="TokenBasedAuthenticationDataSource"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.authentication.AuthenticationDataSource">
</implements>
<constructor name="TokenBasedAuthenticationDataSource"
 type="org.apache.archiva.redback.authentication.TokenBasedAuthenticationDataSource"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
</constructor>
<constructor name="TokenBasedAuthenticationDataSource"
 type="org.apache.archiva.redback.authentication.TokenBasedAuthenticationDataSource"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getToken"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUsername"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isEnforcePasswordChange"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setEnforcePasswordChange"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enforcePasswordChange" type="boolean">
</parameter>
</method>
<method name="setPrincipal"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
</method>
<method name="setToken"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="token" type="java.lang.String">
</parameter>
</method>
</class>
</package>
<package name="org.apache.archiva.redback.authentication.keystore"
>
<class name="KeyStoreAuthenticator"
 extends="org.apache.archiva.redback.authentication.AbstractAuthenticator"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.authentication.Authenticator">
</implements>
<constructor name="KeyStoreAuthenticator"
 type="org.apache.archiva.redback.authentication.keystore.KeyStoreAuthenticator"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="authenticate"
 return="org.apache.archiva.redback.authentication.AuthenticationResult"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="source" type="org.apache.archiva.redback.authentication.AuthenticationDataSource">
</parameter>
<exception name="AccountLockedException" type="org.apache.archiva.redback.policy.AccountLockedException">
</exception>
<exception name="AuthenticationException" type="org.apache.archiva.redback.authentication.AuthenticationException">
</exception>
<exception name="MustChangePasswordException" type="org.apache.archiva.redback.policy.MustChangePasswordException">
</exception>
</method>
<method name="getId"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="supportsDataSource"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="source" type="org.apache.archiva.redback.authentication.AuthenticationDataSource">
</parameter>
</method>
</class>
</package>
<package name="org.apache.archiva.redback.authentication.ldap"
>
<class name="LdapBindAuthenticator"
 extends="org.apache.archiva.redback.authentication.AbstractAuthenticator"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.authentication.Authenticator">
</implements>
<constructor name="LdapBindAuthenticator"
 type="org.apache.archiva.redback.authentication.ldap.LdapBindAuthenticator"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="authenticate"
 return="org.apache.archiva.redback.authentication.AuthenticationResult"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="s" type="org.apache.archiva.redback.authentication.AuthenticationDataSource">
</parameter>
<exception name="AuthenticationException" type="org.apache.archiva.redback.authentication.AuthenticationException">
</exception>
</method>
<method name="getId"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="supportsDataSource"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="source" type="org.apache.archiva.redback.authentication.AuthenticationDataSource">
</parameter>
</method>
</class>
</package>
<package name="org.apache.archiva.redback.authentication.memory"
>
<class name="MemoryAuthenticator"
 extends="org.apache.archiva.redback.authentication.AbstractAuthenticator"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.authentication.Authenticator">
</implements>
<constructor name="MemoryAuthenticator"
 type="org.apache.archiva.redback.authentication.memory.MemoryAuthenticator"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="authenticate"
 return="org.apache.archiva.redback.authentication.AuthenticationResult"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="s" type="org.apache.archiva.redback.authentication.AuthenticationDataSource">
</parameter>
<exception name="AuthenticationException" type="org.apache.archiva.redback.authentication.AuthenticationException">
</exception>
</method>
<method name="getId"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLogin"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPassword"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setLogin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="login" type="java.lang.String">
</parameter>
</method>
<method name="setPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="password" type="java.lang.String">
</parameter>
</method>
<method name="supportsDataSource"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="source" type="org.apache.archiva.redback.authentication.AuthenticationDataSource">
</parameter>
</method>
</class>
</package>
<package name="org.apache.archiva.redback.authentication.open"
>
<class name="OpenAuthenticator"
 extends="org.apache.archiva.redback.authentication.AbstractAuthenticator"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.authentication.Authenticator">
</implements>
<constructor name="OpenAuthenticator"
 type="org.apache.archiva.redback.authentication.open.OpenAuthenticator"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="authenticate"
 return="org.apache.archiva.redback.authentication.AuthenticationResult"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="s" type="org.apache.archiva.redback.authentication.AuthenticationDataSource">
</parameter>
<exception name="AccountLockedException" type="org.apache.archiva.redback.policy.AccountLockedException">
</exception>
<exception name="AuthenticationException" type="org.apache.archiva.redback.authentication.AuthenticationException">
</exception>
</method>
<method name="getId"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="supportsDataSource"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="source" type="org.apache.archiva.redback.authentication.AuthenticationDataSource">
</parameter>
</method>
</class>
</package>
<package name="org.apache.archiva.redback.authentication.users"
>
<class name="UserManagerAuthenticator"
 extends="org.apache.archiva.redback.authentication.AbstractAuthenticator"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.authentication.Authenticator">
</implements>
<constructor name="UserManagerAuthenticator"
 type="org.apache.archiva.redback.authentication.users.UserManagerAuthenticator"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="authenticate"
 return="org.apache.archiva.redback.authentication.AuthenticationResult"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ds" type="org.apache.archiva.redback.authentication.AuthenticationDataSource">
</parameter>
<exception name="AccountLockedException" type="org.apache.archiva.redback.policy.AccountLockedException">
</exception>
<exception name="AuthenticationException" type="org.apache.archiva.redback.authentication.AuthenticationException">
</exception>
<exception name="MustChangePasswordException" type="org.apache.archiva.redback.policy.MustChangePasswordException">
</exception>
</method>
<method name="getId"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSecurityPolicy"
 return="org.apache.archiva.redback.policy.UserSecurityPolicy"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUserManager"
 return="org.apache.archiva.redback.users.UserManager"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setSecurityPolicy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="securityPolicy" type="org.apache.archiva.redback.policy.UserSecurityPolicy">
</parameter>
</method>
<method name="setUserManager"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userManager" type="org.apache.archiva.redback.users.UserManager">
</parameter>
</method>
<method name="supportsDataSource"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="source" type="org.apache.archiva.redback.authentication.AuthenticationDataSource">
</parameter>
</method>
</class>
</package>
<package name="org.apache.archiva.redback.authorization"
>
<class name="AuthorizationDataSource"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="AuthorizationDataSource"
 type="org.apache.archiva.redback.authorization.AuthorizationDataSource"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
<parameter name="permission" type="java.lang.String">
</parameter>
</constructor>
<constructor name="AuthorizationDataSource"
 type="org.apache.archiva.redback.authorization.AuthorizationDataSource"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
<parameter name="permission" type="java.lang.String">
</parameter>
<parameter name="resource" type="java.lang.String">
</parameter>
</constructor>
<method name="getPermission"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPrincipal"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getResource"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUser"
 return="org.apache.archiva.redback.users.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setPermission"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permission" type="java.lang.String">
</parameter>
</method>
<method name="setPrincipal"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
</method>
<method name="setResource"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="resource" type="java.lang.String">
</parameter>
</method>
<method name="setUser"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
</method>
</class>
<class name="AuthorizationException"
 extends="java.lang.Exception"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="AuthorizationException"
 type="org.apache.archiva.redback.authorization.AuthorizationException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
</constructor>
<constructor name="AuthorizationException"
 type="org.apache.archiva.redback.authorization.AuthorizationException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="cause" type="java.lang.Exception">
</parameter>
</constructor>
</class>
<class name="AuthorizationResult"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="AuthorizationResult"
 type="org.apache.archiva.redback.authorization.AuthorizationResult"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="authorized" type="boolean">
</parameter>
<parameter name="principal" type="java.lang.Object">
</parameter>
<parameter name="exception" type="java.lang.Exception">
</parameter>
</constructor>
<method name="getException"
 return="java.lang.Exception"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPrincipal"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isAuthorized"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<interface name="Authorizer"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getDescriptionKey"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getId"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isAuthorized"
 return="org.apache.archiva.redback.authorization.AuthorizationResult"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="source" type="org.apache.archiva.redback.authorization.AuthorizationDataSource">
</parameter>
<exception name="AuthorizationException" type="org.apache.archiva.redback.authorization.AuthorizationException">
</exception>
</method>
<method name="isFinalImplementation"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</interface>
<class name="NotAuthorizedException"
 extends="java.lang.Exception"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="NotAuthorizedException"
 type="org.apache.archiva.redback.authorization.NotAuthorizedException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="NotAuthorizedException"
 type="org.apache.archiva.redback.authorization.NotAuthorizedException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
</constructor>
<constructor name="NotAuthorizedException"
 type="org.apache.archiva.redback.authorization.NotAuthorizedException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="cause" type="java.lang.Exception">
</parameter>
</constructor>
</class>
<class name="RedbackAuthorization"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="java.lang.annotation.Annotation">
</implements>
</class>
<class name="UnauthorizedException"
 extends="java.lang.Exception"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="UnauthorizedException"
 type="org.apache.archiva.redback.authorization.UnauthorizedException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
</constructor>
<constructor name="UnauthorizedException"
 type="org.apache.archiva.redback.authorization.UnauthorizedException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="t" type="java.lang.Throwable">
</parameter>
</constructor>
</class>
</package>
<package name="org.apache.archiva.redback.authorization.open"
>
<class name="OpenAuthorizer"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.authorization.Authorizer">
</implements>
<constructor name="OpenAuthorizer"
 type="org.apache.archiva.redback.authorization.open.OpenAuthorizer"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getDescriptionKey"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getId"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isAuthorized"
 return="org.apache.archiva.redback.authorization.AuthorizationResult"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="source" type="org.apache.archiva.redback.authorization.AuthorizationDataSource">
</parameter>
<exception name="AuthorizationException" type="org.apache.archiva.redback.authorization.AuthorizationException">
</exception>
</method>
<method name="isFinalImplementation"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
</package>
<package name="org.apache.archiva.redback.authorization.rbac"
>
<class name="RbacAuthorizer"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.authorization.Authorizer">
</implements>
<constructor name="RbacAuthorizer"
 type="org.apache.archiva.redback.authorization.rbac.RbacAuthorizer"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getDescriptionKey"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getEvaluator"
 return="org.apache.archiva.redback.authorization.rbac.evaluator.PermissionEvaluator"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getId"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getManager"
 return="org.apache.archiva.redback.rbac.RBACManager"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUserManager"
 return="org.apache.archiva.redback.users.UserManager"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isAuthorized"
 return="org.apache.archiva.redback.authorization.AuthorizationResult"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="source" type="org.apache.archiva.redback.authorization.AuthorizationDataSource">
</parameter>
<exception name="AuthorizationException" type="org.apache.archiva.redback.authorization.AuthorizationException">
</exception>
</method>
<method name="isFinalImplementation"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setEvaluator"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="evaluator" type="org.apache.archiva.redback.authorization.rbac.evaluator.PermissionEvaluator">
</parameter>
</method>
<method name="setManager"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="manager" type="org.apache.archiva.redback.rbac.RBACManager">
</parameter>
</method>
<method name="setUserManager"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userManager" type="org.apache.archiva.redback.users.UserManager">
</parameter>
</method>
</class>
</package>
<package name="org.apache.archiva.redback.authorization.rbac.evaluator"
>
<class name="DefaultPermissionEvaluator"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.authorization.rbac.evaluator.PermissionEvaluator">
</implements>
<constructor name="DefaultPermissionEvaluator"
 type="org.apache.archiva.redback.authorization.rbac.evaluator.DefaultPermissionEvaluator"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="evaluate"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permission" type="org.apache.archiva.redback.rbac.Permission">
</parameter>
<parameter name="operation" type="java.lang.String">
</parameter>
<parameter name="resource" type="java.lang.String">
</parameter>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="PermissionEvaluationException" type="org.apache.archiva.redback.authorization.rbac.evaluator.PermissionEvaluationException">
</exception>
</method>
<method name="getUserManager"
 return="org.apache.archiva.redback.users.UserManager"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setUserManager"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userManager" type="org.apache.archiva.redback.users.UserManager">
</parameter>
</method>
</class>
<class name="PermissionEvaluationException"
 extends="java.lang.Exception"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PermissionEvaluationException"
 type="org.apache.archiva.redback.authorization.rbac.evaluator.PermissionEvaluationException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="string" type="java.lang.String">
</parameter>
</constructor>
<constructor name="PermissionEvaluationException"
 type="org.apache.archiva.redback.authorization.rbac.evaluator.PermissionEvaluationException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="string" type="java.lang.String">
</parameter>
<parameter name="throwable" type="java.lang.Throwable">
</parameter>
</constructor>
</class>
<interface name="PermissionEvaluator"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="evaluate"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permission" type="org.apache.archiva.redback.rbac.Permission">
</parameter>
<parameter name="operation" type="java.lang.String">
</parameter>
<parameter name="resource" type="java.lang.String">
</parameter>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="PermissionEvaluationException" type="org.apache.archiva.redback.authorization.rbac.evaluator.PermissionEvaluationException">
</exception>
</method>
</interface>
</package>
<package name="org.apache.archiva.redback.common.jdo"
>
<class name="UserConfigurableJdoFactory"
 extends="org.apache.archiva.redback.components.jdo.DefaultConfigurableJdoFactory"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="UserConfigurableJdoFactory"
 type="org.apache.archiva.redback.common.jdo.UserConfigurableJdoFactory"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getConfig"
 return="org.apache.archiva.redback.configuration.UserConfiguration"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setConfig"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="config" type="org.apache.archiva.redback.configuration.UserConfiguration">
</parameter>
</method>
</class>
</package>
<package name="org.apache.archiva.redback.common.jdo.test"
>
<class name="StoreManagerDebug"
 extends="org.jpox.store.rdbms.RDBMSManager"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="StoreManagerDebug"
 type="org.apache.archiva.redback.common.jdo.test.StoreManagerDebug"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="clr" type="org.jpox.ClassLoaderResolver">
</parameter>
<parameter name="pmf" type="org.jpox.AbstractPersistenceManagerFactory">
</parameter>
<parameter name="userName" type="java.lang.String">
</parameter>
<parameter name="password" type="java.lang.String">
</parameter>
</constructor>
<method name="counter"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getConfiguredStoreManager"
 return="org.apache.archiva.redback.common.jdo.test.StoreManagerDebug"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="persistenceManager" type="javax.jdo.PersistenceManager">
</parameter>
</method>
<method name="resetCounter"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setup"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pmf" type="org.jpox.AbstractPersistenceManagerFactory">
</parameter>
</method>
</class>
</package>
<package name="org.apache.archiva.redback.common.ldap"
>
<class name="LdapUtils"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getAttributeValue"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="attributes" type="javax.naming.directory.Attributes">
</parameter>
<parameter name="attrName" type="java.lang.String">
</parameter>
<parameter name="attributeDescription" type="java.lang.String">
</parameter>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="getAttributeValueFromByteArray"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="attributes" type="javax.naming.directory.Attributes">
</parameter>
<parameter name="attrName" type="java.lang.String">
</parameter>
<parameter name="attributeDescription" type="java.lang.String">
</parameter>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="getLabeledUriValue"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="attributes" type="javax.naming.directory.Attributes">
</parameter>
<parameter name="attrName" type="java.lang.String">
</parameter>
<parameter name="label" type="java.lang.String">
</parameter>
<parameter name="attributeDescription" type="java.lang.String">
</parameter>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
</class>
<class name="MappingException"
 extends="java.lang.Exception"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="MappingException"
 type="org.apache.archiva.redback.common.ldap.MappingException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="cause" type="java.lang.Throwable">
</parameter>
</constructor>
<constructor name="MappingException"
 type="org.apache.archiva.redback.common.ldap.MappingException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
</constructor>
</class>
</package>
<package name="org.apache.archiva.redback.common.ldap.connection"
>
<class name="ConfigurableLdapConnectionFactory"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.common.ldap.connection.LdapConnectionFactory">
</implements>
<constructor name="ConfigurableLdapConnectionFactory"
 type="org.apache.archiva.redback.common.ldap.connection.ConfigurableLdapConnectionFactory"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="addObjectFactory"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="objectFactoryClass" type="java.lang.Class&lt;? extends javax.naming.spi.ObjectFactory&gt;">
</parameter>
</method>
<method name="addStateFactory"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stateFactoryClass" type="java.lang.Class&lt;? extends javax.naming.spi.StateFactory&gt;">
</parameter>
</method>
<method name="getAuthenticationMethod"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getBaseDn"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getBaseDnLdapName"
 return="javax.naming.ldap.LdapName"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="LdapException" type="org.apache.archiva.redback.common.ldap.connection.LdapException">
</exception>
</method>
<method name="getBindDn"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getConnection"
 return="org.apache.archiva.redback.common.ldap.connection.DefaultLdapConnection"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="LdapException" type="org.apache.archiva.redback.common.ldap.connection.LdapException">
</exception>
</method>
<method name="getConnection"
 return="org.apache.archiva.redback.common.ldap.connection.DefaultLdapConnection"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="subRdn" type="javax.naming.ldap.Rdn">
</parameter>
<exception name="LdapException" type="org.apache.archiva.redback.common.ldap.connection.LdapException">
</exception>
</method>
<method name="getConnection"
 return="org.apache.archiva.redback.common.ldap.connection.DefaultLdapConnection"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="bindDn" type="java.lang.String">
</parameter>
<parameter name="password" type="java.lang.String">
</parameter>
<exception name="LdapException" type="org.apache.archiva.redback.common.ldap.connection.LdapException">
</exception>
</method>
<method name="getConnection"
 return="org.apache.archiva.redback.common.ldap.connection.DefaultLdapConnection"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ldapConnectionConfiguration" type="org.apache.archiva.redback.common.ldap.connection.LdapConnectionConfiguration">
</parameter>
<exception name="LdapException" type="org.apache.archiva.redback.common.ldap.connection.LdapException">
</exception>
</method>
<method name="getContextFactory"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getExtraProperties"
 return="java.util.Properties"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getHostname"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLdapConnectionConfiguration"
 return="org.apache.archiva.redback.common.ldap.connection.LdapConnectionConfiguration"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPassword"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPort"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUserConf"
 return="org.apache.archiva.redback.configuration.UserConfiguration"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="initialize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isSsl"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setAuthenticationMethod"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="authenticationMethod" type="java.lang.String">
</parameter>
</method>
<method name="setBaseDn"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="baseDn" type="java.lang.String">
</parameter>
</method>
<method name="setBindDn"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="bindDn" type="java.lang.String">
</parameter>
</method>
<method name="setContextFactory"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="contextFactory" type="java.lang.String">
</parameter>
</method>
<method name="setExtraProperties"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="extraProperties" type="java.util.Properties">
</parameter>
</method>
<method name="setHostname"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="hostname" type="java.lang.String">
</parameter>
</method>
<method name="setLdapConnectionConfiguration"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ldapConnectionConfiguration" type="org.apache.archiva.redback.common.ldap.connection.LdapConnectionConfiguration">
</parameter>
</method>
<method name="setPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="password" type="java.lang.String">
</parameter>
</method>
<method name="setPort"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="port" type="int">
</parameter>
</method>
<method name="setSsl"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ssl" type="boolean">
</parameter>
</method>
<method name="setUserConf"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userConf" type="org.apache.archiva.redback.configuration.UserConfiguration">
</parameter>
</method>
</class>
<class name="DefaultLdapConnection"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.common.ldap.connection.LdapConnection">
</implements>
<constructor name="DefaultLdapConnection"
 type="org.apache.archiva.redback.common.ldap.connection.DefaultLdapConnection"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="config" type="org.apache.archiva.redback.common.ldap.connection.LdapConnectionConfiguration">
</parameter>
<parameter name="subRdn" type="javax.naming.ldap.Rdn">
</parameter>
<exception name="LdapException" type="org.apache.archiva.redback.common.ldap.connection.LdapException">
</exception>
</constructor>
<constructor name="DefaultLdapConnection"
 type="org.apache.archiva.redback.common.ldap.connection.DefaultLdapConnection"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="config" type="org.apache.archiva.redback.common.ldap.connection.LdapConnectionConfiguration">
</parameter>
<parameter name="bindDn" type="java.lang.String">
</parameter>
<parameter name="password" type="java.lang.String">
</parameter>
<exception name="LdapException" type="org.apache.archiva.redback.common.ldap.connection.LdapException">
</exception>
</constructor>
<method name="close"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getBaseDnRdns"
 return="java.util.List&lt;javax.naming.ldap.Rdn&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getConfiguration"
 return="org.apache.archiva.redback.common.ldap.connection.LdapConnectionConfiguration"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getDirContext"
 return="javax.naming.directory.DirContext"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getEnvironment"
 return="java.util.Hashtable&lt;java.lang.Object, java.lang.Object&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="LdapException" type="org.apache.archiva.redback.common.ldap.connection.LdapException">
</exception>
</method>
</class>
<interface name="LdapConnection"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="close"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getBaseDnRdns"
 return="java.util.List&lt;javax.naming.ldap.Rdn&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getConfiguration"
 return="org.apache.archiva.redback.common.ldap.connection.LdapConnectionConfiguration"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getDirContext"
 return="javax.naming.directory.DirContext"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getEnvironment"
 return="java.util.Hashtable&lt;java.lang.Object, java.lang.Object&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="LdapException" type="org.apache.archiva.redback.common.ldap.connection.LdapException">
</exception>
</method>
</interface>
<class name="LdapConnectionConfiguration"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="LdapConnectionConfiguration"
 type="org.apache.archiva.redback.common.ldap.connection.LdapConnectionConfiguration"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="LdapConnectionConfiguration"
 type="org.apache.archiva.redback.common.ldap.connection.LdapConnectionConfiguration"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="hostname" type="java.lang.String">
</parameter>
<parameter name="port" type="int">
</parameter>
<parameter name="baseDn" type="java.lang.String">
</parameter>
<parameter name="contextFactory" type="java.lang.String">
</parameter>
<parameter name="bindDn" type="java.lang.String">
</parameter>
<parameter name="password" type="java.lang.String">
</parameter>
<parameter name="authenticationMethod" type="java.lang.String">
</parameter>
<parameter name="extraProperties" type="java.util.Properties">
</parameter>
<exception name="InvalidNameException" type="javax.naming.InvalidNameException">
</exception>
<exception name="LdapException" type="org.apache.archiva.redback.common.ldap.connection.LdapException">
</exception>
</constructor>
<constructor name="LdapConnectionConfiguration"
 type="org.apache.archiva.redback.common.ldap.connection.LdapConnectionConfiguration"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="hostname" type="java.lang.String">
</parameter>
<parameter name="port" type="int">
</parameter>
<parameter name="baseDn" type="javax.naming.ldap.LdapName">
</parameter>
<parameter name="contextFactory" type="java.lang.String">
</parameter>
<exception name="LdapException" type="org.apache.archiva.redback.common.ldap.connection.LdapException">
</exception>
</constructor>
<method name="check"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="LdapException" type="org.apache.archiva.redback.common.ldap.connection.LdapException">
</exception>
</method>
<method name="getAuthenticationMethod"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getBaseDn"
 return="javax.naming.ldap.LdapName"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getBindDn"
 return="javax.naming.ldap.LdapName"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getContextFactory"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getExtraProperties"
 return="java.util.Properties"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getHostname"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getObjectFactories"
 return="java.util.List&lt;java.lang.Class&lt;?&gt;&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPassword"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPort"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getStateFactories"
 return="java.util.List&lt;java.lang.Class&lt;?&gt;&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isSsl"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setAuthenticationMethod"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="authenticationMethod" type="java.lang.String">
</parameter>
</method>
<method name="setBaseDn"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="baseDn" type="javax.naming.ldap.LdapName">
</parameter>
</method>
<method name="setBaseDn"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="baseDn" type="java.lang.String">
</parameter>
<exception name="InvalidNameException" type="javax.naming.InvalidNameException">
</exception>
</method>
<method name="setBindDn"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="bindDn" type="javax.naming.ldap.LdapName">
</parameter>
</method>
<method name="setBindDn"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="bindDn" type="java.lang.String">
</parameter>
<exception name="InvalidNameException" type="javax.naming.InvalidNameException">
</exception>
</method>
<method name="setContextFactory"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="contextFactory" type="java.lang.String">
</parameter>
</method>
<method name="setExtraProperties"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="extraProperties" type="java.util.Properties">
</parameter>
</method>
<method name="setHostname"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="hostname" type="java.lang.String">
</parameter>
</method>
<method name="setObjectFactories"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="objectFactories" type="java.util.List&lt;java.lang.Class&lt;?&gt;&gt;">
</parameter>
</method>
<method name="setPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="password" type="java.lang.String">
</parameter>
</method>
<method name="setPort"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="port" type="int">
</parameter>
</method>
<method name="setSsl"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ssl" type="boolean">
</parameter>
</method>
<method name="setStateFactories"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stateFactories" type="java.util.List&lt;java.lang.Class&lt;?&gt;&gt;">
</parameter>
</method>
</class>
<interface name="LdapConnectionFactory"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="addObjectFactory"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="objectFactoryClass" type="java.lang.Class&lt;? extends javax.naming.spi.ObjectFactory&gt;">
</parameter>
</method>
<method name="addStateFactory"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="objectFactoryClass" type="java.lang.Class&lt;? extends javax.naming.spi.StateFactory&gt;">
</parameter>
</method>
<method name="getBaseDnLdapName"
 return="javax.naming.ldap.LdapName"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="LdapException" type="org.apache.archiva.redback.common.ldap.connection.LdapException">
</exception>
</method>
<method name="getConnection"
 return="org.apache.archiva.redback.common.ldap.connection.LdapConnection"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="LdapException" type="org.apache.archiva.redback.common.ldap.connection.LdapException">
</exception>
</method>
<method name="getConnection"
 return="org.apache.archiva.redback.common.ldap.connection.LdapConnection"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ldapConnectionConfiguration" type="org.apache.archiva.redback.common.ldap.connection.LdapConnectionConfiguration">
</parameter>
<exception name="LdapException" type="org.apache.archiva.redback.common.ldap.connection.LdapException">
</exception>
</method>
<method name="getConnection"
 return="org.apache.archiva.redback.common.ldap.connection.LdapConnection"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="subRdn" type="javax.naming.ldap.Rdn">
</parameter>
<exception name="LdapException" type="org.apache.archiva.redback.common.ldap.connection.LdapException">
</exception>
</method>
<method name="getConnection"
 return="org.apache.archiva.redback.common.ldap.connection.LdapConnection"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="bindDn" type="java.lang.String">
</parameter>
<parameter name="password" type="java.lang.String">
</parameter>
<exception name="LdapException" type="org.apache.archiva.redback.common.ldap.connection.LdapException">
</exception>
</method>
<method name="initialize"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</interface>
<class name="LdapException"
 extends="javax.naming.NamingException"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="LdapException"
 type="org.apache.archiva.redback.common.ldap.connection.LdapException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
</constructor>
<constructor name="LdapException"
 type="org.apache.archiva.redback.common.ldap.connection.LdapException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="t" type="java.lang.Throwable">
</parameter>
</constructor>
</class>
</package>
<package name="org.apache.archiva.redback.common.ldap.role"
>
<class name="DefaultLdapRoleMapper"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.common.ldap.role.LdapRoleMapper">
</implements>
<constructor name="DefaultLdapRoleMapper"
 type="org.apache.archiva.redback.common.ldap.role.DefaultLdapRoleMapper"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="closeNamingEnumeration"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="namingEnumeration" type="javax.naming.NamingEnumeration">
</parameter>
</method>
<method name="findGroupName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="role" type="java.lang.String">
</parameter>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="getAllGroups"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="context" type="javax.naming.directory.DirContext">
</parameter>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="getAllRoles"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="context" type="javax.naming.directory.DirContext">
</parameter>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="getBaseDn"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getGroups"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<parameter name="context" type="javax.naming.directory.DirContext">
</parameter>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="getGroupsDn"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getGroupsMember"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="group" type="java.lang.String">
</parameter>
<parameter name="context" type="javax.naming.directory.DirContext">
</parameter>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="getLdapGroupClass"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getRoles"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<parameter name="context" type="javax.naming.directory.DirContext">
</parameter>
<parameter name="realRoles" type="java.util.Collection&lt;java.lang.String&gt;">
</parameter>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="getUserIdAttribute"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="hasRole"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="context" type="javax.naming.directory.DirContext">
</parameter>
<parameter name="roleName" type="java.lang.String">
</parameter>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="initialize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isUseDefaultRoleName"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="removeAllRoles"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="context" type="javax.naming.directory.DirContext">
</parameter>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="removeRole"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleName" type="java.lang.String">
</parameter>
<parameter name="context" type="javax.naming.directory.DirContext">
</parameter>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="removeUserRole"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleName" type="java.lang.String">
</parameter>
<parameter name="username" type="java.lang.String">
</parameter>
<parameter name="context" type="javax.naming.directory.DirContext">
</parameter>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="saveRole"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleName" type="java.lang.String">
</parameter>
<parameter name="context" type="javax.naming.directory.DirContext">
</parameter>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="saveUserRole"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleName" type="java.lang.String">
</parameter>
<parameter name="username" type="java.lang.String">
</parameter>
<parameter name="context" type="javax.naming.directory.DirContext">
</parameter>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="setBaseDn"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="baseDn" type="java.lang.String">
</parameter>
</method>
<method name="setGroupsDn"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="groupsDn" type="java.lang.String">
</parameter>
</method>
<method name="setLdapConnectionFactory"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ldapConnectionFactory" type="org.apache.archiva.redback.common.ldap.connection.LdapConnectionFactory">
</parameter>
</method>
<method name="setLdapGroupClass"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ldapGroupClass" type="java.lang.String">
</parameter>
</method>
<method name="setUseDefaultRoleName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="useDefaultRoleName" type="boolean">
</parameter>
</method>
<method name="setUserConf"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userConf" type="org.apache.archiva.redback.configuration.UserConfiguration">
</parameter>
</method>
<method name="setUserIdAttribute"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userIdAttribute" type="java.lang.String">
</parameter>
</method>
</class>
<class name="DefaultLdapRoleMapperConfiguration"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.common.ldap.role.LdapRoleMapperConfiguration">
</implements>
<constructor name="DefaultLdapRoleMapperConfiguration"
 type="org.apache.archiva.redback.common.ldap.role.DefaultLdapRoleMapperConfiguration"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="addLdapMapping"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ldapGroup" type="java.lang.String">
</parameter>
<parameter name="roles" type="java.util.List&lt;java.lang.String&gt;">
</parameter>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="getLdapGroupMappings"
 return="java.util.Map&lt;java.lang.String, java.util.Collection&lt;java.lang.String&gt;&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="removeLdapMapping"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="group" type="java.lang.String">
</parameter>
</method>
<method name="setLdapGroupMappings"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mappings" type="java.util.Map&lt;java.lang.String, java.util.List&lt;java.lang.String&gt;&gt;">
</parameter>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="updateLdapMapping"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ldapGroup" type="java.lang.String">
</parameter>
<parameter name="roles" type="java.util.List&lt;java.lang.String&gt;">
</parameter>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
</class>
<interface name="LdapRoleMapper"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getAllGroups"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="context" type="javax.naming.directory.DirContext">
</parameter>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="getAllRoles"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="context" type="javax.naming.directory.DirContext">
</parameter>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="getGroups"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<parameter name="context" type="javax.naming.directory.DirContext">
</parameter>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="getGroupsDn"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getGroupsMember"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="group" type="java.lang.String">
</parameter>
<parameter name="context" type="javax.naming.directory.DirContext">
</parameter>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="getLdapGroupClass"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getRoles"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<parameter name="context" type="javax.naming.directory.DirContext">
</parameter>
<parameter name="realRoles" type="java.util.Collection&lt;java.lang.String&gt;">
</parameter>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="getUserIdAttribute"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="hasRole"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="context" type="javax.naming.directory.DirContext">
</parameter>
<parameter name="role" type="java.lang.String">
</parameter>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="isUseDefaultRoleName"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="removeAllRoles"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="context" type="javax.naming.directory.DirContext">
</parameter>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="removeRole"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleName" type="java.lang.String">
</parameter>
<parameter name="context" type="javax.naming.directory.DirContext">
</parameter>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="removeUserRole"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleName" type="java.lang.String">
</parameter>
<parameter name="username" type="java.lang.String">
</parameter>
<parameter name="context" type="javax.naming.directory.DirContext">
</parameter>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="saveRole"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleName" type="java.lang.String">
</parameter>
<parameter name="context" type="javax.naming.directory.DirContext">
</parameter>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="saveUserRole"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleName" type="java.lang.String">
</parameter>
<parameter name="username" type="java.lang.String">
</parameter>
<parameter name="context" type="javax.naming.directory.DirContext">
</parameter>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
</interface>
<interface name="LdapRoleMapperConfiguration"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="addLdapMapping"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ldapGroup" type="java.lang.String">
</parameter>
<parameter name="roles" type="java.util.List&lt;java.lang.String&gt;">
</parameter>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="getLdapGroupMappings"
 return="java.util.Map&lt;java.lang.String, java.util.Collection&lt;java.lang.String&gt;&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="removeLdapMapping"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="group" type="java.lang.String">
</parameter>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="setLdapGroupMappings"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mappings" type="java.util.Map&lt;java.lang.String, java.util.List&lt;java.lang.String&gt;&gt;">
</parameter>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="updateLdapMapping"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ldapGroup" type="java.lang.String">
</parameter>
<parameter name="roles" type="java.util.List&lt;java.lang.String&gt;">
</parameter>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
</interface>
</package>
<package name="org.apache.archiva.redback.common.ldap.user"
>
<class name="LdapUser"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.users.User">
</implements>
<constructor name="LdapUser"
 type="org.apache.archiva.redback.common.ldap.user.LdapUser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
</constructor>
<constructor name="LdapUser"
 type="org.apache.archiva.redback.common.ldap.user.LdapUser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<parameter name="fullName" type="java.lang.String">
</parameter>
<parameter name="email" type="java.lang.String">
</parameter>
</constructor>
<constructor name="LdapUser"
 type="org.apache.archiva.redback.common.ldap.user.LdapUser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="addPreviousEncodedPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="encodedPassword" type="java.lang.String">
</parameter>
</method>
<method name="getAccountCreationDate"
 return="java.util.Date"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getCountFailedLoginAttempts"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getEmail"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getEncodedPassword"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getFullName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLastLoginDate"
 return="java.util.Date"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLastPasswordChange"
 return="java.util.Date"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getOriginalAttributes"
 return="javax.naming.directory.Attributes"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPassword"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPreviousEncodedPasswords"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUserManagerId"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUsername"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isLocked"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isPasswordChangeRequired"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isPermanent"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isValidated"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setAccountCreationDate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="date" type="java.util.Date">
</parameter>
</method>
<method name="setCountFailedLoginAttempts"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="count" type="int">
</parameter>
</method>
<method name="setEmail"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="address" type="java.lang.String">
</parameter>
</method>
<method name="setEncodedPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="encodedPassword" type="java.lang.String">
</parameter>
</method>
<method name="setFullName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="setLastLoginDate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="date" type="java.util.Date">
</parameter>
</method>
<method name="setLastPasswordChange"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="passwordChangeDate" type="java.util.Date">
</parameter>
</method>
<method name="setLocked"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="locked" type="boolean">
</parameter>
</method>
<method name="setOriginalAttributes"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="originalAttributes" type="javax.naming.directory.Attributes">
</parameter>
</method>
<method name="setPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rawPassword" type="java.lang.String">
</parameter>
</method>
<method name="setPasswordChangeRequired"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="changeRequired" type="boolean">
</parameter>
</method>
<method name="setPermanent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permanent" type="boolean">
</parameter>
</method>
<method name="setPreviousEncodedPasswords"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="encodedPasswordList" type="java.util.List&lt;java.lang.String&gt;">
</parameter>
</method>
<method name="setUsername"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="setValidated"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="valid" type="boolean">
</parameter>
</method>
</class>
<class name="LdapUserMapper"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.common.ldap.user.UserMapper">
</implements>
<constructor name="LdapUserMapper"
 type="org.apache.archiva.redback.common.ldap.user.LdapUserMapper"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getCreationAttributes"
 return="javax.naming.directory.Attributes"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
<parameter name="encodePasswordIfChanged" type="boolean">
</parameter>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="getEmailAddressAttribute"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getEmailAttribute"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getFullNameAttribute"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getMaxResultCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPasswordAttribute"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getReturningAttributes"
 return="java.lang.String[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUpdate"
 return="org.apache.archiva.redback.common.ldap.user.UserUpdate"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.common.ldap.user.LdapUser">
</parameter>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="getUser"
 return="org.apache.archiva.redback.common.ldap.user.LdapUser"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="attributes" type="javax.naming.directory.Attributes">
</parameter>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="getUserAttributeNames"
 return="java.lang.String[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUserBaseDn"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUserConf"
 return="org.apache.archiva.redback.configuration.UserConfiguration"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUserFilter"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUserFullNameAttribute"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUserIdAttribute"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUserObjectClass"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="initialize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="newTemplateUserInstance"
 return="org.apache.archiva.redback.common.ldap.user.LdapUser"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="newUserInstance"
 return="org.apache.archiva.redback.common.ldap.user.LdapUser"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<parameter name="fullName" type="java.lang.String">
</parameter>
<parameter name="email" type="java.lang.String">
</parameter>
</method>
<method name="setEmailAttribute"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="emailAttribute" type="java.lang.String">
</parameter>
</method>
<method name="setFullNameAttribute"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="fullNameAttribute" type="java.lang.String">
</parameter>
</method>
<method name="setMaxResultCount"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="maxResultCount" type="int">
</parameter>
</method>
<method name="setPasswordAttribute"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="passwordAttribute" type="java.lang.String">
</parameter>
</method>
<method name="setUserBaseDn"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userBaseDn" type="java.lang.String">
</parameter>
</method>
<method name="setUserConf"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userConf" type="org.apache.archiva.redback.configuration.UserConfiguration">
</parameter>
</method>
<method name="setUserFilter"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userFilter" type="java.lang.String">
</parameter>
</method>
<method name="setUserIdAttribute"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userIdAttribute" type="java.lang.String">
</parameter>
</method>
<method name="setUserObjectClass"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userObjectClass" type="java.lang.String">
</parameter>
</method>
</class>
<interface name="UserMapper"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getCreationAttributes"
 return="javax.naming.directory.Attributes"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
<parameter name="encodePasswordIfChanged" type="boolean">
</parameter>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="getEmailAddressAttribute"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getEmailAttribute"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPasswordAttribute"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getReturningAttributes"
 return="java.lang.String[]"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUpdate"
 return="org.apache.archiva.redback.common.ldap.user.UserUpdate"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.common.ldap.user.LdapUser">
</parameter>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="getUser"
 return="org.apache.archiva.redback.common.ldap.user.LdapUser"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="attributes" type="javax.naming.directory.Attributes">
</parameter>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="getUserAttributeNames"
 return="java.lang.String[]"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUserBaseDn"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUserFilter"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUserFullNameAttribute"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUserIdAttribute"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUserObjectClass"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="initialize"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="newTemplateUserInstance"
 return="org.apache.archiva.redback.common.ldap.user.LdapUser"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="newUserInstance"
 return="org.apache.archiva.redback.common.ldap.user.LdapUser"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<parameter name="fullName" type="java.lang.String">
</parameter>
<parameter name="email" type="java.lang.String">
</parameter>
</method>
</interface>
<class name="UserUpdate"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="UserUpdate"
 type="org.apache.archiva.redback.common.ldap.user.UserUpdate"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="created" type="javax.naming.directory.Attributes">
</parameter>
<parameter name="modified" type="javax.naming.directory.Attributes">
</parameter>
<parameter name="removed" type="javax.naming.directory.Attributes">
</parameter>
</constructor>
<method name="getAddedAttributes"
 return="javax.naming.directory.Attributes"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getModifiedAttributes"
 return="javax.naming.directory.Attributes"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getRemovedAttributes"
 return="javax.naming.directory.Attributes"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="hasAdditions"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="hasModifications"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
</package>
<package name="org.apache.archiva.redback.configuration"
>
<class name="DefaultUserConfiguration"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.configuration.UserConfiguration">
</implements>
<constructor name="DefaultUserConfiguration"
 type="org.apache.archiva.redback.configuration.DefaultUserConfiguration"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getBoolean"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
</method>
<method name="getBoolean"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="defaultValue" type="boolean">
</parameter>
</method>
<method name="getConcatenatedList"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="defaultValue" type="java.lang.String">
</parameter>
</method>
<method name="getConfigs"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
</method>
<method name="getInt"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
</method>
<method name="getInt"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="defaultValue" type="int">
</parameter>
</method>
<method name="getKeys"
 return="java.util.Collection&lt;java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getList"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
</method>
<method name="getRegistry"
 return="org.apache.archiva.redback.components.registry.Registry"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
</method>
<method name="getString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="defaultValue" type="java.lang.String">
</parameter>
</method>
<method name="initialize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="UserConfigurationException" type="org.apache.archiva.redback.configuration.UserConfigurationException">
</exception>
</method>
<method name="setConfigs"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="deprecated"
 visibility="public"
>
<parameter name="configs" type="java.util.List&lt;java.lang.String&gt;">
</parameter>
</method>
<method name="setRegistry"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="registry" type="org.apache.archiva.redback.components.registry.Registry">
</parameter>
</method>
<field name="log"
 type="org.slf4j.Logger"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
</class>
<interface name="UserConfiguration"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getBoolean"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
</method>
<method name="getBoolean"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="defaultValue" type="boolean">
</parameter>
</method>
<method name="getConcatenatedList"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="defaultValue" type="java.lang.String">
</parameter>
</method>
<method name="getInt"
 return="int"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
</method>
<method name="getInt"
 return="int"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="defaultValue" type="int">
</parameter>
</method>
<method name="getKeys"
 return="java.util.Collection&lt;java.lang.String&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getList"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
</method>
<method name="getString"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
</method>
<method name="getString"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="defaultValue" type="java.lang.String">
</parameter>
</method>
<method name="initialize"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="UserConfigurationException" type="org.apache.archiva.redback.configuration.UserConfigurationException">
</exception>
</method>
</interface>
<class name="UserConfigurationException"
 extends="java.lang.Exception"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="UserConfigurationException"
 type="org.apache.archiva.redback.configuration.UserConfigurationException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="t" type="java.lang.Throwable">
</parameter>
</constructor>
</class>
<interface name="UserConfigurationKeys"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<field name="ALPHA_COUNT_MIN"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;security.policy.password.rule.alphacount.minimum&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ALPHA_COUNT_VIOLATION"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;user.password.violation.alpha&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="APPLICATION_TIMESTAMP"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;application.timestamp&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="APPLICATION_URL"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;application.url&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="CHARACTER_LENGTH_MAX"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;security.policy.password.rule.characterlength.maximum&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="CHARACTER_LENGTH_MIN"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;security.policy.password.rule.characterlength.minimum&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="CHARACTER_LENGTH_MISCONFIGURED_VIOLATION"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;user.password.violation.length.misconfigured&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="CHARACTER_LENGTH_VIOLATION"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;user.password.violation.length&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="DEFAULT_ADMIN"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;redback.default.admin&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="DEFAULT_GUEST"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;redback.default.guest&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="DEFAULT_GUEST_ROLE_ID"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;redback.default.role.guest.id&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="EMAIL_FEEDBACK_PATH"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;email.feedback.path&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="EMAIL_FROM_ADDRESS"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;email.from.address&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="EMAIL_FROM_NAME"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;email.from.name&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="EMAIL_URL_PATH"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;email.url.path&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="EMAIL_VALIDATION_REQUIRED"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;email.validation.required&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="EMAIL_VALIDATION_SUBJECT"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;email.validation.subject&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="EMAIL_VALIDATION_TIMEOUT"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;email.validation.timeout&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="LDAP_AUTHENTICATION_METHOD"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;ldap.config.authentication.method&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="LDAP_BASEDN"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;ldap.config.base.dn&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="LDAP_BINDDN"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;ldap.config.bind.dn&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="LDAP_BIND_AUTHENTICATOR_ALLOW_EMPTY_PASSWORDS"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;ldap.bind.authenticator.allowEmptyPasswords&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="LDAP_BIND_AUTHENTICATOR_ENABLED"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;ldap.bind.authenticator.enabled&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="LDAP_CONTEX_FACTORY"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;ldap.config.context.factory&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="LDAP_GROUPS_BASEDN"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;ldap.config.groups.base.dn&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="LDAP_GROUPS_CLASS"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;ldap.config.groups.class&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="LDAP_GROUPS_ROLE_START_KEY"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;ldap.config.groups.role.&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="LDAP_GROUPS_USE_ROLENAME"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;ldap.config.groups.use.rolename&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="LDAP_HOSTNAME"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;ldap.config.hostname&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="LDAP_MAPPER_USER_ATTRIBUTE_EMAIL"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;ldap.config.mapper.attribute.email&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="LDAP_MAPPER_USER_ATTRIBUTE_FILTER"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;ldap.config.mapper.attribute.user.filter&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="LDAP_MAPPER_USER_ATTRIBUTE_FULLNAME"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;ldap.config.mapper.attribute.fullname&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="LDAP_MAPPER_USER_ATTRIBUTE_ID"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;ldap.config.mapper.attribute.user.id&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="LDAP_MAPPER_USER_ATTRIBUTE_OBJECT_CLASS"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;ldap.config.mapper.attribute.user.object.class&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="LDAP_MAPPER_USER_ATTRIBUTE_PASSWORD"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;ldap.config.mapper.attribute.password&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="LDAP_MAX_RESULT_COUNT"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;ldap.config.max.result.count&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="LDAP_PASSWORD"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;ldap.config.password&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="LDAP_PORT"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;ldap.config.port&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="LDAP_SSL"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;ldap.config.ssl&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="LDAP_USER_ID_ATTRIBUTE"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;ldap.config.user.attribute&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="LDAP_WRITABLE"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;ldap.config.writable&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="LOGIN_ATTEMPT_COUNT"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;security.policy.allowed.login.attempt&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="MINIMUM"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;security.policy.password.rule.numericalcount.minimum&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="NUMERICAL_COUNT_VIOLATION"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;user.password.violation.numeric&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="PASSWORD_ENCODER"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;security.policy.password.encoder&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="PASSWORD_EXPIRATION"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;security.policy.password.expiration.days&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="PASSWORD_EXPIRATION_ENABLED"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;security.policy.password.expiration.enabled&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="PASSWORD_RETENTION_COUNT"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;security.policy.password.previous.count&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="POLICY_PASSWORD_RULE_ALPHACOUNT_ENABLED"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;security.policy.password.rule.alphacount.enabled&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="POLICY_PASSWORD_RULE_ALPHANUMERIC_ENABLED"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;security.policy.password.rule.alphanumeric.enabled&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="POLICY_PASSWORD_RULE_CHARACTERLENGTH_ENABLED"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;security.policy.password.rule.characterlength.enabled&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="POLICY_PASSWORD_RULE_MUSTHAVE_ENABLED"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;security.policy.password.rule.musthave.enabled&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="POLICY_PASSWORD_RULE_NOWHITTESPACE_ENABLED"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;security.policy.password.rule.nowhitespace.enabled&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="POLICY_PASSWORD_RULE_NUMERICALCOUNT_ENABLED"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;security.policy.password.rule.numericalcount.enabled&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="POLICY_PASSWORD_RULE_REUSE_ENABLED"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;security.policy.password.rule.reuse.enabled&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="RBAC_MANAGER_IMPL"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;rbac.manager.impl&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="REMEMBER_ME_DOMAIN"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;security.rememberme.domain&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="REMEMBER_ME_ENABLED"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;security.rememberme.enabled&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="REMEMBER_ME_PATH"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;security.rememberme.path&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="REMEMBER_ME_SECURE"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;security.rememberme.secure&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="REMEMBER_ME_TIMEOUT"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;security.rememberme.timeout&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="SIGNON_DOMAIN"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;security.signon.domain&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="SIGNON_PATH"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;security.signon.path&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="SIGNON_TIMEOUT"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;security.signon.timeout&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="UNLOCKABLE_ACCOUNTS"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;security.policy.unlockable.accounts&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="USER_MANAGER_IMPL"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;user.manager.impl&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</interface>
</package>
<package name="org.apache.archiva.redback.integration"
>
<class name="HttpUtils"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="HttpUtils"
 type="org.apache.archiva.redback.integration.HttpUtils"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="complexHeaderToProperties"
 return="java.util.Properties"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rawheader" type="java.lang.String">
</parameter>
<parameter name="majorDelim" type="java.lang.String">
</parameter>
<parameter name="subDelim" type="java.lang.String">
</parameter>
</method>
</class>
</package>
<package name="org.apache.archiva.redback.integration.checks.security"
>
<class name="AdminAutoCreateCheck"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.system.check.EnvironmentCheck">
</implements>
<constructor name="AdminAutoCreateCheck"
 type="org.apache.archiva.redback.integration.checks.security.AdminAutoCreateCheck"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="validateEnvironment"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="violations" type="java.util.List&lt;java.lang.String&gt;">
</parameter>
</method>
<field name="ADMIN_EMAIL_KEY"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;redback.admin.email&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ADMIN_FULL_NAME_KEY"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;redback.admin.fullname&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ADMIN_PASSWORD_KEY"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;redback.admin.password&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="FORCE_ADMIN_FILE_PATH"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;redback.admin.creation.file&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="securitySystem"
 type="org.apache.archiva.redback.system.SecuritySystem"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
</class>
<class name="GuestUserEnvironmentCheck"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.system.check.EnvironmentCheck">
</implements>
<constructor name="GuestUserEnvironmentCheck"
 type="org.apache.archiva.redback.integration.checks.security.GuestUserEnvironmentCheck"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="validateEnvironment"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="violations" type="java.util.List&lt;java.lang.String&gt;">
</parameter>
</method>
</class>
<class name="LockedAdminEnvironmentCheck"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.system.check.EnvironmentCheck">
</implements>
<constructor name="LockedAdminEnvironmentCheck"
 type="org.apache.archiva.redback.integration.checks.security.LockedAdminEnvironmentCheck"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="validateEnvironment"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="violations" type="java.util.List&lt;java.lang.String&gt;">
</parameter>
</method>
<field name="log"
 type="org.slf4j.Logger"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
</class>
<class name="RequiredRolesEnvironmentCheck"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.system.check.EnvironmentCheck">
</implements>
<constructor name="RequiredRolesEnvironmentCheck"
 type="org.apache.archiva.redback.integration.checks.security.RequiredRolesEnvironmentCheck"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="validateEnvironment"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="violations" type="java.util.List&lt;java.lang.String&gt;">
</parameter>
</method>
<field name="log"
 type="org.slf4j.Logger"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
</class>
</package>
<package name="org.apache.archiva.redback.integration.filter"
>
<class name="SpringServletFilter"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="javax.servlet.Filter">
</implements>
<constructor name="SpringServletFilter"
 type="org.apache.archiva.redback.integration.filter.SpringServletFilter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="destroy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getApplicationContext"
 return="org.springframework.context.ApplicationContext"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</method>
<method name="init"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filterConfig" type="javax.servlet.FilterConfig">
</parameter>
<exception name="ServletException" type="javax.servlet.ServletException">
</exception>
</method>
</class>
</package>
<package name="org.apache.archiva.redback.integration.filter.authentication"
>
<class name="AbstractHttpAuthenticationFilter"
 extends="org.apache.archiva.redback.integration.filter.SpringServletFilter"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="AbstractHttpAuthenticationFilter"
 type="org.apache.archiva.redback.integration.filter.authentication.AbstractHttpAuthenticationFilter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getRealmName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setRealmName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="realmName" type="java.lang.String">
</parameter>
</method>
</class>
<class name="HttpAuthenticationException"
 extends="org.apache.archiva.redback.authentication.AuthenticationException"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="HttpAuthenticationException"
 type="org.apache.archiva.redback.integration.filter.authentication.HttpAuthenticationException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="HttpAuthenticationException"
 type="org.apache.archiva.redback.integration.filter.authentication.HttpAuthenticationException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="cause" type="java.lang.Throwable">
</parameter>
</constructor>
<constructor name="HttpAuthenticationException"
 type="org.apache.archiva.redback.integration.filter.authentication.HttpAuthenticationException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
</constructor>
<constructor name="HttpAuthenticationException"
 type="org.apache.archiva.redback.integration.filter.authentication.HttpAuthenticationException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cause" type="java.lang.Throwable">
</parameter>
</constructor>
</class>
<class name="HttpAuthenticator"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="HttpAuthenticator"
 type="org.apache.archiva.redback.integration.filter.authentication.HttpAuthenticator"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="authenticate"
 return="org.apache.archiva.redback.authentication.AuthenticationResult"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ds" type="org.apache.archiva.redback.authentication.AuthenticationDataSource">
</parameter>
<parameter name="httpSession" type="javax.servlet.http.HttpSession">
</parameter>
<exception name="AccountLockedException" type="org.apache.archiva.redback.policy.AccountLockedException">
</exception>
<exception name="AuthenticationException" type="org.apache.archiva.redback.authentication.AuthenticationException">
</exception>
<exception name="MustChangePasswordException" type="org.apache.archiva.redback.policy.MustChangePasswordException">
</exception>
</method>
<method name="authenticate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="request" type="javax.servlet.http.HttpServletRequest">
</parameter>
<parameter name="response" type="javax.servlet.http.HttpServletResponse">
</parameter>
<exception name="AuthenticationException" type="org.apache.archiva.redback.authentication.AuthenticationException">
</exception>
</method>
<method name="challenge"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="request" type="javax.servlet.http.HttpServletRequest">
</parameter>
<parameter name="response" type="javax.servlet.http.HttpServletResponse">
</parameter>
<parameter name="realmName" type="java.lang.String">
</parameter>
<parameter name="exception" type="org.apache.archiva.redback.authentication.AuthenticationException">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
</method>
<method name="getAuthenticationResult"
 return="org.apache.archiva.redback.authentication.AuthenticationResult"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="request" type="javax.servlet.http.HttpServletRequest">
</parameter>
<parameter name="response" type="javax.servlet.http.HttpServletResponse">
</parameter>
<exception name="AccountLockedException" type="org.apache.archiva.redback.policy.AccountLockedException">
</exception>
<exception name="AuthenticationException" type="org.apache.archiva.redback.authentication.AuthenticationException">
</exception>
<exception name="MustChangePasswordException" type="org.apache.archiva.redback.policy.MustChangePasswordException">
</exception>
</method>
<method name="getSecuritySession"
 return="org.apache.archiva.redback.system.SecuritySession"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="httpSession" type="javax.servlet.http.HttpSession">
</parameter>
</method>
<method name="getSessionUser"
 return="org.apache.archiva.redback.users.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="httpSession" type="javax.servlet.http.HttpSession">
</parameter>
</method>
<method name="isAlreadyAuthenticated"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="httpSession" type="javax.servlet.http.HttpSession">
</parameter>
</method>
<method name="setSecuritySession"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="session" type="org.apache.archiva.redback.system.SecuritySession">
</parameter>
<parameter name="httpSession" type="javax.servlet.http.HttpSession">
</parameter>
</method>
<method name="setSessionUser"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
<parameter name="httpSession" type="javax.servlet.http.HttpSession">
</parameter>
</method>
<field name="log"
 type="org.slf4j.Logger"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
<field name="securitySystem"
 type="org.apache.archiva.redback.system.SecuritySystem"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
</class>
</package>
<package name="org.apache.archiva.redback.integration.filter.authentication.basic"
>
<class name="HttpBasicAuthentication"
 extends="org.apache.archiva.redback.integration.filter.authentication.HttpAuthenticator"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="HttpBasicAuthentication"
 type="org.apache.archiva.redback.integration.filter.authentication.basic.HttpBasicAuthentication"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="challenge"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="request" type="javax.servlet.http.HttpServletRequest">
</parameter>
<parameter name="response" type="javax.servlet.http.HttpServletResponse">
</parameter>
<parameter name="realmName" type="java.lang.String">
</parameter>
<parameter name="exception" type="org.apache.archiva.redback.authentication.AuthenticationException">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
</method>
<method name="getAuthenticationResult"
 return="org.apache.archiva.redback.authentication.AuthenticationResult"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="request" type="javax.servlet.http.HttpServletRequest">
</parameter>
<parameter name="response" type="javax.servlet.http.HttpServletResponse">
</parameter>
<exception name="AccountLockedException" type="org.apache.archiva.redback.policy.AccountLockedException">
</exception>
<exception name="AuthenticationException" type="org.apache.archiva.redback.authentication.AuthenticationException">
</exception>
<exception name="MustChangePasswordException" type="org.apache.archiva.redback.policy.MustChangePasswordException">
</exception>
</method>
<method name="getId"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="HttpBasicAuthenticationFilter"
 extends="org.apache.archiva.redback.integration.filter.authentication.AbstractHttpAuthenticationFilter"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="HttpBasicAuthenticationFilter"
 type="org.apache.archiva.redback.integration.filter.authentication.basic.HttpBasicAuthenticationFilter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="doFilter"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="request" type="javax.servlet.ServletRequest">
</parameter>
<parameter name="response" type="javax.servlet.ServletResponse">
</parameter>
<parameter name="chain" type="javax.servlet.FilterChain">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="ServletException" type="javax.servlet.ServletException">
</exception>
</method>
</class>
</package>
<package name="org.apache.archiva.redback.integration.filter.authentication.digest"
>
<class name="Digest"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Digest"
 type="org.apache.archiva.redback.integration.filter.authentication.digest.Digest"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getDigest"
 return="java.security.MessageDigest"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="algorithm" type="java.lang.String">
</parameter>
</method>
<method name="md5Hex"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="data" type="java.lang.String">
</parameter>
</method>
</class>
<class name="Hex"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Hex"
 type="org.apache.archiva.redback.integration.filter.authentication.digest.Hex"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="encode"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="data" type="byte[]">
</parameter>
</method>
<method name="encode"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="raw" type="java.lang.String">
</parameter>
</method>
</class>
<class name="HttpDigestAuthentication"
 extends="org.apache.archiva.redback.integration.filter.authentication.HttpAuthenticator"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="HttpDigestAuthentication"
 type="org.apache.archiva.redback.integration.filter.authentication.digest.HttpDigestAuthentication"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="challenge"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="request" type="javax.servlet.http.HttpServletRequest">
</parameter>
<parameter name="response" type="javax.servlet.http.HttpServletResponse">
</parameter>
<parameter name="realmName" type="java.lang.String">
</parameter>
<parameter name="exception" type="org.apache.archiva.redback.authentication.AuthenticationException">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
</method>
<method name="findUser"
 return="org.apache.archiva.redback.users.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<exception name="HttpAuthenticationException" type="org.apache.archiva.redback.integration.filter.authentication.HttpAuthenticationException">
</exception>
</method>
<method name="getAuthenticationResult"
 return="org.apache.archiva.redback.authentication.AuthenticationResult"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="request" type="javax.servlet.http.HttpServletRequest">
</parameter>
<parameter name="response" type="javax.servlet.http.HttpServletResponse">
</parameter>
<exception name="AccountLockedException" type="org.apache.archiva.redback.policy.AccountLockedException">
</exception>
<exception name="AuthenticationException" type="org.apache.archiva.redback.authentication.AuthenticationException">
</exception>
<exception name="MustChangePasswordException" type="org.apache.archiva.redback.policy.MustChangePasswordException">
</exception>
</method>
<method name="getId"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getRealm"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setRealm"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="realm" type="java.lang.String">
</parameter>
</method>
</class>
<class name="HttpDigestAuthenticationFilter"
 extends="org.apache.archiva.redback.integration.filter.authentication.AbstractHttpAuthenticationFilter"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="HttpDigestAuthenticationFilter"
 type="org.apache.archiva.redback.integration.filter.authentication.digest.HttpDigestAuthenticationFilter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="doFilter"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="request" type="javax.servlet.ServletRequest">
</parameter>
<parameter name="response" type="javax.servlet.ServletResponse">
</parameter>
<parameter name="chain" type="javax.servlet.FilterChain">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="ServletException" type="javax.servlet.ServletException">
</exception>
</method>
</class>
<class name="HttpDigestHeader"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="HttpDigestHeader"
 type="org.apache.archiva.redback.integration.filter.authentication.digest.HttpDigestHeader"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="parseClientHeader"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rawHeader" type="java.lang.String">
</parameter>
<parameter name="expectedRealm" type="java.lang.String">
</parameter>
<parameter name="digestKey" type="java.lang.String">
</parameter>
<exception name="HttpAuthenticationException" type="org.apache.archiva.redback.integration.filter.authentication.HttpAuthenticationException">
</exception>
</method>
<field name="cnonce"
 type="java.lang.String"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="nc"
 type="java.lang.String"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="nonce"
 type="java.lang.String"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="qop"
 type="java.lang.String"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="realm"
 type="java.lang.String"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="response"
 type="java.lang.String"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="uri"
 type="java.lang.String"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="username"
 type="java.lang.String"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="NonceExpirationException"
 extends="org.apache.archiva.redback.integration.filter.authentication.HttpAuthenticationException"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="NonceExpirationException"
 type="org.apache.archiva.redback.integration.filter.authentication.digest.NonceExpirationException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="NonceExpirationException"
 type="org.apache.archiva.redback.integration.filter.authentication.digest.NonceExpirationException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="cause" type="java.lang.Throwable">
</parameter>
</constructor>
<constructor name="NonceExpirationException"
 type="org.apache.archiva.redback.integration.filter.authentication.digest.NonceExpirationException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
</constructor>
<constructor name="NonceExpirationException"
 type="org.apache.archiva.redback.integration.filter.authentication.digest.NonceExpirationException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cause" type="java.lang.Throwable">
</parameter>
</constructor>
</class>
</package>
<package name="org.apache.archiva.redback.integration.filter.authorization"
>
<class name="SimpleAuthorizationFilter"
 extends="org.apache.archiva.redback.integration.filter.SpringServletFilter"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="SimpleAuthorizationFilter"
 type="org.apache.archiva.redback.integration.filter.authorization.SimpleAuthorizationFilter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="accessDenied"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="response" type="javax.servlet.ServletResponse">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
</method>
<method name="doFilter"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="request" type="javax.servlet.ServletRequest">
</parameter>
<parameter name="response" type="javax.servlet.ServletResponse">
</parameter>
<parameter name="chain" type="javax.servlet.FilterChain">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="ServletException" type="javax.servlet.ServletException">
</exception>
</method>
</class>
</package>
<package name="org.apache.archiva.redback.integration.mail"
>
<interface name="MailGenerator"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="generateMail"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="templateName" type="java.lang.String">
</parameter>
<parameter name="authkey" type="org.apache.archiva.redback.keys.AuthenticationKey">
</parameter>
<parameter name="baseUrl" type="java.lang.String">
</parameter>
</method>
</interface>
<interface name="Mailer"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="sendAccountValidationEmail"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="recipients" type="java.util.Collection&lt;java.lang.String&gt;">
</parameter>
<parameter name="authkey" type="org.apache.archiva.redback.keys.AuthenticationKey">
</parameter>
<parameter name="baseUrl" type="java.lang.String">
</parameter>
</method>
<method name="sendMessage"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="recipients" type="java.util.Collection&lt;java.lang.String&gt;">
</parameter>
<parameter name="subject" type="java.lang.String">
</parameter>
<parameter name="content" type="java.lang.String">
</parameter>
</method>
<method name="sendPasswordResetEmail"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="recipients" type="java.util.Collection&lt;java.lang.String&gt;">
</parameter>
<parameter name="authkey" type="org.apache.archiva.redback.keys.AuthenticationKey">
</parameter>
<parameter name="baseUrl" type="java.lang.String">
</parameter>
</method>
</interface>
<class name="MailerImpl"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.integration.mail.Mailer">
</implements>
<constructor name="MailerImpl"
 type="org.apache.archiva.redback.integration.mail.MailerImpl"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="sendAccountValidationEmail"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="recipients" type="java.util.Collection&lt;java.lang.String&gt;">
</parameter>
<parameter name="authkey" type="org.apache.archiva.redback.keys.AuthenticationKey">
</parameter>
<parameter name="baseUrl" type="java.lang.String">
</parameter>
</method>
<method name="sendMessage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="recipients" type="java.util.Collection&lt;java.lang.String&gt;">
</parameter>
<parameter name="subject" type="java.lang.String">
</parameter>
<parameter name="content" type="java.lang.String">
</parameter>
</method>
<method name="sendPasswordResetEmail"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="recipients" type="java.util.Collection&lt;java.lang.String&gt;">
</parameter>
<parameter name="authkey" type="org.apache.archiva.redback.keys.AuthenticationKey">
</parameter>
<parameter name="baseUrl" type="java.lang.String">
</parameter>
</method>
<field name="log"
 type="org.slf4j.Logger"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
</class>
<class name="VelocityMailGenerator"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.integration.mail.MailGenerator">
</implements>
<constructor name="VelocityMailGenerator"
 type="org.apache.archiva.redback.integration.mail.VelocityMailGenerator"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="generateMail"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="templateName" type="java.lang.String">
</parameter>
<parameter name="authkey" type="org.apache.archiva.redback.keys.AuthenticationKey">
</parameter>
<parameter name="baseUrl" type="java.lang.String">
</parameter>
</method>
<method name="getConfig"
 return="org.apache.archiva.redback.configuration.UserConfiguration"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getVelocityEngine"
 return="org.apache.velocity.app.VelocityEngine"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setConfig"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="config" type="org.apache.archiva.redback.configuration.UserConfiguration">
</parameter>
</method>
<method name="setVelocityEngine"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="velocityEngine" type="org.apache.velocity.app.VelocityEngine">
</parameter>
</method>
</class>
</package>
<package name="org.apache.archiva.redback.integration.model"
>
<class name="AdminEditUserCredentials"
 extends="org.apache.archiva.redback.integration.model.EditUserCredentials"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="AdminEditUserCredentials"
 type="org.apache.archiva.redback.integration.model.AdminEditUserCredentials"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="AdminEditUserCredentials"
 type="org.apache.archiva.redback.integration.model.AdminEditUserCredentials"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
</constructor>
<method name="isLocked"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isPasswordChangeRequired"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setLocked"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="locked" type="boolean">
</parameter>
</method>
<method name="setPasswordChangeRequired"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="passwordChangeRequired" type="boolean">
</parameter>
</method>
</class>
<class name="CreateRoleDetails"
 extends="org.apache.archiva.redback.integration.model.RoleDetails"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="CreateRoleDetails"
 type="org.apache.archiva.redback.integration.model.CreateRoleDetails"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
</class>
<class name="CreateUserCredentials"
 extends="org.apache.archiva.redback.integration.model.UserCredentials"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="CreateUserCredentials"
 type="org.apache.archiva.redback.integration.model.CreateUserCredentials"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="isEdit"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="EditRoleDetails"
 extends="org.apache.archiva.redback.integration.model.RoleDetails"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="EditRoleDetails"
 type="org.apache.archiva.redback.integration.model.EditRoleDetails"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
</constructor>
</class>
<class name="EditUserCredentials"
 extends="org.apache.archiva.redback.integration.model.UserCredentials"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="EditUserCredentials"
 type="org.apache.archiva.redback.integration.model.EditUserCredentials"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="EditUserCredentials"
 type="org.apache.archiva.redback.integration.model.EditUserCredentials"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
</constructor>
<constructor name="EditUserCredentials"
 type="org.apache.archiva.redback.integration.model.EditUserCredentials"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
</constructor>
<method name="isEdit"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="RoleDetails"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RoleDetails"
 type="org.apache.archiva.redback.integration.model.RoleDetails"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="addChildRoleName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="addPermission"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permissionName" type="java.lang.String">
</parameter>
<parameter name="operationName" type="java.lang.String">
</parameter>
<parameter name="resourceIdentifier" type="java.lang.String">
</parameter>
</method>
<method name="getChildRoleNames"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getDescription"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPermissions"
 return="java.util.List&lt;org.apache.archiva.redback.integration.model.SimplePermission&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isAssignable"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setAssignable"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="assignable" type="boolean">
</parameter>
</method>
<method name="setChildRoleNames"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="childRoleNames" type="java.util.List&lt;java.lang.String&gt;">
</parameter>
</method>
<method name="setDescription"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="description" type="java.lang.String">
</parameter>
</method>
<method name="setName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="setPermissions"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permissions" type="java.util.List&lt;org.apache.archiva.redback.integration.model.SimplePermission&gt;">
</parameter>
</method>
</class>
<class name="SimplePermission"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="SimplePermission"
 type="org.apache.archiva.redback.integration.model.SimplePermission"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getOperationName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getResourceIdentifier"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="setOperationName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="operationName" type="java.lang.String">
</parameter>
</method>
<method name="setResourceIdentifier"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="resourceIdentifier" type="java.lang.String">
</parameter>
</method>
</class>
<class name="UserCredentials"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="UserCredentials"
 type="org.apache.archiva.redback.integration.model.UserCredentials"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="createUser"
 return="org.apache.archiva.redback.users.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="um" type="org.apache.archiva.redback.users.UserManager">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<method name="getConfirmPassword"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getEmail"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getFullName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPassword"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTimestampAccountCreation"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTimestampLastLogin"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTimestampLastPasswordChange"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUsername"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isEdit"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setConfirmPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="confirmPassword" type="java.lang.String">
</parameter>
</method>
<method name="setEmail"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="email" type="java.lang.String">
</parameter>
</method>
<method name="setFullName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="fullName" type="java.lang.String">
</parameter>
</method>
<method name="setPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="password" type="java.lang.String">
</parameter>
</method>
<method name="setTimestampAccountCreation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="timestampAccountCreation" type="java.lang.String">
</parameter>
</method>
<method name="setTimestampLastLogin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="timestampLastLogin" type="java.lang.String">
</parameter>
</method>
<method name="setTimestampLastPasswordChange"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="timestampLastPasswordChange" type="java.lang.String">
</parameter>
</method>
<method name="setUsername"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
</method>
</class>
</package>
<package name="org.apache.archiva.redback.integration.security.role"
>
<interface name="RedbackRoleConstants"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<field name="ADMINISTRATOR_ACCOUNT_NAME"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;admin&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="CONFIGURATION_EDIT_OPERATION"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;configuration-edit&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="GUEST_ACCESS_OPERATION"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;guest-access&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="GUEST_ROLE"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;Guest&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="REGISTERED_USER_ROLE"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;Registered User&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="REGISTERED_USER_ROLE_ID"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;registered-user&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="SYSTEM_ADMINISTRATOR_ROLE"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;System Administrator&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="USER_ADMINISTRATOR_ROLE"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;User Administrator&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="USER_MANAGEMENT_MANAGE_DATA"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;user-management-manage-data&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="USER_MANAGEMENT_RBAC_ADMIN_OPERATION"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;user-management-rbac-admin&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="USER_MANAGEMENT_ROLE_DROP_OPERATION"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;user-management-role-drop&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="USER_MANAGEMENT_ROLE_GRANT_OPERATION"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;user-management-role-grant&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="USER_MANAGEMENT_USER_CREATE_OPERATION"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;user-management-user-create&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="USER_MANAGEMENT_USER_DELETE_OPERATION"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;user-management-user-delete&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="USER_MANAGEMENT_USER_EDIT_OPERATION"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;user-management-user-edit&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="USER_MANAGEMENT_USER_LIST_OPERATION"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;user-management-user-list&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="USER_MANAGEMENT_USER_ROLE_OPERATION"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;user-management-user-role&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</interface>
</package>
<package name="org.apache.archiva.redback.integration.util"
>
<class name="AutoLoginCookies"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="AutoLoginCookies"
 type="org.apache.archiva.redback.integration.util.AutoLoginCookies"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getRememberMeKey"
 return="org.apache.archiva.redback.keys.AuthenticationKey"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="httpServletResponse" type="javax.servlet.http.HttpServletResponse">
</parameter>
<parameter name="httpServletRequest" type="javax.servlet.http.HttpServletRequest">
</parameter>
</method>
<method name="getSignonKey"
 return="org.apache.archiva.redback.keys.AuthenticationKey"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="httpServletResponse" type="javax.servlet.http.HttpServletResponse">
</parameter>
<parameter name="httpServletRequest" type="javax.servlet.http.HttpServletRequest">
</parameter>
</method>
<method name="isRememberMeEnabled"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="removeRememberMeCookie"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="httpServletResponse" type="javax.servlet.http.HttpServletResponse">
</parameter>
<parameter name="httpServletRequest" type="javax.servlet.http.HttpServletRequest">
</parameter>
</method>
<method name="removeSignonCookie"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="httpServletResponse" type="javax.servlet.http.HttpServletResponse">
</parameter>
<parameter name="httpServletRequest" type="javax.servlet.http.HttpServletRequest">
</parameter>
</method>
<method name="setRememberMeCookie"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
<parameter name="httpServletResponse" type="javax.servlet.http.HttpServletResponse">
</parameter>
<parameter name="httpServletRequest" type="javax.servlet.http.HttpServletRequest">
</parameter>
</method>
<method name="setSignonCookie"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
<parameter name="httpServletResponse" type="javax.servlet.http.HttpServletResponse">
</parameter>
<parameter name="httpServletRequest" type="javax.servlet.http.HttpServletRequest">
</parameter>
</method>
</class>
<class name="DateUtils"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="DateUtils"
 type="org.apache.archiva.redback.integration.util.DateUtils"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="formatWithAge"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="date" type="java.util.Date">
</parameter>
<parameter name="suffix" type="java.lang.String">
</parameter>
</method>
<method name="formatWithAge"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="date" type="java.util.Date">
</parameter>
<parameter name="dateFormat" type="java.lang.String">
</parameter>
<parameter name="suffix" type="java.lang.String">
</parameter>
</method>
</class>
<class name="ModelTemplateSorter"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="java.util.Comparator">
</implements>
<constructor name="ModelTemplateSorter"
 type="org.apache.archiva.redback.integration.util.ModelTemplateSorter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="compare"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="template1" type="org.apache.archiva.redback.role.model.ModelTemplate">
</parameter>
<parameter name="template2" type="org.apache.archiva.redback.role.model.ModelTemplate">
</parameter>
</method>
</class>
<class name="OperationSorter"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="java.util.Comparator">
</implements>
<constructor name="OperationSorter"
 type="org.apache.archiva.redback.integration.util.OperationSorter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="compare"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="o1" type="org.apache.archiva.redback.rbac.Operation">
</parameter>
<parameter name="o2" type="org.apache.archiva.redback.rbac.Operation">
</parameter>
</method>
</class>
<class name="PermissionSorter"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="java.util.Comparator">
</implements>
<constructor name="PermissionSorter"
 type="org.apache.archiva.redback.integration.util.PermissionSorter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="compare"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="p1" type="org.apache.archiva.redback.rbac.Permission">
</parameter>
<parameter name="p2" type="org.apache.archiva.redback.rbac.Permission">
</parameter>
</method>
</class>
<class name="ResourceSorter"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="java.util.Comparator">
</implements>
<constructor name="ResourceSorter"
 type="org.apache.archiva.redback.integration.util.ResourceSorter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="compare"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="r1" type="org.apache.archiva.redback.rbac.Resource">
</parameter>
<parameter name="r2" type="org.apache.archiva.redback.rbac.Resource">
</parameter>
</method>
</class>
<class name="RoleSorter"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="java.util.Comparator">
</implements>
<constructor name="RoleSorter"
 type="org.apache.archiva.redback.integration.util.RoleSorter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="compare"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role1" type="org.apache.archiva.redback.rbac.Role">
</parameter>
<parameter name="role2" type="org.apache.archiva.redback.rbac.Role">
</parameter>
</method>
</class>
<class name="TemplatedRoleSorter"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="java.util.Comparator">
</implements>
<constructor name="TemplatedRoleSorter"
 type="org.apache.archiva.redback.integration.util.TemplatedRoleSorter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="compare"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="r1" type="org.apache.archiva.redback.rbac.TemplatedRole">
</parameter>
<parameter name="r2" type="org.apache.archiva.redback.rbac.TemplatedRole">
</parameter>
</method>
</class>
<class name="UserComparator"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="java.util.Comparator">
</implements>
<constructor name="UserComparator"
 type="org.apache.archiva.redback.integration.util.UserComparator"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="property" type="java.lang.String">
</parameter>
<parameter name="ascending" type="boolean">
</parameter>
</constructor>
<method name="compare"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user1" type="org.apache.archiva.redback.users.User">
</parameter>
<parameter name="user2" type="org.apache.archiva.redback.users.User">
</parameter>
</method>
</class>
</package>
<package name="org.apache.archiva.redback.keys"
>
<class name="AbstractKeyManager"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.keys.KeyManager">
</implements>
<constructor name="AbstractKeyManager"
 type="org.apache.archiva.redback.keys.AbstractKeyManager"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="assertNotExpired"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="authkey" type="org.apache.archiva.redback.keys.AuthenticationKey">
</parameter>
<exception name="KeyManagerException" type="org.apache.archiva.redback.keys.KeyManagerException">
</exception>
<exception name="KeyNotFoundException" type="org.apache.archiva.redback.keys.KeyNotFoundException">
</exception>
</method>
<method name="generateUUID"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<exception name="KeyManagerException" type="org.apache.archiva.redback.keys.KeyManagerException">
</exception>
</method>
<method name="getNowGMT"
 return="java.util.Calendar"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</method>
<method name="isRandomMode"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="removeExpiredKeys"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="KeyManagerException" type="org.apache.archiva.redback.keys.KeyManagerException">
</exception>
</method>
<method name="setRandomMode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="randomMode" type="boolean">
</parameter>
</method>
<field name="log"
 type="org.slf4j.Logger"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
</class>
<interface name="AuthenticationKey"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getDateCreated"
 return="java.util.Date"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getDateExpires"
 return="java.util.Date"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getForPrincipal"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getKey"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPurpose"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setDateCreated"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dateCreated" type="java.util.Date">
</parameter>
</method>
<method name="setDateExpires"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dateExpires" type="java.util.Date">
</parameter>
</method>
<method name="setForPrincipal"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="forPrincipal" type="java.lang.String">
</parameter>
</method>
<method name="setKey"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
</method>
<method name="setPurpose"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="requestedFrom" type="java.lang.String">
</parameter>
</method>
</interface>
<interface name="KeyManager"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="addKey"
 return="org.apache.archiva.redback.keys.AuthenticationKey"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="org.apache.archiva.redback.keys.AuthenticationKey">
</parameter>
</method>
<method name="createKey"
 return="org.apache.archiva.redback.keys.AuthenticationKey"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
<parameter name="purpose" type="java.lang.String">
</parameter>
<parameter name="expirationMinutes" type="int">
</parameter>
<exception name="KeyManagerException" type="org.apache.archiva.redback.keys.KeyManagerException">
</exception>
</method>
<method name="deleteKey"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="org.apache.archiva.redback.keys.AuthenticationKey">
</parameter>
<exception name="KeyManagerException" type="org.apache.archiva.redback.keys.KeyManagerException">
</exception>
</method>
<method name="deleteKey"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<exception name="KeyManagerException" type="org.apache.archiva.redback.keys.KeyManagerException">
</exception>
</method>
<method name="eraseDatabase"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="findKey"
 return="org.apache.archiva.redback.keys.AuthenticationKey"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<exception name="KeyManagerException" type="org.apache.archiva.redback.keys.KeyManagerException">
</exception>
<exception name="KeyNotFoundException" type="org.apache.archiva.redback.keys.KeyNotFoundException">
</exception>
</method>
<method name="getAllKeys"
 return="java.util.List&lt;org.apache.archiva.redback.keys.AuthenticationKey&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getId"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="removeExpiredKeys"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="KeyManagerException" type="org.apache.archiva.redback.keys.KeyManagerException">
</exception>
</method>
</interface>
<class name="KeyManagerException"
 extends="java.lang.Exception"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="KeyManagerException"
 type="org.apache.archiva.redback.keys.KeyManagerException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="KeyManagerException"
 type="org.apache.archiva.redback.keys.KeyManagerException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="cause" type="java.lang.Throwable">
</parameter>
</constructor>
<constructor name="KeyManagerException"
 type="org.apache.archiva.redback.keys.KeyManagerException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
</constructor>
<constructor name="KeyManagerException"
 type="org.apache.archiva.redback.keys.KeyManagerException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cause" type="java.lang.Throwable">
</parameter>
</constructor>
</class>
<class name="KeyManagerTestCase"
 extends="junit.framework.TestCase"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="KeyManagerTestCase"
 type="org.apache.archiva.redback.keys.KeyManagerTestCase"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getKeyManager"
 return="org.apache.archiva.redback.keys.KeyManager"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setKeyManager"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="manager" type="org.apache.archiva.redback.keys.KeyManager">
</parameter>
</method>
<method name="testExpired"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="InterruptedException" type="java.lang.InterruptedException">
</exception>
<exception name="KeyManagerException" type="org.apache.archiva.redback.keys.KeyManagerException">
</exception>
</method>
<method name="testGetAllKeys"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="KeyManagerException" type="org.apache.archiva.redback.keys.KeyManagerException">
</exception>
</method>
<method name="testNormal"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="KeyManagerException" type="org.apache.archiva.redback.keys.KeyManagerException">
</exception>
<exception name="KeyNotFoundException" type="org.apache.archiva.redback.keys.KeyNotFoundException">
</exception>
</method>
<method name="testNotThere"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="KeyManagerException" type="org.apache.archiva.redback.keys.KeyManagerException">
</exception>
</method>
<method name="testPermanent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="KeyManagerException" type="org.apache.archiva.redback.keys.KeyManagerException">
</exception>
</method>
</class>
<class name="KeyNotFoundException"
 extends="org.apache.archiva.redback.keys.KeyManagerException"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="KeyNotFoundException"
 type="org.apache.archiva.redback.keys.KeyNotFoundException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="KeyNotFoundException"
 type="org.apache.archiva.redback.keys.KeyNotFoundException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="cause" type="java.lang.Throwable">
</parameter>
</constructor>
<constructor name="KeyNotFoundException"
 type="org.apache.archiva.redback.keys.KeyNotFoundException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
</constructor>
<constructor name="KeyNotFoundException"
 type="org.apache.archiva.redback.keys.KeyNotFoundException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cause" type="java.lang.Throwable">
</parameter>
</constructor>
</class>
</package>
<package name="org.apache.archiva.redback.keys.cached"
>
<class name="CachedKeyManager"
 extends="org.apache.archiva.redback.keys.AbstractKeyManager"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.keys.KeyManager">
</implements>
<constructor name="CachedKeyManager"
 type="org.apache.archiva.redback.keys.cached.CachedKeyManager"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="addKey"
 return="org.apache.archiva.redback.keys.AuthenticationKey"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="org.apache.archiva.redback.keys.AuthenticationKey">
</parameter>
</method>
<method name="createKey"
 return="org.apache.archiva.redback.keys.AuthenticationKey"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
<parameter name="purpose" type="java.lang.String">
</parameter>
<parameter name="expirationMinutes" type="int">
</parameter>
<exception name="KeyManagerException" type="org.apache.archiva.redback.keys.KeyManagerException">
</exception>
</method>
<method name="deleteKey"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="org.apache.archiva.redback.keys.AuthenticationKey">
</parameter>
<exception name="KeyManagerException" type="org.apache.archiva.redback.keys.KeyManagerException">
</exception>
</method>
<method name="deleteKey"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<exception name="KeyManagerException" type="org.apache.archiva.redback.keys.KeyManagerException">
</exception>
</method>
<method name="eraseDatabase"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="findKey"
 return="org.apache.archiva.redback.keys.AuthenticationKey"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<exception name="KeyManagerException" type="org.apache.archiva.redback.keys.KeyManagerException">
</exception>
<exception name="KeyNotFoundException" type="org.apache.archiva.redback.keys.KeyNotFoundException">
</exception>
</method>
<method name="getAllKeys"
 return="java.util.List&lt;org.apache.archiva.redback.keys.AuthenticationKey&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getId"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getKeyImpl"
 return="org.apache.archiva.redback.keys.KeyManager"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getKeysCache"
 return="org.apache.archiva.redback.components.cache.Cache"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setKeyImpl"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="keyImpl" type="org.apache.archiva.redback.keys.KeyManager">
</parameter>
</method>
<method name="setKeysCache"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="keysCache" type="org.apache.archiva.redback.components.cache.Cache">
</parameter>
</method>
</class>
</package>
<package name="org.apache.archiva.redback.keys.jdo"
>
<class name="AuthenticationKeyDatabase"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="AuthenticationKeyDatabase"
 type="org.apache.archiva.redback.keys.jdo.AuthenticationKeyDatabase"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="addKey"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jdoAuthenticationKey" type="org.apache.archiva.redback.keys.jdo.JdoAuthenticationKey">
</parameter>
</method>
<method name="getKeys"
 return="java.util.List"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getModelEncoding"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="removeKey"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jdoAuthenticationKey" type="org.apache.archiva.redback.keys.jdo.JdoAuthenticationKey">
</parameter>
</method>
<method name="setKeys"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="keys" type="java.util.List">
</parameter>
</method>
<method name="setModelEncoding"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="modelEncoding" type="java.lang.String">
</parameter>
</method>
</class>
<class name="JdoAuthenticationKey"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.keys.AuthenticationKey">
</implements>
<constructor name="JdoAuthenticationKey"
 type="org.apache.archiva.redback.keys.jdo.JdoAuthenticationKey"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getDateCreated"
 return="java.util.Date"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getDateExpires"
 return="java.util.Date"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getForPrincipal"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getKey"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPurpose"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setDateCreated"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dateCreated" type="java.util.Date">
</parameter>
</method>
<method name="setDateExpires"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dateExpires" type="java.util.Date">
</parameter>
</method>
<method name="setForPrincipal"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="forPrincipal" type="java.lang.String">
</parameter>
</method>
<method name="setKey"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
</method>
<method name="setPurpose"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="purpose" type="java.lang.String">
</parameter>
</method>
</class>
<class name="JdoKeyManager"
 extends="org.apache.archiva.redback.keys.AbstractKeyManager"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="JdoKeyManager"
 type="org.apache.archiva.redback.keys.jdo.JdoKeyManager"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="addKey"
 return="org.apache.archiva.redback.keys.AuthenticationKey"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="org.apache.archiva.redback.keys.AuthenticationKey">
</parameter>
</method>
<method name="createKey"
 return="org.apache.archiva.redback.keys.AuthenticationKey"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
<parameter name="purpose" type="java.lang.String">
</parameter>
<parameter name="expirationMinutes" type="int">
</parameter>
<exception name="KeyManagerException" type="org.apache.archiva.redback.keys.KeyManagerException">
</exception>
</method>
<method name="deleteKey"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="authkey" type="org.apache.archiva.redback.keys.AuthenticationKey">
</parameter>
<exception name="KeyManagerException" type="org.apache.archiva.redback.keys.KeyManagerException">
</exception>
</method>
<method name="deleteKey"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<exception name="KeyManagerException" type="org.apache.archiva.redback.keys.KeyManagerException">
</exception>
</method>
<method name="eraseDatabase"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="findKey"
 return="org.apache.archiva.redback.keys.AuthenticationKey"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<exception name="KeyManagerException" type="org.apache.archiva.redback.keys.KeyManagerException">
</exception>
<exception name="KeyNotFoundException" type="org.apache.archiva.redback.keys.KeyNotFoundException">
</exception>
</method>
<method name="getAllKeys"
 return="java.util.List&lt;org.apache.archiva.redback.keys.AuthenticationKey&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getId"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getJdoFactory"
 return="org.apache.archiva.redback.components.jdo.JdoFactory"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="initialize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setJdoFactory"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jdoFactory" type="org.apache.archiva.redback.components.jdo.JdoFactory">
</parameter>
</method>
</class>
<class name="RedbackKeyManagementJdoModelloMetadata"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RedbackKeyManagementJdoModelloMetadata"
 type="org.apache.archiva.redback.keys.jdo.RedbackKeyManagementJdoModelloMetadata"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getModelVersion"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setModelVersion"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="modelVersion" type="java.lang.String">
</parameter>
</method>
</class>
</package>
<package name="org.apache.archiva.redback.keys.jdo.io.stax"
>
<class name="RedbackKeyManagementJdoStaxReader"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RedbackKeyManagementJdoStaxReader"
 type="org.apache.archiva.redback.keys.jdo.io.stax.RedbackKeyManagementJdoStaxReader"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="read"
 return="org.apache.archiva.redback.keys.jdo.AuthenticationKeyDatabase"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="reader" type="java.io.Reader">
</parameter>
<parameter name="strict" type="boolean">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="XMLStreamException" type="javax.xml.stream.XMLStreamException">
</exception>
</method>
<method name="read"
 return="org.apache.archiva.redback.keys.jdo.AuthenticationKeyDatabase"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="reader" type="java.io.Reader">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="XMLStreamException" type="javax.xml.stream.XMLStreamException">
</exception>
</method>
<method name="read"
 return="org.apache.archiva.redback.keys.jdo.AuthenticationKeyDatabase"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.InputStream">
</parameter>
<parameter name="strict" type="boolean">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="XMLStreamException" type="javax.xml.stream.XMLStreamException">
</exception>
</method>
<method name="read"
 return="org.apache.archiva.redback.keys.jdo.AuthenticationKeyDatabase"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.InputStream">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="XMLStreamException" type="javax.xml.stream.XMLStreamException">
</exception>
</method>
<method name="read"
 return="org.apache.archiva.redback.keys.jdo.AuthenticationKeyDatabase"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filePath" type="java.lang.String">
</parameter>
<parameter name="strict" type="boolean">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="XMLStreamException" type="javax.xml.stream.XMLStreamException">
</exception>
</method>
<method name="read"
 return="org.apache.archiva.redback.keys.jdo.AuthenticationKeyDatabase"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filePath" type="java.lang.String">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="XMLStreamException" type="javax.xml.stream.XMLStreamException">
</exception>
</method>
</class>
<class name="RedbackKeyManagementJdoStaxWriter"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RedbackKeyManagementJdoStaxWriter"
 type="org.apache.archiva.redback.keys.jdo.io.stax.RedbackKeyManagementJdoStaxWriter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="write"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="writer" type="java.io.Writer">
</parameter>
<parameter name="authenticationKeyDatabase" type="org.apache.archiva.redback.keys.jdo.AuthenticationKeyDatabase">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="XMLStreamException" type="javax.xml.stream.XMLStreamException">
</exception>
</method>
<method name="write"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.OutputStream">
</parameter>
<parameter name="authenticationKeyDatabase" type="org.apache.archiva.redback.keys.jdo.AuthenticationKeyDatabase">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="XMLStreamException" type="javax.xml.stream.XMLStreamException">
</exception>
</method>
</class>
</package>
<package name="org.apache.archiva.redback.keys.memory"
>
<class name="MemoryAuthenticationKey"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.keys.AuthenticationKey">
</implements>
<constructor name="MemoryAuthenticationKey"
 type="org.apache.archiva.redback.keys.memory.MemoryAuthenticationKey"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getDateCreated"
 return="java.util.Date"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getDateExpires"
 return="java.util.Date"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getForPrincipal"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getKey"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPurpose"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setDateCreated"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dateCreated" type="java.util.Date">
</parameter>
</method>
<method name="setDateExpires"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dateExpires" type="java.util.Date">
</parameter>
</method>
<method name="setForPrincipal"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="forPrincipal" type="java.lang.String">
</parameter>
</method>
<method name="setKey"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
</method>
<method name="setPurpose"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="purpose" type="java.lang.String">
</parameter>
</method>
</class>
<class name="MemoryKeyManager"
 extends="org.apache.archiva.redback.keys.AbstractKeyManager"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="MemoryKeyManager"
 type="org.apache.archiva.redback.keys.memory.MemoryKeyManager"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="addKey"
 return="org.apache.archiva.redback.keys.AuthenticationKey"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="org.apache.archiva.redback.keys.AuthenticationKey">
</parameter>
</method>
<method name="createKey"
 return="org.apache.archiva.redback.keys.AuthenticationKey"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
<parameter name="purpose" type="java.lang.String">
</parameter>
<parameter name="expirationMinutes" type="int">
</parameter>
<exception name="KeyManagerException" type="org.apache.archiva.redback.keys.KeyManagerException">
</exception>
</method>
<method name="deleteKey"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="authkey" type="org.apache.archiva.redback.keys.AuthenticationKey">
</parameter>
<exception name="KeyManagerException" type="org.apache.archiva.redback.keys.KeyManagerException">
</exception>
</method>
<method name="deleteKey"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<exception name="KeyManagerException" type="org.apache.archiva.redback.keys.KeyManagerException">
</exception>
</method>
<method name="eraseDatabase"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="findKey"
 return="org.apache.archiva.redback.keys.AuthenticationKey"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<exception name="KeyManagerException" type="org.apache.archiva.redback.keys.KeyManagerException">
</exception>
<exception name="KeyNotFoundException" type="org.apache.archiva.redback.keys.KeyNotFoundException">
</exception>
</method>
<method name="getAllKeys"
 return="java.util.List&lt;org.apache.archiva.redback.keys.AuthenticationKey&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getId"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
</package>
<package name="org.apache.archiva.redback.management"
>
<interface name="DataManagementTool"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="backupKeyDatabase"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="manager" type="org.apache.archiva.redback.keys.KeyManager">
</parameter>
<parameter name="backupDirectory" type="java.io.File">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="XMLStreamException" type="javax.xml.stream.XMLStreamException">
</exception>
</method>
<method name="backupRBACDatabase"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="manager" type="org.apache.archiva.redback.rbac.RBACManager">
</parameter>
<parameter name="backupDirectory" type="java.io.File">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="XMLStreamException" type="javax.xml.stream.XMLStreamException">
</exception>
</method>
<method name="backupUserDatabase"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="manager" type="org.apache.archiva.redback.users.UserManager">
</parameter>
<parameter name="backupDirectory" type="java.io.File">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
<exception name="XMLStreamException" type="javax.xml.stream.XMLStreamException">
</exception>
</method>
<method name="eraseKeysDatabase"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="manager" type="org.apache.archiva.redback.keys.KeyManager">
</parameter>
</method>
<method name="eraseRBACDatabase"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="manager" type="org.apache.archiva.redback.rbac.RBACManager">
</parameter>
</method>
<method name="eraseUsersDatabase"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="manager" type="org.apache.archiva.redback.users.UserManager">
</parameter>
</method>
<method name="restoreKeysDatabase"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="manager" type="org.apache.archiva.redback.keys.KeyManager">
</parameter>
<parameter name="backupDirectory" type="java.io.File">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="XMLStreamException" type="javax.xml.stream.XMLStreamException">
</exception>
</method>
<method name="restoreRBACDatabase"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="manager" type="org.apache.archiva.redback.rbac.RBACManager">
</parameter>
<parameter name="backupDirectory" type="java.io.File">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="XMLStreamException" type="javax.xml.stream.XMLStreamException">
</exception>
</method>
<method name="restoreUsersDatabase"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="manager" type="org.apache.archiva.redback.users.UserManager">
</parameter>
<parameter name="backupDirectory" type="java.io.File">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
<exception name="XMLStreamException" type="javax.xml.stream.XMLStreamException">
</exception>
</method>
</interface>
<class name="JdoDataManagementTool"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.management.DataManagementTool">
</implements>
<constructor name="JdoDataManagementTool"
 type="org.apache.archiva.redback.management.JdoDataManagementTool"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="backupKeyDatabase"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="manager" type="org.apache.archiva.redback.keys.KeyManager">
</parameter>
<parameter name="backupDirectory" type="java.io.File">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="XMLStreamException" type="javax.xml.stream.XMLStreamException">
</exception>
</method>
<method name="backupRBACDatabase"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="manager" type="org.apache.archiva.redback.rbac.RBACManager">
</parameter>
<parameter name="backupDirectory" type="java.io.File">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="XMLStreamException" type="javax.xml.stream.XMLStreamException">
</exception>
</method>
<method name="backupUserDatabase"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="manager" type="org.apache.archiva.redback.users.UserManager">
</parameter>
<parameter name="backupDirectory" type="java.io.File">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
<exception name="XMLStreamException" type="javax.xml.stream.XMLStreamException">
</exception>
</method>
<method name="eraseKeysDatabase"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="manager" type="org.apache.archiva.redback.keys.KeyManager">
</parameter>
</method>
<method name="eraseRBACDatabase"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="manager" type="org.apache.archiva.redback.rbac.RBACManager">
</parameter>
</method>
<method name="eraseUsersDatabase"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="manager" type="org.apache.archiva.redback.users.UserManager">
</parameter>
</method>
<method name="restoreKeysDatabase"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="manager" type="org.apache.archiva.redback.keys.KeyManager">
</parameter>
<parameter name="backupDirectory" type="java.io.File">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="XMLStreamException" type="javax.xml.stream.XMLStreamException">
</exception>
</method>
<method name="restoreRBACDatabase"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="manager" type="org.apache.archiva.redback.rbac.RBACManager">
</parameter>
<parameter name="backupDirectory" type="java.io.File">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="XMLStreamException" type="javax.xml.stream.XMLStreamException">
</exception>
</method>
<method name="restoreUsersDatabase"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="manager" type="org.apache.archiva.redback.users.UserManager">
</parameter>
<parameter name="backupDirectory" type="java.io.File">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
<exception name="XMLStreamException" type="javax.xml.stream.XMLStreamException">
</exception>
</method>
</class>
</package>
<package name="org.apache.archiva.redback.policy"
>
<class name="AbstractCookieSettings"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.policy.CookieSettings">
</implements>
<constructor name="AbstractCookieSettings"
 type="org.apache.archiva.redback.policy.AbstractCookieSettings"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getCookieTimeout"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getDomain"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPath"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<field name="config"
 type="org.apache.archiva.redback.configuration.UserConfiguration"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
<field name="cookieTimeout"
 type="int"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
<field name="domain"
 type="java.lang.String"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
<field name="path"
 type="java.lang.String"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
</class>
<class name="AccountLockedException"
 extends="org.apache.archiva.redback.policy.PolicyViolationException"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="AccountLockedException"
 type="org.apache.archiva.redback.policy.AccountLockedException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
</constructor>
<method name="getUser"
 return="org.apache.archiva.redback.users.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<interface name="CookieSettings"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getCookieTimeout"
 return="int"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getDomain"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPath"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="initialize"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isEnabled"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</interface>
<class name="DefaultUserSecurityPolicy"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.policy.UserSecurityPolicy">
</implements>
<constructor name="DefaultUserSecurityPolicy"
 type="org.apache.archiva.redback.policy.DefaultUserSecurityPolicy"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="addPasswordRule"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rule" type="org.apache.archiva.redback.policy.PasswordRule">
</parameter>
</method>
<method name="extensionChangePassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
<exception name="PasswordRuleViolationException" type="org.apache.archiva.redback.policy.PasswordRuleViolationException">
</exception>
</method>
<method name="extensionChangePassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
<parameter name="passwordChangeRequired" type="boolean">
</parameter>
<exception name="PasswordRuleViolationException" type="org.apache.archiva.redback.policy.PasswordRuleViolationException">
</exception>
</method>
<method name="extensionExcessiveLoginAttempts"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
<exception name="AccountLockedException" type="org.apache.archiva.redback.policy.AccountLockedException">
</exception>
</method>
<method name="extensionPasswordExpiration"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
<exception name="MustChangePasswordException" type="org.apache.archiva.redback.policy.MustChangePasswordException">
</exception>
</method>
<method name="getConfig"
 return="org.apache.archiva.redback.configuration.UserConfiguration"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getId"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLoginAttemptCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPasswordEncoder"
 return="org.apache.archiva.redback.policy.PasswordEncoder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPasswordExpirationDays"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPasswordRules"
 return="java.util.List&lt;org.apache.archiva.redback.policy.PasswordRule&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPreviousPasswordsCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getRememberMeCookieSettings"
 return="org.apache.archiva.redback.policy.CookieSettings"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSignonCookieSettings"
 return="org.apache.archiva.redback.policy.CookieSettings"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUnlockableAccounts"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUserValidationSettings"
 return="org.apache.archiva.redback.policy.UserValidationSettings"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="initialize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isEnabled"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setConfig"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="config" type="org.apache.archiva.redback.configuration.UserConfiguration">
</parameter>
</method>
<method name="setDefaultPasswordRule"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="defaultPasswordRule" type="org.apache.archiva.redback.policy.PasswordRule">
</parameter>
</method>
<method name="setEnabled"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enabled" type="boolean">
</parameter>
</method>
<method name="setLoginAttemptCount"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="count" type="int">
</parameter>
</method>
<method name="setPasswordEncoder"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="passwordEncoder" type="org.apache.archiva.redback.policy.PasswordEncoder">
</parameter>
</method>
<method name="setPasswordExpirationDays"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="passwordExpiry" type="int">
</parameter>
</method>
<method name="setPasswordRules"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rules" type="java.util.List&lt;org.apache.archiva.redback.policy.PasswordRule&gt;">
</parameter>
</method>
<method name="setPreviousPasswordsCount"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="count" type="int">
</parameter>
</method>
<method name="setRememberMeCookieSettings"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rememberMeCookieSettings" type="org.apache.archiva.redback.policy.CookieSettings">
</parameter>
</method>
<method name="setRules"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rules" type="java.util.List&lt;org.apache.archiva.redback.policy.PasswordRule&gt;">
</parameter>
</method>
<method name="setSignonCookieSettings"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="signonCookieSettings" type="org.apache.archiva.redback.policy.CookieSettings">
</parameter>
</method>
<method name="setUnlockableAccounts"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="unlockableAccounts" type="java.util.List&lt;java.lang.String&gt;">
</parameter>
</method>
<method name="setUserValidationSettings"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="settings" type="org.apache.archiva.redback.policy.UserValidationSettings">
</parameter>
</method>
<method name="validatePassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
<exception name="PasswordRuleViolationException" type="org.apache.archiva.redback.policy.PasswordRuleViolationException">
</exception>
</method>
</class>
<class name="DefaultUserValidationSettings"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.policy.UserValidationSettings">
</implements>
<constructor name="DefaultUserValidationSettings"
 type="org.apache.archiva.redback.policy.DefaultUserValidationSettings"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getEmailSubject"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getEmailValidationTimeout"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="initialize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isEmailValidationRequired"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="MustChangePasswordException"
 extends="org.apache.archiva.redback.policy.PolicyViolationException"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="MustChangePasswordException"
 type="org.apache.archiva.redback.policy.MustChangePasswordException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
</constructor>
<method name="getUser"
 return="org.apache.archiva.redback.users.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<interface name="PasswordEncoder"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="encodePassword"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rawPass" type="java.lang.String">
</parameter>
</method>
<method name="encodePassword"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rawPass" type="java.lang.String">
</parameter>
<parameter name="salt" type="java.lang.Object">
</parameter>
</method>
<method name="isPasswordValid"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="encPass" type="java.lang.String">
</parameter>
<parameter name="rawPass" type="java.lang.String">
</parameter>
</method>
<method name="isPasswordValid"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="encPass" type="java.lang.String">
</parameter>
<parameter name="rawPass" type="java.lang.String">
</parameter>
<parameter name="salt" type="java.lang.Object">
</parameter>
</method>
<method name="setSystemSalt"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="salt" type="java.lang.Object">
</parameter>
</method>
</interface>
<class name="PasswordEncodingException"
 extends="java.lang.RuntimeException"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PasswordEncodingException"
 type="org.apache.archiva.redback.policy.PasswordEncodingException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="PasswordEncodingException"
 type="org.apache.archiva.redback.policy.PasswordEncodingException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="cause" type="java.lang.Throwable">
</parameter>
</constructor>
<constructor name="PasswordEncodingException"
 type="org.apache.archiva.redback.policy.PasswordEncodingException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
</constructor>
<constructor name="PasswordEncodingException"
 type="org.apache.archiva.redback.policy.PasswordEncodingException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cause" type="java.lang.Throwable">
</parameter>
</constructor>
</class>
<interface name="PasswordRule"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="initialize"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isEnabled"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="requiresSecurityPolicy"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setUserSecurityPolicy"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="policy" type="org.apache.archiva.redback.policy.UserSecurityPolicy">
</parameter>
</method>
<method name="testPassword"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="violations" type="org.apache.archiva.redback.policy.PasswordRuleViolations">
</parameter>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
</method>
</interface>
<class name="PasswordRuleViolationException"
 extends="java.lang.RuntimeException"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PasswordRuleViolationException"
 type="org.apache.archiva.redback.policy.PasswordRuleViolationException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="PasswordRuleViolationException"
 type="org.apache.archiva.redback.policy.PasswordRuleViolationException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="cause" type="java.lang.Throwable">
</parameter>
</constructor>
<constructor name="PasswordRuleViolationException"
 type="org.apache.archiva.redback.policy.PasswordRuleViolationException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
</constructor>
<constructor name="PasswordRuleViolationException"
 type="org.apache.archiva.redback.policy.PasswordRuleViolationException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cause" type="java.lang.Throwable">
</parameter>
</constructor>
<method name="getViolations"
 return="org.apache.archiva.redback.policy.PasswordRuleViolations"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setViolations"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="violations" type="org.apache.archiva.redback.policy.PasswordRuleViolations">
</parameter>
</method>
</class>
<class name="PasswordRuleViolations"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PasswordRuleViolations"
 type="org.apache.archiva.redback.policy.PasswordRuleViolations"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="addViolation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
</method>
<method name="addViolation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="args" type="java.lang.String[]">
</parameter>
</method>
<method name="getLocalizedViolations"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getViolations"
 return="java.util.List&lt;org.apache.archiva.redback.policy.PasswordRuleViolations.MessageReference&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="hasViolations"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="reset"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="PasswordRuleViolations.MessageReference"
 extends="java.lang.Object"
 abstract="false"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PasswordRuleViolations.MessageReference"
 type="org.apache.archiva.redback.policy.PasswordRuleViolations.MessageReference"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getArgs"
 return="java.lang.String[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getKey"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="PolicyContext"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PolicyContext"
 type="org.apache.archiva.redback.policy.PolicyContext"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="map" type="java.util.Map&lt;java.lang.Object, java.lang.Object&gt;">
</parameter>
</constructor>
<method name="get"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.Object">
</parameter>
</method>
<method name="getContext"
 return="org.apache.archiva.redback.policy.PolicyContext"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="put"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.Object">
</parameter>
<parameter name="value" type="java.lang.Object">
</parameter>
</method>
<method name="setContext"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="context" type="org.apache.archiva.redback.policy.PolicyContext">
</parameter>
</method>
</class>
<class name="PolicyViolationException"
 extends="java.lang.Exception"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PolicyViolationException"
 type="org.apache.archiva.redback.policy.PolicyViolationException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="PolicyViolationException"
 type="org.apache.archiva.redback.policy.PolicyViolationException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="cause" type="java.lang.Throwable">
</parameter>
</constructor>
<constructor name="PolicyViolationException"
 type="org.apache.archiva.redback.policy.PolicyViolationException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
</constructor>
<constructor name="PolicyViolationException"
 type="org.apache.archiva.redback.policy.PolicyViolationException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cause" type="java.lang.Throwable">
</parameter>
</constructor>
</class>
<class name="RememberMeCookieSettings"
 extends="org.apache.archiva.redback.policy.AbstractCookieSettings"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RememberMeCookieSettings"
 type="org.apache.archiva.redback.policy.RememberMeCookieSettings"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="initialize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isEnabled"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="SignonCookieSettings"
 extends="org.apache.archiva.redback.policy.AbstractCookieSettings"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="SignonCookieSettings"
 type="org.apache.archiva.redback.policy.SignonCookieSettings"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="initialize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isEnabled"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<interface name="UserSecurityPolicy"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="addPasswordRule"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rule" type="org.apache.archiva.redback.policy.PasswordRule">
</parameter>
</method>
<method name="extensionChangePassword"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
<exception name="PasswordRuleViolationException" type="org.apache.archiva.redback.policy.PasswordRuleViolationException">
</exception>
</method>
<method name="extensionChangePassword"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
<parameter name="passwordChangeRequired" type="boolean">
</parameter>
<exception name="PasswordRuleViolationException" type="org.apache.archiva.redback.policy.PasswordRuleViolationException">
</exception>
</method>
<method name="extensionExcessiveLoginAttempts"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
<exception name="AccountLockedException" type="org.apache.archiva.redback.policy.AccountLockedException">
</exception>
</method>
<method name="extensionPasswordExpiration"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
<exception name="MustChangePasswordException" type="org.apache.archiva.redback.policy.MustChangePasswordException">
</exception>
</method>
<method name="getId"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLoginAttemptCount"
 return="int"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPasswordEncoder"
 return="org.apache.archiva.redback.policy.PasswordEncoder"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPasswordExpirationDays"
 return="int"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPasswordRules"
 return="java.util.List&lt;org.apache.archiva.redback.policy.PasswordRule&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPreviousPasswordsCount"
 return="int"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getRememberMeCookieSettings"
 return="org.apache.archiva.redback.policy.CookieSettings"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSignonCookieSettings"
 return="org.apache.archiva.redback.policy.CookieSettings"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUnlockableAccounts"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUserValidationSettings"
 return="org.apache.archiva.redback.policy.UserValidationSettings"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isEnabled"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setEnabled"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enabled" type="boolean">
</parameter>
</method>
<method name="setLoginAttemptCount"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="count" type="int">
</parameter>
</method>
<method name="setPasswordExpirationDays"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="passwordExpiry" type="int">
</parameter>
</method>
<method name="setPasswordRules"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rules" type="java.util.List&lt;org.apache.archiva.redback.policy.PasswordRule&gt;">
</parameter>
</method>
<method name="setPreviousPasswordsCount"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="count" type="int">
</parameter>
</method>
<method name="setUnlockableAccounts"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="unlockableAccounts" type="java.util.List&lt;java.lang.String&gt;">
</parameter>
</method>
<method name="setUserValidationSettings"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="settings" type="org.apache.archiva.redback.policy.UserValidationSettings">
</parameter>
</method>
<method name="validatePassword"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
<exception name="PasswordRuleViolationException" type="org.apache.archiva.redback.policy.PasswordRuleViolationException">
</exception>
</method>
</interface>
<interface name="UserValidationSettings"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getEmailSubject"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getEmailValidationTimeout"
 return="int"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isEmailValidationRequired"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</interface>
</package>
<package name="org.apache.archiva.redback.policy.encoders"
>
<class name="AbstractJAASPasswordEncoder"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.policy.PasswordEncoder">
</implements>
<constructor name="AbstractJAASPasswordEncoder"
 type="org.apache.archiva.redback.policy.encoders.AbstractJAASPasswordEncoder"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="algorithm" type="java.lang.String">
</parameter>
</constructor>
<method name="encodePassword"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rawPass" type="java.lang.String">
</parameter>
<parameter name="salt" type="java.lang.Object">
</parameter>
</method>
<method name="encodePassword"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rawPass" type="java.lang.String">
</parameter>
</method>
<method name="isPasswordValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="encPass" type="java.lang.String">
</parameter>
<parameter name="rawPass" type="java.lang.String">
</parameter>
<parameter name="salt" type="java.lang.Object">
</parameter>
</method>
<method name="isPasswordValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="encPass" type="java.lang.String">
</parameter>
<parameter name="rawPass" type="java.lang.String">
</parameter>
</method>
<method name="setSystemSalt"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="salt" type="java.lang.Object">
</parameter>
</method>
</class>
<class name="PlainTextPasswordEncoder"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.policy.PasswordEncoder">
</implements>
<constructor name="PlainTextPasswordEncoder"
 type="org.apache.archiva.redback.policy.encoders.PlainTextPasswordEncoder"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="encodePassword"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rawPass" type="java.lang.String">
</parameter>
</method>
<method name="encodePassword"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rawPass" type="java.lang.String">
</parameter>
<parameter name="salt" type="java.lang.Object">
</parameter>
</method>
<method name="isPasswordValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="encPass" type="java.lang.String">
</parameter>
<parameter name="rawPass" type="java.lang.String">
</parameter>
</method>
<method name="isPasswordValid"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="encPass" type="java.lang.String">
</parameter>
<parameter name="rawPass" type="java.lang.String">
</parameter>
<parameter name="salt" type="java.lang.Object">
</parameter>
</method>
<method name="setSystemSalt"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="salt" type="java.lang.Object">
</parameter>
</method>
</class>
<class name="SHA1PasswordEncoder"
 extends="org.apache.archiva.redback.policy.encoders.AbstractJAASPasswordEncoder"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.policy.PasswordEncoder">
</implements>
<constructor name="SHA1PasswordEncoder"
 type="org.apache.archiva.redback.policy.encoders.SHA1PasswordEncoder"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
</class>
<class name="SHA256PasswordEncoder"
 extends="org.apache.archiva.redback.policy.encoders.AbstractJAASPasswordEncoder"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.policy.PasswordEncoder">
</implements>
<constructor name="SHA256PasswordEncoder"
 type="org.apache.archiva.redback.policy.encoders.SHA256PasswordEncoder"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
</class>
</package>
<package name="org.apache.archiva.redback.policy.rules"
>
<class name="AbstractPasswordRule"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.policy.PasswordRule">
</implements>
<constructor name="AbstractPasswordRule"
 type="org.apache.archiva.redback.policy.rules.AbstractPasswordRule"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="isEnabled"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="requiresSecurityPolicy"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<field name="config"
 type="org.apache.archiva.redback.configuration.UserConfiguration"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
<field name="enabled"
 type="boolean"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
</class>
<class name="AlphaNumericPasswordRule"
 extends="org.apache.archiva.redback.policy.rules.AbstractPasswordRule"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="AlphaNumericPasswordRule"
 type="org.apache.archiva.redback.policy.rules.AlphaNumericPasswordRule"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="initialize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setUserSecurityPolicy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="policy" type="org.apache.archiva.redback.policy.UserSecurityPolicy">
</parameter>
</method>
<method name="testPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="violations" type="org.apache.archiva.redback.policy.PasswordRuleViolations">
</parameter>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
</method>
<field name="ALPHANUM_VIOLATION"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;user.password.violation.alphanum.only&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="AlphaPasswordRule"
 extends="org.apache.archiva.redback.policy.rules.AbstractPasswordRule"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="AlphaPasswordRule"
 type="org.apache.archiva.redback.policy.rules.AlphaPasswordRule"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getMinimumCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="initialize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setMinimumCount"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="minimumCount" type="int">
</parameter>
</method>
<method name="setUserSecurityPolicy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="policy" type="org.apache.archiva.redback.policy.UserSecurityPolicy">
</parameter>
</method>
<method name="testPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="violations" type="org.apache.archiva.redback.policy.PasswordRuleViolations">
</parameter>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
</method>
</class>
<class name="CharacterLengthPasswordRule"
 extends="org.apache.archiva.redback.policy.rules.AbstractPasswordRule"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="CharacterLengthPasswordRule"
 type="org.apache.archiva.redback.policy.rules.CharacterLengthPasswordRule"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getMaximumCharacters"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getMinimumCharacters"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="initialize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setMaximumCharacters"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="maximumCharacters" type="int">
</parameter>
</method>
<method name="setMinimumCharacters"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="minimumCharacters" type="int">
</parameter>
</method>
<method name="setUserSecurityPolicy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="policy" type="org.apache.archiva.redback.policy.UserSecurityPolicy">
</parameter>
</method>
<method name="testPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="violations" type="org.apache.archiva.redback.policy.PasswordRuleViolations">
</parameter>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
</method>
<field name="DEFAULT_CHARACTER_LENGTH_MAX"
 type="int"
 transient="false"
 volatile="false"
 value="8"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="MustHavePasswordRule"
 extends="org.apache.archiva.redback.policy.rules.AbstractPasswordRule"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="MustHavePasswordRule"
 type="org.apache.archiva.redback.policy.rules.MustHavePasswordRule"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="initialize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setUserSecurityPolicy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="policy" type="org.apache.archiva.redback.policy.UserSecurityPolicy">
</parameter>
</method>
<method name="testPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="violations" type="org.apache.archiva.redback.policy.PasswordRuleViolations">
</parameter>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
</method>
<field name="MISSING_PASSWORD_VIOLATION"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;user.password.violation.missing&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="NumericalPasswordRule"
 extends="org.apache.archiva.redback.policy.rules.AbstractPasswordRule"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="NumericalPasswordRule"
 type="org.apache.archiva.redback.policy.rules.NumericalPasswordRule"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getMinimumCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="initialize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setMinimumCount"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="minimumCount" type="int">
</parameter>
</method>
<method name="setUserSecurityPolicy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="policy" type="org.apache.archiva.redback.policy.UserSecurityPolicy">
</parameter>
</method>
<method name="testPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="violations" type="org.apache.archiva.redback.policy.PasswordRuleViolations">
</parameter>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
</method>
</class>
<class name="ReusePasswordRule"
 extends="org.apache.archiva.redback.policy.rules.AbstractPasswordRule"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ReusePasswordRule"
 type="org.apache.archiva.redback.policy.rules.ReusePasswordRule"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getPreviousPasswordCount"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="initialize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setPreviousPasswordCount"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="previousPasswordCount" type="int">
</parameter>
</method>
<method name="setUserSecurityPolicy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="policy" type="org.apache.archiva.redback.policy.UserSecurityPolicy">
</parameter>
</method>
<method name="testPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="violations" type="org.apache.archiva.redback.policy.PasswordRuleViolations">
</parameter>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
</method>
<field name="REUSE_VIOLATION"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;user.password.violation.reuse&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
<class name="WhitespacePasswordRule"
 extends="org.apache.archiva.redback.policy.rules.AbstractPasswordRule"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="WhitespacePasswordRule"
 type="org.apache.archiva.redback.policy.rules.WhitespacePasswordRule"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="initialize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setUserSecurityPolicy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="policy" type="org.apache.archiva.redback.policy.UserSecurityPolicy">
</parameter>
</method>
<method name="testPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="violations" type="org.apache.archiva.redback.policy.PasswordRuleViolations">
</parameter>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
</method>
<field name="NO_WHITE_SPACE_VIOLATION"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;user.password.violation.whitespace.detected&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
</package>
<package name="org.apache.archiva.redback.rbac"
>
<class name="AbstractRBACManager"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.rbac.RBACManager">
</implements>
<constructor name="AbstractRBACManager"
 type="org.apache.archiva.redback.rbac.AbstractRBACManager"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="addChildRole"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
<parameter name="childRole" type="org.apache.archiva.redback.rbac.Role">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
</method>
<method name="addListener"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="org.apache.archiva.redback.rbac.RBACManagerListener">
</parameter>
</method>
<method name="fireRbacInit"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="freshdb" type="boolean">
</parameter>
</method>
<method name="fireRbacPermissionRemoved"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permission" type="org.apache.archiva.redback.rbac.Permission">
</parameter>
</method>
<method name="fireRbacPermissionSaved"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permission" type="org.apache.archiva.redback.rbac.Permission">
</parameter>
</method>
<method name="fireRbacRoleRemoved"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
</method>
<method name="fireRbacRoleSaved"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
</method>
<method name="fireRbacUserAssignmentRemoved"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userAssignment" type="org.apache.archiva.redback.rbac.UserAssignment">
</parameter>
</method>
<method name="fireRbacUserAssignmentSaved"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userAssignment" type="org.apache.archiva.redback.rbac.UserAssignment">
</parameter>
</method>
<method name="getAllAssignableRoles"
 return="java.util.List&lt;org.apache.archiva.redback.rbac.Role&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getAssignedPermissionMap"
 return="java.util.Map&lt;java.lang.String, java.util.List&lt;org.apache.archiva.redback.rbac.Permission&gt;&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getAssignedPermissions"
 return="java.util.Set&lt;org.apache.archiva.redback.rbac.Permission&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getAssignedRoles"
 return="java.util.Collection&lt;org.apache.archiva.redback.rbac.Role&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getAssignedRoles"
 return="java.util.Collection&lt;org.apache.archiva.redback.rbac.Role&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ua" type="org.apache.archiva.redback.rbac.UserAssignment">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getChildRoles"
 return="java.util.Map&lt;java.lang.String, org.apache.archiva.redback.rbac.Role&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="getEffectiveRoles"
 return="java.util.Set&lt;org.apache.archiva.redback.rbac.Role&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getEffectivelyAssignedRoles"
 return="java.util.Collection&lt;org.apache.archiva.redback.rbac.Role&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getEffectivelyAssignedRoles"
 return="java.util.Collection&lt;org.apache.archiva.redback.rbac.Role&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ua" type="org.apache.archiva.redback.rbac.UserAssignment">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getEffectivelyUnassignedRoles"
 return="java.util.Collection&lt;org.apache.archiva.redback.rbac.Role&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getGlobalResource"
 return="org.apache.archiva.redback.rbac.Resource"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="getParentRoles"
 return="java.util.Map&lt;java.lang.String, org.apache.archiva.redback.rbac.Role&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="getRoles"
 return="java.util.Map&lt;java.lang.String, org.apache.archiva.redback.rbac.Role&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleNames" type="java.util.Collection&lt;java.lang.String&gt;">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getUnassignedRoles"
 return="java.util.Collection&lt;org.apache.archiva.redback.rbac.Role&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="initialize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isFinalImplementation"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="operationExists"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="operation" type="org.apache.archiva.redback.rbac.Operation">
</parameter>
</method>
<method name="operationExists"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="permissionExists"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permission" type="org.apache.archiva.redback.rbac.Permission">
</parameter>
</method>
<method name="permissionExists"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="removeListener"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="org.apache.archiva.redback.rbac.RBACManagerListener">
</parameter>
</method>
<method name="removeOperation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="operationName" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="removePermission"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permissionName" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="removeResource"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="resourceIdentifier" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="removeRole"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleName" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="removeUserAssignment"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="resourceExists"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="resource" type="org.apache.archiva.redback.rbac.Resource">
</parameter>
</method>
<method name="resourceExists"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="identifier" type="java.lang.String">
</parameter>
</method>
<method name="roleExists"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="roleExists"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="userAssignmentExists"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
</method>
<method name="userAssignmentExists"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="assignment" type="org.apache.archiva.redback.rbac.UserAssignment">
</parameter>
</method>
<field name="log"
 type="org.slf4j.Logger"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
</class>
<class name="AbstractRole"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.rbac.Role">
</implements>
<constructor name="AbstractRole"
 type="org.apache.archiva.redback.rbac.AbstractRole"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="hasChildRoles"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="AbstractUserAssignment"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.rbac.UserAssignment">
</implements>
<constructor name="AbstractUserAssignment"
 type="org.apache.archiva.redback.rbac.AbstractUserAssignment"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="addRoleName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
</method>
<method name="addRoleName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleName" type="java.lang.String">
</parameter>
</method>
<method name="removeRoleName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
</method>
<method name="removeRoleName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleName" type="java.lang.String">
</parameter>
</method>
</class>
<interface name="Operation"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getDescription"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getName"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isPermanent"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setDescription"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="description" type="java.lang.String">
</parameter>
</method>
<method name="setName"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="setPermanent"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permanent" type="boolean">
</parameter>
</method>
</interface>
<interface name="Permission"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getDescription"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getName"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getOperation"
 return="org.apache.archiva.redback.rbac.Operation"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getResource"
 return="org.apache.archiva.redback.rbac.Resource"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isPermanent"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setDescription"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="description" type="java.lang.String">
</parameter>
</method>
<method name="setName"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="setOperation"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="operation" type="org.apache.archiva.redback.rbac.Operation">
</parameter>
</method>
<method name="setPermanent"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permanent" type="boolean">
</parameter>
</method>
<method name="setResource"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="resource" type="org.apache.archiva.redback.rbac.Resource">
</parameter>
</method>
</interface>
<interface name="RBACManager"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="addChildRole"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
<parameter name="childRole" type="org.apache.archiva.redback.rbac.Role">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
</method>
<method name="addListener"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="org.apache.archiva.redback.rbac.RBACManagerListener">
</parameter>
</method>
<method name="createOperation"
 return="org.apache.archiva.redback.rbac.Operation"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="createPermission"
 return="org.apache.archiva.redback.rbac.Permission"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="createPermission"
 return="org.apache.archiva.redback.rbac.Permission"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
<parameter name="operationName" type="java.lang.String">
</parameter>
<parameter name="resourceIdentifier" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="createResource"
 return="org.apache.archiva.redback.rbac.Resource"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="identifier" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="createRole"
 return="org.apache.archiva.redback.rbac.Role"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="createUserAssignment"
 return="org.apache.archiva.redback.rbac.UserAssignment"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="eraseDatabase"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getAllAssignableRoles"
 return="java.util.List&lt;org.apache.archiva.redback.rbac.Role&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getAllOperations"
 return="java.util.List&lt;org.apache.archiva.redback.rbac.Operation&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="getAllPermissions"
 return="java.util.List&lt;org.apache.archiva.redback.rbac.Permission&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="getAllResources"
 return="java.util.List&lt;org.apache.archiva.redback.rbac.Resource&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="getAllRoles"
 return="java.util.List&lt;org.apache.archiva.redback.rbac.Role&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="getAllUserAssignments"
 return="java.util.List&lt;org.apache.archiva.redback.rbac.UserAssignment&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="getAssignedPermissionMap"
 return="java.util.Map&lt;java.lang.String, java.util.List&lt;org.apache.archiva.redback.rbac.Permission&gt;&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getAssignedPermissions"
 return="java.util.Set&lt;org.apache.archiva.redback.rbac.Permission&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getAssignedRoles"
 return="java.util.Collection&lt;org.apache.archiva.redback.rbac.Role&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getAssignedRoles"
 return="java.util.Collection&lt;org.apache.archiva.redback.rbac.Role&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userAssignment" type="org.apache.archiva.redback.rbac.UserAssignment">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getChildRoles"
 return="java.util.Map&lt;java.lang.String, org.apache.archiva.redback.rbac.Role&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="getDescriptionKey"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getEffectiveRoles"
 return="java.util.Set&lt;org.apache.archiva.redback.rbac.Role&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getEffectivelyAssignedRoles"
 return="java.util.Collection&lt;org.apache.archiva.redback.rbac.Role&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getEffectivelyUnassignedRoles"
 return="java.util.Collection&lt;org.apache.archiva.redback.rbac.Role&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getGlobalResource"
 return="org.apache.archiva.redback.rbac.Resource"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="getOperation"
 return="org.apache.archiva.redback.rbac.Operation"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="operationName" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getParentRoles"
 return="java.util.Map&lt;java.lang.String, org.apache.archiva.redback.rbac.Role&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="getPermission"
 return="org.apache.archiva.redback.rbac.Permission"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permissionName" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getResource"
 return="org.apache.archiva.redback.rbac.Resource"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="resourceIdentifier" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getRole"
 return="org.apache.archiva.redback.rbac.Role"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleName" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getRoles"
 return="java.util.Map&lt;java.lang.String, org.apache.archiva.redback.rbac.Role&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleNames" type="java.util.Collection&lt;java.lang.String&gt;">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getUnassignedRoles"
 return="java.util.Collection&lt;org.apache.archiva.redback.rbac.Role&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getUserAssignment"
 return="org.apache.archiva.redback.rbac.UserAssignment"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getUserAssignmentsForRoles"
 return="java.util.List&lt;org.apache.archiva.redback.rbac.UserAssignment&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleNames" type="java.util.Collection&lt;java.lang.String&gt;">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="initialize"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isFinalImplementation"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isReadOnly"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="operationExists"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="operationExists"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="operation" type="org.apache.archiva.redback.rbac.Operation">
</parameter>
</method>
<method name="permissionExists"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="permissionExists"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permission" type="org.apache.archiva.redback.rbac.Permission">
</parameter>
</method>
<method name="removeListener"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="org.apache.archiva.redback.rbac.RBACManagerListener">
</parameter>
</method>
<method name="removeOperation"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="operation" type="org.apache.archiva.redback.rbac.Operation">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="removeOperation"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="operationName" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="removePermission"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permission" type="org.apache.archiva.redback.rbac.Permission">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="removePermission"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permissionName" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="removeResource"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="resource" type="org.apache.archiva.redback.rbac.Resource">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="removeResource"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="resourceIdentifier" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="removeRole"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="removeRole"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleName" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="removeUserAssignment"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userAssignment" type="org.apache.archiva.redback.rbac.UserAssignment">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="removeUserAssignment"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="resourceExists"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="identifier" type="java.lang.String">
</parameter>
</method>
<method name="resourceExists"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="resource" type="org.apache.archiva.redback.rbac.Resource">
</parameter>
</method>
<method name="roleExists"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="roleExists"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="saveOperation"
 return="org.apache.archiva.redback.rbac.Operation"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="operation" type="org.apache.archiva.redback.rbac.Operation">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
</method>
<method name="savePermission"
 return="org.apache.archiva.redback.rbac.Permission"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permission" type="org.apache.archiva.redback.rbac.Permission">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
</method>
<method name="saveResource"
 return="org.apache.archiva.redback.rbac.Resource"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="resource" type="org.apache.archiva.redback.rbac.Resource">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
</method>
<method name="saveRole"
 return="org.apache.archiva.redback.rbac.Role"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
</method>
<method name="saveRoles"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roles" type="java.util.Collection&lt;org.apache.archiva.redback.rbac.Role&gt;">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
</method>
<method name="saveUserAssignment"
 return="org.apache.archiva.redback.rbac.UserAssignment"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userAssignment" type="org.apache.archiva.redback.rbac.UserAssignment">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
</method>
<method name="userAssignmentExists"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
</method>
<method name="userAssignmentExists"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="assignment" type="org.apache.archiva.redback.rbac.UserAssignment">
</parameter>
</method>
</interface>
<interface name="RBACManagerListener"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="rbacInit"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="freshdb" type="boolean">
</parameter>
</method>
<method name="rbacPermissionRemoved"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permission" type="org.apache.archiva.redback.rbac.Permission">
</parameter>
</method>
<method name="rbacPermissionSaved"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permission" type="org.apache.archiva.redback.rbac.Permission">
</parameter>
</method>
<method name="rbacRoleRemoved"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
</method>
<method name="rbacRoleSaved"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
</method>
<method name="rbacUserAssignmentRemoved"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userAssignment" type="org.apache.archiva.redback.rbac.UserAssignment">
</parameter>
</method>
<method name="rbacUserAssignmentSaved"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userAssignment" type="org.apache.archiva.redback.rbac.UserAssignment">
</parameter>
</method>
</interface>
<class name="RBACObjectAssertions"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RBACObjectAssertions"
 type="org.apache.archiva.redback.rbac.RBACObjectAssertions"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="assertValid"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
</method>
<method name="assertValid"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="scope" type="java.lang.String">
</parameter>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
</method>
<method name="assertValid"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permission" type="org.apache.archiva.redback.rbac.Permission">
</parameter>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
</method>
<method name="assertValid"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="scope" type="java.lang.String">
</parameter>
<parameter name="permission" type="org.apache.archiva.redback.rbac.Permission">
</parameter>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
</method>
<method name="assertValid"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="operation" type="org.apache.archiva.redback.rbac.Operation">
</parameter>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
</method>
<method name="assertValid"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="scope" type="java.lang.String">
</parameter>
<parameter name="operation" type="org.apache.archiva.redback.rbac.Operation">
</parameter>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
</method>
<method name="assertValid"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="resource" type="org.apache.archiva.redback.rbac.Resource">
</parameter>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
</method>
<method name="assertValid"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="scope" type="java.lang.String">
</parameter>
<parameter name="resource" type="org.apache.archiva.redback.rbac.Resource">
</parameter>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
</method>
<method name="assertValid"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="assignment" type="org.apache.archiva.redback.rbac.UserAssignment">
</parameter>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
</method>
<method name="assertValid"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="scope" type="java.lang.String">
</parameter>
<parameter name="assignment" type="org.apache.archiva.redback.rbac.UserAssignment">
</parameter>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
</method>
</class>
<class name="RbacManagerException"
 extends="java.lang.Exception"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RbacManagerException"
 type="org.apache.archiva.redback.rbac.RbacManagerException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="RbacManagerException"
 type="org.apache.archiva.redback.rbac.RbacManagerException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="cause" type="java.lang.Throwable">
</parameter>
</constructor>
<constructor name="RbacManagerException"
 type="org.apache.archiva.redback.rbac.RbacManagerException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
</constructor>
<constructor name="RbacManagerException"
 type="org.apache.archiva.redback.rbac.RbacManagerException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cause" type="java.lang.Throwable">
</parameter>
</constructor>
</class>
<class name="RbacObjectInvalidException"
 extends="org.apache.archiva.redback.rbac.RbacManagerException"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RbacObjectInvalidException"
 type="org.apache.archiva.redback.rbac.RbacObjectInvalidException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="RbacObjectInvalidException"
 type="org.apache.archiva.redback.rbac.RbacObjectInvalidException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="cause" type="java.lang.Throwable">
</parameter>
</constructor>
<constructor name="RbacObjectInvalidException"
 type="org.apache.archiva.redback.rbac.RbacObjectInvalidException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
</constructor>
<constructor name="RbacObjectInvalidException"
 type="org.apache.archiva.redback.rbac.RbacObjectInvalidException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="scope" type="java.lang.String">
</parameter>
<parameter name="message" type="java.lang.String">
</parameter>
</constructor>
<constructor name="RbacObjectInvalidException"
 type="org.apache.archiva.redback.rbac.RbacObjectInvalidException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cause" type="java.lang.Throwable">
</parameter>
</constructor>
</class>
<class name="RbacObjectNotFoundException"
 extends="org.apache.archiva.redback.rbac.RbacManagerException"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RbacObjectNotFoundException"
 type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="RbacObjectNotFoundException"
 type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="cause" type="java.lang.Throwable">
</parameter>
</constructor>
<constructor name="RbacObjectNotFoundException"
 type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="cause" type="java.lang.Throwable">
</parameter>
<parameter name="object" type="java.lang.Object">
</parameter>
</constructor>
<constructor name="RbacObjectNotFoundException"
 type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
</constructor>
<constructor name="RbacObjectNotFoundException"
 type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="object" type="java.lang.Object">
</parameter>
</constructor>
<constructor name="RbacObjectNotFoundException"
 type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cause" type="java.lang.Throwable">
</parameter>
</constructor>
<method name="getObject"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="RbacPermanentException"
 extends="org.apache.archiva.redback.rbac.RbacManagerException"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RbacPermanentException"
 type="org.apache.archiva.redback.rbac.RbacPermanentException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="RbacPermanentException"
 type="org.apache.archiva.redback.rbac.RbacPermanentException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="cause" type="java.lang.Throwable">
</parameter>
</constructor>
<constructor name="RbacPermanentException"
 type="org.apache.archiva.redback.rbac.RbacPermanentException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
</constructor>
<constructor name="RbacPermanentException"
 type="org.apache.archiva.redback.rbac.RbacPermanentException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cause" type="java.lang.Throwable">
</parameter>
</constructor>
</class>
<class name="RbacSecurityViolation"
 extends="java.lang.Exception"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RbacSecurityViolation"
 type="org.apache.archiva.redback.rbac.RbacSecurityViolation"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</constructor>
</class>
<interface name="Resource"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getIdentifier"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isPattern"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isPermanent"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setIdentifier"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="identifier" type="java.lang.String">
</parameter>
</method>
<method name="setPattern"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pattern" type="boolean">
</parameter>
</method>
<method name="setPermanent"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permanent" type="boolean">
</parameter>
</method>
<field name="GLOBAL"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;*&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="NULL"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;-&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</interface>
<interface name="Role"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="addChildRoleName"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="addPermission"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permission" type="org.apache.archiva.redback.rbac.Permission">
</parameter>
</method>
<method name="getChildRoleNames"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getDescription"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getName"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPermissions"
 return="java.util.List&lt;org.apache.archiva.redback.rbac.Permission&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="hasChildRoles"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isAssignable"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isPermanent"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="removePermission"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permission" type="org.apache.archiva.redback.rbac.Permission">
</parameter>
</method>
<method name="setAssignable"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="assignable" type="boolean">
</parameter>
</method>
<method name="setChildRoleNames"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="names" type="java.util.List&lt;java.lang.String&gt;">
</parameter>
</method>
<method name="setDescription"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="description" type="java.lang.String">
</parameter>
</method>
<method name="setName"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="setPermanent"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permanent" type="boolean">
</parameter>
</method>
<method name="setPermissions"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permissions" type="java.util.List&lt;org.apache.archiva.redback.rbac.Permission&gt;">
</parameter>
</method>
</interface>
<class name="TemplatedRole"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="TemplatedRole"
 type="org.apache.archiva.redback.rbac.TemplatedRole"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
<parameter name="templateNamePrefix" type="java.lang.String">
</parameter>
<parameter name="delimeter" type="java.lang.String">
</parameter>
</constructor>
<method name="getDelimiter"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getResource"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getRole"
 return="org.apache.archiva.redback.rbac.Role"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTemplateNamePrefix"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setDelimiter"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="delimiter" type="java.lang.String">
</parameter>
</method>
<method name="setName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="setRole"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
</method>
<method name="setTemplateNamePrefix"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="templateNamePrefix" type="java.lang.String">
</parameter>
</method>
</class>
<interface name="UserAssignment"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="addRoleName"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
</method>
<method name="addRoleName"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleName" type="java.lang.String">
</parameter>
</method>
<method name="getPrincipal"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getRoleNames"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isPermanent"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="removeRoleName"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
</method>
<method name="removeRoleName"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleName" type="java.lang.String">
</parameter>
</method>
<method name="setPermanent"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permanent" type="boolean">
</parameter>
</method>
<method name="setPrincipal"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
</method>
<method name="setRoleNames"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roles" type="java.util.List&lt;java.lang.String&gt;">
</parameter>
</method>
</interface>
</package>
<package name="org.apache.archiva.redback.rbac.cached"
>
<class name="CachedRbacManager"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.rbac.RBACManager">
</implements>
<implements name="org.apache.archiva.redback.rbac.RBACManagerListener">
</implements>
<constructor name="CachedRbacManager"
 type="org.apache.archiva.redback.rbac.cached.CachedRbacManager"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="addChildRole"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
<parameter name="childRole" type="org.apache.archiva.redback.rbac.Role">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
</method>
<method name="addListener"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="org.apache.archiva.redback.rbac.RBACManagerListener">
</parameter>
</method>
<method name="createOperation"
 return="org.apache.archiva.redback.rbac.Operation"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="createPermission"
 return="org.apache.archiva.redback.rbac.Permission"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="createPermission"
 return="org.apache.archiva.redback.rbac.Permission"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
<parameter name="operationName" type="java.lang.String">
</parameter>
<parameter name="resourceIdentifier" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="createResource"
 return="org.apache.archiva.redback.rbac.Resource"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="identifier" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="createRole"
 return="org.apache.archiva.redback.rbac.Role"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="createUserAssignment"
 return="org.apache.archiva.redback.rbac.UserAssignment"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="eraseDatabase"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getAllAssignableRoles"
 return="java.util.List&lt;org.apache.archiva.redback.rbac.Role&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getAllOperations"
 return="java.util.List&lt;org.apache.archiva.redback.rbac.Operation&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="getAllPermissions"
 return="java.util.List&lt;org.apache.archiva.redback.rbac.Permission&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="getAllResources"
 return="java.util.List&lt;org.apache.archiva.redback.rbac.Resource&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="getAllRoles"
 return="java.util.List&lt;org.apache.archiva.redback.rbac.Role&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="getAllUserAssignments"
 return="java.util.List&lt;org.apache.archiva.redback.rbac.UserAssignment&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="getAssignedPermissionMap"
 return="java.util.Map&lt;java.lang.String, java.util.List&lt;org.apache.archiva.redback.rbac.Permission&gt;&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getAssignedPermissions"
 return="java.util.Set&lt;org.apache.archiva.redback.rbac.Permission&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getAssignedRoles"
 return="java.util.Collection&lt;org.apache.archiva.redback.rbac.Role&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getAssignedRoles"
 return="java.util.Collection&lt;org.apache.archiva.redback.rbac.Role&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userAssignment" type="org.apache.archiva.redback.rbac.UserAssignment">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getChildRoles"
 return="java.util.Map&lt;java.lang.String, org.apache.archiva.redback.rbac.Role&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="getDescriptionKey"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getEffectiveRoleSetCache"
 return="org.apache.archiva.redback.components.cache.Cache"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getEffectiveRoles"
 return="java.util.Set&lt;org.apache.archiva.redback.rbac.Role&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getEffectivelyAssignedRoles"
 return="java.util.Collection&lt;org.apache.archiva.redback.rbac.Role&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getEffectivelyUnassignedRoles"
 return="java.util.Collection&lt;org.apache.archiva.redback.rbac.Role&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getGlobalResource"
 return="org.apache.archiva.redback.rbac.Resource"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="getOperation"
 return="org.apache.archiva.redback.rbac.Operation"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="operationName" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getOperationsCache"
 return="org.apache.archiva.redback.components.cache.Cache"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getParentRoles"
 return="java.util.Map&lt;java.lang.String, org.apache.archiva.redback.rbac.Role&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="getPermission"
 return="org.apache.archiva.redback.rbac.Permission"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permissionName" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getPermissionsCache"
 return="org.apache.archiva.redback.components.cache.Cache"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getRbacImpl"
 return="org.apache.archiva.redback.rbac.RBACManager"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getResource"
 return="org.apache.archiva.redback.rbac.Resource"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="resourceIdentifier" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getResourcesCache"
 return="org.apache.archiva.redback.components.cache.Cache"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getRole"
 return="org.apache.archiva.redback.rbac.Role"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleName" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getRoles"
 return="java.util.Map&lt;java.lang.String, org.apache.archiva.redback.rbac.Role&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleNames" type="java.util.Collection&lt;java.lang.String&gt;">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getRolesCache"
 return="org.apache.archiva.redback.components.cache.Cache"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUnassignedRoles"
 return="java.util.Collection&lt;org.apache.archiva.redback.rbac.Role&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getUserAssignment"
 return="org.apache.archiva.redback.rbac.UserAssignment"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getUserAssignmentsCache"
 return="org.apache.archiva.redback.components.cache.Cache"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUserAssignmentsForRoles"
 return="java.util.List&lt;org.apache.archiva.redback.rbac.UserAssignment&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleNames" type="java.util.Collection&lt;java.lang.String&gt;">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="getUserPermissionsCache"
 return="org.apache.archiva.redback.components.cache.Cache"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="initialize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isFinalImplementation"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isReadOnly"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="operationExists"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="operation" type="org.apache.archiva.redback.rbac.Operation">
</parameter>
</method>
<method name="operationExists"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="permissionExists"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permission" type="org.apache.archiva.redback.rbac.Permission">
</parameter>
</method>
<method name="permissionExists"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="rbacInit"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="freshdb" type="boolean">
</parameter>
</method>
<method name="rbacPermissionRemoved"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permission" type="org.apache.archiva.redback.rbac.Permission">
</parameter>
</method>
<method name="rbacPermissionSaved"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permission" type="org.apache.archiva.redback.rbac.Permission">
</parameter>
</method>
<method name="rbacRoleRemoved"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
</method>
<method name="rbacRoleSaved"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
</method>
<method name="rbacUserAssignmentRemoved"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userAssignment" type="org.apache.archiva.redback.rbac.UserAssignment">
</parameter>
</method>
<method name="rbacUserAssignmentSaved"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userAssignment" type="org.apache.archiva.redback.rbac.UserAssignment">
</parameter>
</method>
<method name="removeListener"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="org.apache.archiva.redback.rbac.RBACManagerListener">
</parameter>
</method>
<method name="removeOperation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="operation" type="org.apache.archiva.redback.rbac.Operation">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="removeOperation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="operationName" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="removePermission"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permission" type="org.apache.archiva.redback.rbac.Permission">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="removePermission"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permissionName" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="removeResource"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="resource" type="org.apache.archiva.redback.rbac.Resource">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="removeResource"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="resourceIdentifier" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="removeRole"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="removeRole"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleName" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="removeUserAssignment"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="removeUserAssignment"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userAssignment" type="org.apache.archiva.redback.rbac.UserAssignment">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="resourceExists"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="resource" type="org.apache.archiva.redback.rbac.Resource">
</parameter>
</method>
<method name="resourceExists"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="identifier" type="java.lang.String">
</parameter>
</method>
<method name="roleExists"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="roleExists"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="saveOperation"
 return="org.apache.archiva.redback.rbac.Operation"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="operation" type="org.apache.archiva.redback.rbac.Operation">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
</method>
<method name="savePermission"
 return="org.apache.archiva.redback.rbac.Permission"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permission" type="org.apache.archiva.redback.rbac.Permission">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
</method>
<method name="saveResource"
 return="org.apache.archiva.redback.rbac.Resource"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="resource" type="org.apache.archiva.redback.rbac.Resource">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
</method>
<method name="saveRole"
 return="org.apache.archiva.redback.rbac.Role"
 abstract="false"
 native="false"
 synchronized="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
</method>
<method name="saveRoles"
 return="void"
 abstract="false"
 native="false"
 synchronized="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roles" type="java.util.Collection&lt;org.apache.archiva.redback.rbac.Role&gt;">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
</method>
<method name="saveUserAssignment"
 return="org.apache.archiva.redback.rbac.UserAssignment"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userAssignment" type="org.apache.archiva.redback.rbac.UserAssignment">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
</method>
<method name="setEffectiveRoleSetCache"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="effectiveRoleSetCache" type="org.apache.archiva.redback.components.cache.Cache">
</parameter>
</method>
<method name="setOperationsCache"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="operationsCache" type="org.apache.archiva.redback.components.cache.Cache">
</parameter>
</method>
<method name="setPermissionsCache"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permissionsCache" type="org.apache.archiva.redback.components.cache.Cache">
</parameter>
</method>
<method name="setRbacImpl"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rbacImpl" type="org.apache.archiva.redback.rbac.RBACManager">
</parameter>
</method>
<method name="setResourcesCache"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="resourcesCache" type="org.apache.archiva.redback.components.cache.Cache">
</parameter>
</method>
<method name="setRolesCache"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rolesCache" type="org.apache.archiva.redback.components.cache.Cache">
</parameter>
</method>
<method name="setUserAssignmentsCache"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userAssignmentsCache" type="org.apache.archiva.redback.components.cache.Cache">
</parameter>
</method>
<method name="setUserPermissionsCache"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userPermissionsCache" type="org.apache.archiva.redback.components.cache.Cache">
</parameter>
</method>
<method name="userAssignmentExists"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
</method>
<method name="userAssignmentExists"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="assignment" type="org.apache.archiva.redback.rbac.UserAssignment">
</parameter>
</method>
</class>
</package>
<package name="org.apache.archiva.redback.rbac.jdo"
>
<class name="JdoOperation"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.rbac.Operation">
</implements>
<constructor name="JdoOperation"
 type="org.apache.archiva.redback.rbac.jdo.JdoOperation"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getDescription"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isPermanent"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isResourceRequired"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setDescription"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="description" type="java.lang.String">
</parameter>
</method>
<method name="setName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="setPermanent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permanent" type="boolean">
</parameter>
</method>
<method name="setResourceRequired"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="resourceRequired" type="boolean">
</parameter>
</method>
</class>
<class name="JdoPermission"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.rbac.Permission">
</implements>
<constructor name="JdoPermission"
 type="org.apache.archiva.redback.rbac.jdo.JdoPermission"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getDescription"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getOperation"
 return="org.apache.archiva.redback.rbac.Operation"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getResource"
 return="org.apache.archiva.redback.rbac.Resource"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isPermanent"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setDescription"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="description" type="java.lang.String">
</parameter>
</method>
<method name="setName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="setOperation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="operation" type="org.apache.archiva.redback.rbac.Operation">
</parameter>
</method>
<method name="setPermanent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permanent" type="boolean">
</parameter>
</method>
<method name="setResource"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="resource" type="org.apache.archiva.redback.rbac.Resource">
</parameter>
</method>
</class>
<class name="JdoRbacManager"
 extends="org.apache.archiva.redback.rbac.AbstractRBACManager"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.rbac.RBACManagerListener">
</implements>
<constructor name="JdoRbacManager"
 type="org.apache.archiva.redback.rbac.jdo.JdoRbacManager"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="createOperation"
 return="org.apache.archiva.redback.rbac.Operation"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="createPermission"
 return="org.apache.archiva.redback.rbac.Permission"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="createPermission"
 return="org.apache.archiva.redback.rbac.Permission"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
<parameter name="operationName" type="java.lang.String">
</parameter>
<parameter name="resourceIdentifier" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="createResource"
 return="org.apache.archiva.redback.rbac.Resource"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="identifier" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="createRole"
 return="org.apache.archiva.redback.rbac.Role"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="createUserAssignment"
 return="org.apache.archiva.redback.rbac.UserAssignment"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
</method>
<method name="eraseDatabase"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getAllOperations"
 return="java.util.List&lt;org.apache.archiva.redback.rbac.Operation&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="getAllPermissions"
 return="java.util.List&lt;org.apache.archiva.redback.rbac.Permission&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="getAllResources"
 return="java.util.List&lt;org.apache.archiva.redback.rbac.Resource&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="getAllRoles"
 return="java.util.List&lt;org.apache.archiva.redback.rbac.Role&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="getAllUserAssignments"
 return="java.util.List&lt;org.apache.archiva.redback.rbac.UserAssignment&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="getDescriptionKey"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getJdo"
 return="org.apache.archiva.redback.rbac.jdo.JdoTool"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getOperation"
 return="org.apache.archiva.redback.rbac.Operation"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="operationName" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getPermission"
 return="org.apache.archiva.redback.rbac.Permission"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permissionName" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getResource"
 return="org.apache.archiva.redback.rbac.Resource"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="resourceIdentifier" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getRole"
 return="org.apache.archiva.redback.rbac.Role"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleName" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getUserAssignment"
 return="org.apache.archiva.redback.rbac.UserAssignment"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getUserAssignmentsForRoles"
 return="java.util.List&lt;org.apache.archiva.redback.rbac.UserAssignment&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleNames" type="java.util.Collection&lt;java.lang.String&gt;">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="isEnableCache"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isReadOnly"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="rbacInit"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="freshdb" type="boolean">
</parameter>
</method>
<method name="rbacPermissionRemoved"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permission" type="org.apache.archiva.redback.rbac.Permission">
</parameter>
</method>
<method name="rbacPermissionSaved"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permission" type="org.apache.archiva.redback.rbac.Permission">
</parameter>
</method>
<method name="rbacRoleRemoved"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
</method>
<method name="rbacRoleSaved"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
</method>
<method name="rbacUserAssignmentRemoved"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userAssignment" type="org.apache.archiva.redback.rbac.UserAssignment">
</parameter>
</method>
<method name="rbacUserAssignmentSaved"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userAssignment" type="org.apache.archiva.redback.rbac.UserAssignment">
</parameter>
</method>
<method name="removeOperation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="operation" type="org.apache.archiva.redback.rbac.Operation">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="removePermission"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permission" type="org.apache.archiva.redback.rbac.Permission">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="removeResource"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="resource" type="org.apache.archiva.redback.rbac.Resource">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="removeRole"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="removeUserAssignment"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userAssignment" type="org.apache.archiva.redback.rbac.UserAssignment">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="saveOperation"
 return="org.apache.archiva.redback.rbac.Operation"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="operation" type="org.apache.archiva.redback.rbac.Operation">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
</method>
<method name="savePermission"
 return="org.apache.archiva.redback.rbac.Permission"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permission" type="org.apache.archiva.redback.rbac.Permission">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
</method>
<method name="saveResource"
 return="org.apache.archiva.redback.rbac.Resource"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="resource" type="org.apache.archiva.redback.rbac.Resource">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
</method>
<method name="saveRole"
 return="org.apache.archiva.redback.rbac.Role"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
</method>
<method name="saveRoles"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roles" type="java.util.Collection&lt;org.apache.archiva.redback.rbac.Role&gt;">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
</method>
<method name="saveUserAssignment"
 return="org.apache.archiva.redback.rbac.UserAssignment"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userAssignment" type="org.apache.archiva.redback.rbac.UserAssignment">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
</method>
<method name="setEnableCache"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="enableCache" type="boolean">
</parameter>
</method>
<method name="setJdo"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jdo" type="org.apache.archiva.redback.rbac.jdo.JdoTool">
</parameter>
</method>
</class>
<class name="JdoResource"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.rbac.Resource">
</implements>
<constructor name="JdoResource"
 type="org.apache.archiva.redback.rbac.jdo.JdoResource"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getIdentifier"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isPattern"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isPermanent"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setIdentifier"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="identifier" type="java.lang.String">
</parameter>
</method>
<method name="setPattern"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pattern" type="boolean">
</parameter>
</method>
<method name="setPermanent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permanent" type="boolean">
</parameter>
</method>
</class>
<class name="JdoRole"
 extends="org.apache.archiva.redback.rbac.AbstractRole"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.rbac.Role">
</implements>
<constructor name="JdoRole"
 type="org.apache.archiva.redback.rbac.jdo.JdoRole"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="addChildRoleName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="string" type="java.lang.String">
</parameter>
</method>
<method name="addPermission"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jdoPermission" type="org.apache.archiva.redback.rbac.Permission">
</parameter>
</method>
<method name="getChildRoleNames"
 return="java.util.List"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getDescription"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPermissions"
 return="java.util.List"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isAssignable"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isPermanent"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="removeChildRoleName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="string" type="java.lang.String">
</parameter>
</method>
<method name="removePermission"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jdoPermission" type="org.apache.archiva.redback.rbac.Permission">
</parameter>
</method>
<method name="setAssignable"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="assignable" type="boolean">
</parameter>
</method>
<method name="setChildRoleNames"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="childRoleNames" type="java.util.List">
</parameter>
</method>
<method name="setDescription"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="description" type="java.lang.String">
</parameter>
</method>
<method name="setName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="setPermanent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permanent" type="boolean">
</parameter>
</method>
<method name="setPermissions"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permissions" type="java.util.List">
</parameter>
</method>
</class>
<class name="JdoTool"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="JdoTool"
 type="org.apache.archiva.redback.rbac.jdo.JdoTool"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="closePersistenceManager"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pm" type="javax.jdo.PersistenceManager">
</parameter>
</method>
<method name="dumpObjectState"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="out" type="java.io.PrintStream">
</parameter>
<parameter name="o" type="java.lang.Object">
</parameter>
</method>
<method name="enableCache"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="clazz" type="java.lang.Class&lt;?&gt;">
</parameter>
</method>
<method name="getAllObjects"
 return="java.util.List&lt;?&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="clazz" type="java.lang.Class&lt;?&gt;">
</parameter>
</method>
<method name="getAllObjects"
 return="java.util.List&lt;?&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="clazz" type="java.lang.Class&lt;?&gt;">
</parameter>
<parameter name="ordering" type="java.lang.String">
</parameter>
</method>
<method name="getAllObjects"
 return="java.util.List&lt;?&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="clazz" type="java.lang.Class&lt;?&gt;">
</parameter>
<parameter name="ordering" type="java.lang.String">
</parameter>
<parameter name="fetchGroup" type="java.lang.String">
</parameter>
</method>
<method name="getJdoFactory"
 return="org.apache.archiva.redback.components.jdo.JdoFactory"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getListener"
 return="org.apache.archiva.redback.rbac.RBACManagerListener"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getObjectById"
 return="T"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="clazz" type="java.lang.Class&lt;T&gt;">
</parameter>
<parameter name="id" type="java.lang.String">
</parameter>
<parameter name="fetchGroup" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getPersistenceManager"
 return="javax.jdo.PersistenceManager"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUserAssignmentsForRoles"
 return="java.util.List&lt;?&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="clazz" type="java.lang.Class&lt;?&gt;">
</parameter>
<parameter name="ordering" type="java.lang.String">
</parameter>
<parameter name="roleNames" type="java.util.Collection&lt;java.lang.String&gt;">
</parameter>
</method>
<method name="initialize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="objectExists"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="object" type="java.lang.Object">
</parameter>
</method>
<method name="objectExistsById"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="clazz" type="java.lang.Class&lt;?&gt;">
</parameter>
<parameter name="id" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="postDelete"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="evt" type="javax.jdo.listener.InstanceLifecycleEvent">
</parameter>
</method>
<method name="postStore"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="evt" type="javax.jdo.listener.InstanceLifecycleEvent">
</parameter>
</method>
<method name="preDelete"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="evt" type="javax.jdo.listener.InstanceLifecycleEvent">
</parameter>
</method>
<method name="preStore"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="evt" type="javax.jdo.listener.InstanceLifecycleEvent">
</parameter>
</method>
<method name="removeAll"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="aClass" type="java.lang.Class&lt;?&gt;">
</parameter>
</method>
<method name="removeObject"
 return="T"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="o" type="T">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="rollbackIfActive"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="tx" type="javax.jdo.Transaction">
</parameter>
</method>
<method name="saveObject"
 return="T"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="object" type="T">
</parameter>
</method>
<method name="saveObject"
 return="T"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="object" type="T">
</parameter>
<parameter name="fetchGroups" type="java.lang.String[]">
</parameter>
</method>
<method name="setJdoFactory"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jdoFactory" type="org.apache.archiva.redback.components.jdo.JdoFactory">
</parameter>
</method>
<method name="setListener"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="org.apache.archiva.redback.rbac.RBACManagerListener">
</parameter>
</method>
<method name="triggerInit"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="JdoUserAssignment"
 extends="org.apache.archiva.redback.rbac.AbstractUserAssignment"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.rbac.UserAssignment">
</implements>
<constructor name="JdoUserAssignment"
 type="org.apache.archiva.redback.rbac.jdo.JdoUserAssignment"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getPrincipal"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getRoleNames"
 return="java.util.List"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTimestamp"
 return="java.util.Date"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isPermanent"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setPermanent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permanent" type="boolean">
</parameter>
</method>
<method name="setPrincipal"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
</method>
<method name="setRoleNames"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleNames" type="java.util.List">
</parameter>
</method>
<method name="setTimestamp"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="timestamp" type="java.util.Date">
</parameter>
</method>
</class>
<class name="RbacDatabase"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RbacDatabase"
 type="org.apache.archiva.redback.rbac.jdo.RbacDatabase"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="addOperation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jdoOperation" type="org.apache.archiva.redback.rbac.jdo.JdoOperation">
</parameter>
</method>
<method name="addPermission"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jdoPermission" type="org.apache.archiva.redback.rbac.jdo.JdoPermission">
</parameter>
</method>
<method name="addResource"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jdoResource" type="org.apache.archiva.redback.rbac.jdo.JdoResource">
</parameter>
</method>
<method name="addRole"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jdoRole" type="org.apache.archiva.redback.rbac.jdo.JdoRole">
</parameter>
</method>
<method name="addUserAssignment"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jdoUserAssignment" type="org.apache.archiva.redback.rbac.jdo.JdoUserAssignment">
</parameter>
</method>
<method name="getModelEncoding"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getOperations"
 return="java.util.List"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPermissions"
 return="java.util.List"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getResources"
 return="java.util.List"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getRoles"
 return="java.util.List"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUserAssignments"
 return="java.util.List"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="removeOperation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jdoOperation" type="org.apache.archiva.redback.rbac.jdo.JdoOperation">
</parameter>
</method>
<method name="removePermission"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jdoPermission" type="org.apache.archiva.redback.rbac.jdo.JdoPermission">
</parameter>
</method>
<method name="removeResource"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jdoResource" type="org.apache.archiva.redback.rbac.jdo.JdoResource">
</parameter>
</method>
<method name="removeRole"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jdoRole" type="org.apache.archiva.redback.rbac.jdo.JdoRole">
</parameter>
</method>
<method name="removeUserAssignment"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jdoUserAssignment" type="org.apache.archiva.redback.rbac.jdo.JdoUserAssignment">
</parameter>
</method>
<method name="setModelEncoding"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="modelEncoding" type="java.lang.String">
</parameter>
</method>
<method name="setOperations"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="operations" type="java.util.List">
</parameter>
</method>
<method name="setPermissions"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permissions" type="java.util.List">
</parameter>
</method>
<method name="setResources"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="resources" type="java.util.List">
</parameter>
</method>
<method name="setRoles"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roles" type="java.util.List">
</parameter>
</method>
<method name="setUserAssignments"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userAssignments" type="java.util.List">
</parameter>
</method>
</class>
<class name="RbacJdoModelModelloMetadata"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RbacJdoModelModelloMetadata"
 type="org.apache.archiva.redback.rbac.jdo.RbacJdoModelModelloMetadata"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getModelVersion"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setModelVersion"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="modelVersion" type="java.lang.String">
</parameter>
</method>
</class>
</package>
<package name="org.apache.archiva.redback.rbac.jdo.io.stax"
>
<class name="RbacJdoModelStaxReader"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RbacJdoModelStaxReader"
 type="org.apache.archiva.redback.rbac.jdo.io.stax.RbacJdoModelStaxReader"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="read"
 return="org.apache.archiva.redback.rbac.jdo.RbacDatabase"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="reader" type="java.io.Reader">
</parameter>
<parameter name="strict" type="boolean">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="XMLStreamException" type="javax.xml.stream.XMLStreamException">
</exception>
</method>
<method name="read"
 return="org.apache.archiva.redback.rbac.jdo.RbacDatabase"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="reader" type="java.io.Reader">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="XMLStreamException" type="javax.xml.stream.XMLStreamException">
</exception>
</method>
<method name="read"
 return="org.apache.archiva.redback.rbac.jdo.RbacDatabase"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.InputStream">
</parameter>
<parameter name="strict" type="boolean">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="XMLStreamException" type="javax.xml.stream.XMLStreamException">
</exception>
</method>
<method name="read"
 return="org.apache.archiva.redback.rbac.jdo.RbacDatabase"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.InputStream">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="XMLStreamException" type="javax.xml.stream.XMLStreamException">
</exception>
</method>
<method name="read"
 return="org.apache.archiva.redback.rbac.jdo.RbacDatabase"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filePath" type="java.lang.String">
</parameter>
<parameter name="strict" type="boolean">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="XMLStreamException" type="javax.xml.stream.XMLStreamException">
</exception>
</method>
<method name="read"
 return="org.apache.archiva.redback.rbac.jdo.RbacDatabase"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filePath" type="java.lang.String">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="XMLStreamException" type="javax.xml.stream.XMLStreamException">
</exception>
</method>
</class>
<class name="RbacJdoModelStaxWriter"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RbacJdoModelStaxWriter"
 type="org.apache.archiva.redback.rbac.jdo.io.stax.RbacJdoModelStaxWriter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="write"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="writer" type="java.io.Writer">
</parameter>
<parameter name="rbacDatabase" type="org.apache.archiva.redback.rbac.jdo.RbacDatabase">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="XMLStreamException" type="javax.xml.stream.XMLStreamException">
</exception>
</method>
<method name="write"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.OutputStream">
</parameter>
<parameter name="rbacDatabase" type="org.apache.archiva.redback.rbac.jdo.RbacDatabase">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="XMLStreamException" type="javax.xml.stream.XMLStreamException">
</exception>
</method>
</class>
</package>
<package name="org.apache.archiva.redback.rbac.ldap"
>
<class name="LdapRbacManager"
 extends="org.apache.archiva.redback.rbac.AbstractRBACManager"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.rbac.RBACManager">
</implements>
<implements name="org.apache.archiva.redback.rbac.RBACManagerListener">
</implements>
<constructor name="LdapRbacManager"
 type="org.apache.archiva.redback.rbac.ldap.LdapRbacManager"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="closeContext"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="context" type="javax.naming.directory.DirContext">
</parameter>
</method>
<method name="closeLdapConnection"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="ldapConnection" type="org.apache.archiva.redback.common.ldap.connection.LdapConnection">
</parameter>
</method>
<method name="createOperation"
 return="org.apache.archiva.redback.rbac.Operation"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="createPermission"
 return="org.apache.archiva.redback.rbac.Permission"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="createPermission"
 return="org.apache.archiva.redback.rbac.Permission"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
<parameter name="operationName" type="java.lang.String">
</parameter>
<parameter name="resourceIdentifier" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="createResource"
 return="org.apache.archiva.redback.rbac.Resource"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="identifier" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="createRole"
 return="org.apache.archiva.redback.rbac.Role"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="createUserAssignment"
 return="org.apache.archiva.redback.rbac.UserAssignment"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="eraseDatabase"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getAllOperations"
 return="java.util.List&lt;org.apache.archiva.redback.rbac.Operation&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="getAllPermissions"
 return="java.util.List&lt;org.apache.archiva.redback.rbac.Permission&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="getAllResources"
 return="java.util.List&lt;org.apache.archiva.redback.rbac.Resource&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="getAllRoles"
 return="java.util.List&lt;org.apache.archiva.redback.rbac.Role&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="getAllUserAssignments"
 return="java.util.List&lt;org.apache.archiva.redback.rbac.UserAssignment&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="getDescriptionKey"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLdapRoleMapper"
 return="org.apache.archiva.redback.common.ldap.role.LdapRoleMapper"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getOperation"
 return="org.apache.archiva.redback.rbac.Operation"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="operationName" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="getPermission"
 return="org.apache.archiva.redback.rbac.Permission"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permissionName" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="getRbacImpl"
 return="org.apache.archiva.redback.rbac.RBACManager"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getRealRoles"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="getResource"
 return="org.apache.archiva.redback.rbac.Resource"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="resourceIdentifier" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="getRole"
 return="org.apache.archiva.redback.rbac.Role"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleName" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="getUserAssignment"
 return="org.apache.archiva.redback.rbac.UserAssignment"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="getUserAssignmentsForRoles"
 return="java.util.List&lt;org.apache.archiva.redback.rbac.UserAssignment&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleNames" type="java.util.Collection&lt;java.lang.String&gt;">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="isReadOnly"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isWritableLdap"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="rbacInit"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="freshdb" type="boolean">
</parameter>
</method>
<method name="rbacPermissionRemoved"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permission" type="org.apache.archiva.redback.rbac.Permission">
</parameter>
</method>
<method name="rbacPermissionSaved"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permission" type="org.apache.archiva.redback.rbac.Permission">
</parameter>
</method>
<method name="rbacRoleRemoved"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
</method>
<method name="rbacRoleSaved"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
</method>
<method name="rbacUserAssignmentRemoved"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userAssignment" type="org.apache.archiva.redback.rbac.UserAssignment">
</parameter>
</method>
<method name="rbacUserAssignmentSaved"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userAssignment" type="org.apache.archiva.redback.rbac.UserAssignment">
</parameter>
</method>
<method name="removeOperation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="operation" type="org.apache.archiva.redback.rbac.Operation">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="removePermission"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permission" type="org.apache.archiva.redback.rbac.Permission">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="removeResource"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="resource" type="org.apache.archiva.redback.rbac.Resource">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="removeRole"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="removeUserAssignment"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userAssignment" type="org.apache.archiva.redback.rbac.UserAssignment">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="saveOperation"
 return="org.apache.archiva.redback.rbac.Operation"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="operation" type="org.apache.archiva.redback.rbac.Operation">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="savePermission"
 return="org.apache.archiva.redback.rbac.Permission"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permission" type="org.apache.archiva.redback.rbac.Permission">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="saveResource"
 return="org.apache.archiva.redback.rbac.Resource"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="resource" type="org.apache.archiva.redback.rbac.Resource">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="saveRole"
 return="org.apache.archiva.redback.rbac.Role"
 abstract="false"
 native="false"
 synchronized="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="saveRoles"
 return="void"
 abstract="false"
 native="false"
 synchronized="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roles" type="java.util.Collection&lt;org.apache.archiva.redback.rbac.Role&gt;">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="saveUserAssignment"
 return="org.apache.archiva.redback.rbac.UserAssignment"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userAssignment" type="org.apache.archiva.redback.rbac.UserAssignment">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="setLdapRoleMapper"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ldapRoleMapper" type="org.apache.archiva.redback.common.ldap.role.LdapRoleMapper">
</parameter>
</method>
<method name="setRbacImpl"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rbacImpl" type="org.apache.archiva.redback.rbac.RBACManager">
</parameter>
</method>
<method name="setWritableLdap"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="writableLdap" type="boolean">
</parameter>
</method>
</class>
</package>
<package name="org.apache.archiva.redback.rbac.memory"
>
<class name="MemoryAuthorizationDataSource"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="MemoryAuthorizationDataSource"
 type="org.apache.archiva.redback.rbac.memory.MemoryAuthorizationDataSource"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.Object">
</parameter>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
<parameter name="permission" type="java.lang.Object">
</parameter>
</constructor>
<method name="getPermission"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPrincipal"
 return="java.lang.Object"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUser"
 return="org.apache.archiva.redback.users.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setPermission"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permission" type="java.lang.Object">
</parameter>
</method>
<method name="setPrincipal"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
</method>
<method name="setUser"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
</method>
</class>
<class name="MemoryAuthorizer"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.authorization.Authorizer">
</implements>
<constructor name="MemoryAuthorizer"
 type="org.apache.archiva.redback.rbac.memory.MemoryAuthorizer"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getDescriptionKey"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getId"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isAuthorized"
 return="org.apache.archiva.redback.authorization.AuthorizationResult"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="source" type="org.apache.archiva.redback.authorization.AuthorizationDataSource">
</parameter>
<exception name="AuthorizationException" type="org.apache.archiva.redback.authorization.AuthorizationException">
</exception>
</method>
<method name="isFinalImplementation"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="MemoryOperation"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.rbac.Operation">
</implements>
<constructor name="MemoryOperation"
 type="org.apache.archiva.redback.rbac.memory.MemoryOperation"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getDescription"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isPermanent"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isResourceRequired"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setDescription"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="description" type="java.lang.String">
</parameter>
</method>
<method name="setName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="setPermanent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permanent" type="boolean">
</parameter>
</method>
<method name="setResourceRequired"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="resourceRequired" type="boolean">
</parameter>
</method>
</class>
<class name="MemoryPermission"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.rbac.Permission">
</implements>
<constructor name="MemoryPermission"
 type="org.apache.archiva.redback.rbac.memory.MemoryPermission"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getDescription"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getOperation"
 return="org.apache.archiva.redback.rbac.Operation"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getResource"
 return="org.apache.archiva.redback.rbac.Resource"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isPermanent"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setDescription"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="description" type="java.lang.String">
</parameter>
</method>
<method name="setName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="setOperation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="operation" type="org.apache.archiva.redback.rbac.Operation">
</parameter>
</method>
<method name="setPermanent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permanent" type="boolean">
</parameter>
</method>
<method name="setResource"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="resource" type="org.apache.archiva.redback.rbac.Resource">
</parameter>
</method>
</class>
<class name="MemoryRbacManager"
 extends="org.apache.archiva.redback.rbac.AbstractRBACManager"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.rbac.RBACManager">
</implements>
<constructor name="MemoryRbacManager"
 type="org.apache.archiva.redback.rbac.memory.MemoryRbacManager"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="createOperation"
 return="org.apache.archiva.redback.rbac.Operation"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="createPermission"
 return="org.apache.archiva.redback.rbac.Permission"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="createPermission"
 return="org.apache.archiva.redback.rbac.Permission"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
<parameter name="operationName" type="java.lang.String">
</parameter>
<parameter name="resourceIdentifier" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="createResource"
 return="org.apache.archiva.redback.rbac.Resource"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="identifier" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="createRole"
 return="org.apache.archiva.redback.rbac.Role"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="createUserAssignment"
 return="org.apache.archiva.redback.rbac.UserAssignment"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="eraseDatabase"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getAllOperations"
 return="java.util.List&lt;org.apache.archiva.redback.rbac.Operation&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="getAllPermissions"
 return="java.util.List&lt;org.apache.archiva.redback.rbac.Permission&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="getAllResources"
 return="java.util.List&lt;org.apache.archiva.redback.rbac.Resource&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="getAllRoles"
 return="java.util.List&lt;org.apache.archiva.redback.rbac.Role&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="getAllUserAssignments"
 return="java.util.List&lt;org.apache.archiva.redback.rbac.UserAssignment&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="getDescriptionKey"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getOperation"
 return="org.apache.archiva.redback.rbac.Operation"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="operationName" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getPermission"
 return="org.apache.archiva.redback.rbac.Permission"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permissionName" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getResource"
 return="org.apache.archiva.redback.rbac.Resource"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="resourceIdentifier" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getResources"
 return="java.util.List&lt;org.apache.archiva.redback.rbac.Resource&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="getRole"
 return="org.apache.archiva.redback.rbac.Role"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleName" type="java.lang.String">
</parameter>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getUserAssignment"
 return="org.apache.archiva.redback.rbac.UserAssignment"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="getUserAssignmentsForRoles"
 return="java.util.List&lt;org.apache.archiva.redback.rbac.UserAssignment&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleNames" type="java.util.Collection&lt;java.lang.String&gt;">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="isReadOnly"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="removeOperation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="operation" type="org.apache.archiva.redback.rbac.Operation">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="removePermission"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permission" type="org.apache.archiva.redback.rbac.Permission">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="removeResource"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="resource" type="org.apache.archiva.redback.rbac.Resource">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="removeRole"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="removeUserAssignment"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userAssignment" type="org.apache.archiva.redback.rbac.UserAssignment">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectNotFoundException" type="org.apache.archiva.redback.rbac.RbacObjectNotFoundException">
</exception>
</method>
<method name="saveOperation"
 return="org.apache.archiva.redback.rbac.Operation"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="operation" type="org.apache.archiva.redback.rbac.Operation">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="savePermission"
 return="org.apache.archiva.redback.rbac.Permission"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permission" type="org.apache.archiva.redback.rbac.Permission">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="saveResource"
 return="org.apache.archiva.redback.rbac.Resource"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="resource" type="org.apache.archiva.redback.rbac.Resource">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="saveRole"
 return="org.apache.archiva.redback.rbac.Role"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="saveRoles"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roles" type="java.util.Collection&lt;org.apache.archiva.redback.rbac.Role&gt;">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
<exception name="RbacObjectInvalidException" type="org.apache.archiva.redback.rbac.RbacObjectInvalidException">
</exception>
</method>
<method name="saveUserAssignment"
 return="org.apache.archiva.redback.rbac.UserAssignment"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userAssignment" type="org.apache.archiva.redback.rbac.UserAssignment">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="triggerInit"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="MemoryResource"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.rbac.Resource">
</implements>
<constructor name="MemoryResource"
 type="org.apache.archiva.redback.rbac.memory.MemoryResource"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getIdentifier"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isPattern"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isPermanent"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setIdentifier"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="identifier" type="java.lang.String">
</parameter>
</method>
<method name="setPattern"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pattern" type="boolean">
</parameter>
</method>
<method name="setPermanent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permanent" type="boolean">
</parameter>
</method>
</class>
<class name="MemoryRole"
 extends="org.apache.archiva.redback.rbac.AbstractRole"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.rbac.Role">
</implements>
<constructor name="MemoryRole"
 type="org.apache.archiva.redback.rbac.memory.MemoryRole"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="addChildRoleName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="addPermission"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="memoryPermission" type="org.apache.archiva.redback.rbac.Permission">
</parameter>
</method>
<method name="getChildRoleNames"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getDescription"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPermissions"
 return="java.util.List&lt;org.apache.archiva.redback.rbac.Permission&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isAssignable"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isPermanent"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="removePermission"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="memoryPermission" type="org.apache.archiva.redback.rbac.Permission">
</parameter>
</method>
<method name="setAssignable"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="assignable" type="boolean">
</parameter>
</method>
<method name="setChildRoleNames"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="names" type="java.util.List&lt;java.lang.String&gt;">
</parameter>
</method>
<method name="setDescription"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="description" type="java.lang.String">
</parameter>
</method>
<method name="setName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="setPermanent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permanent" type="boolean">
</parameter>
</method>
<method name="setPermissions"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permissions" type="java.util.List&lt;org.apache.archiva.redback.rbac.Permission&gt;">
</parameter>
</method>
</class>
<class name="MemoryUserAssignment"
 extends="org.apache.archiva.redback.rbac.AbstractUserAssignment"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.rbac.UserAssignment">
</implements>
<constructor name="MemoryUserAssignment"
 type="org.apache.archiva.redback.rbac.memory.MemoryUserAssignment"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getPrincipal"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getRoleNames"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isPermanent"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setPermanent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permanent" type="boolean">
</parameter>
</method>
<method name="setPrincipal"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
</method>
<method name="setRoleNames"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roles" type="java.util.List&lt;java.lang.String&gt;">
</parameter>
</method>
</class>
</package>
<package name="org.apache.archiva.redback.rest.api.model"
>
<class name="Application"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Application"
 type="org.apache.archiva.redback.rest.api.model.Application"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getDescription"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getId"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLongDescription"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getVersion"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setDescription"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="description" type="java.lang.String">
</parameter>
</method>
<method name="setId"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="id" type="java.lang.String">
</parameter>
</method>
<method name="setLongDescription"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="longDescription" type="java.lang.String">
</parameter>
</method>
<method name="setVersion"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="version" type="java.lang.String">
</parameter>
</method>
</class>
<class name="ApplicationRoles"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ApplicationRoles"
 type="org.apache.archiva.redback.rest.api.model.ApplicationRoles"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="ApplicationRoles"
 type="org.apache.archiva.redback.rest.api.model.ApplicationRoles"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
<parameter name="description" type="java.lang.String">
</parameter>
<parameter name="globalRoles" type="java.util.Collection&lt;java.lang.String&gt;">
</parameter>
<parameter name="roleTemplates" type="java.util.Collection&lt;org.apache.archiva.redback.rest.api.model.RoleTemplate&gt;">
</parameter>
<parameter name="resources" type="java.util.Collection&lt;java.lang.String&gt;">
</parameter>
</constructor>
<method name="getDescription"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getGlobalRoles"
 return="java.util.Collection&lt;java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getResources"
 return="java.util.Collection&lt;java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getRoleTemplates"
 return="java.util.Collection&lt;org.apache.archiva.redback.rest.api.model.RoleTemplate&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setDescription"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="description" type="java.lang.String">
</parameter>
</method>
<method name="setGlobalRoles"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="globalRoles" type="java.util.Collection&lt;java.lang.String&gt;">
</parameter>
</method>
<method name="setName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="setResources"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="resources" type="java.util.Collection&lt;java.lang.String&gt;">
</parameter>
</method>
<method name="setRoleTemplates"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleTemplates" type="java.util.Collection&lt;org.apache.archiva.redback.rest.api.model.RoleTemplate&gt;">
</parameter>
</method>
</class>
<class name="ErrorMessage"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ErrorMessage"
 type="org.apache.archiva.redback.rest.api.model.ErrorMessage"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="ErrorMessage"
 type="org.apache.archiva.redback.rest.api.model.ErrorMessage"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="errorKey" type="java.lang.String">
</parameter>
</constructor>
<constructor name="ErrorMessage"
 type="org.apache.archiva.redback.rest.api.model.ErrorMessage"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="errorKey" type="java.lang.String">
</parameter>
<parameter name="args" type="java.lang.String[]">
</parameter>
</constructor>
<method name="getArgs"
 return="java.lang.String[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getErrorKey"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getMessage"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="message"
 return="org.apache.archiva.redback.rest.api.model.ErrorMessage"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
</method>
<method name="setArgs"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="args" type="java.lang.String[]">
</parameter>
</method>
<method name="setErrorKey"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="errorKey" type="java.lang.String">
</parameter>
</method>
<method name="setMessage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
</method>
</class>
<class name="LdapGroupMapping"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="LdapGroupMapping"
 type="org.apache.archiva.redback.rest.api.model.LdapGroupMapping"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="LdapGroupMapping"
 type="org.apache.archiva.redback.rest.api.model.LdapGroupMapping"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="group" type="java.lang.String">
</parameter>
<parameter name="roleNames" type="java.util.Collection&lt;java.lang.String&gt;">
</parameter>
</constructor>
<method name="getGroup"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getRoleNames"
 return="java.util.Collection&lt;java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setGroup"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="group" type="java.lang.String">
</parameter>
</method>
<method name="setRoleNames"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleNames" type="java.util.Collection&lt;java.lang.String&gt;">
</parameter>
</method>
</class>
<class name="LdapGroupMappingUpdateRequest"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="LdapGroupMappingUpdateRequest"
 type="org.apache.archiva.redback.rest.api.model.LdapGroupMappingUpdateRequest"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getLdapGroupMapping"
 return="java.util.List&lt;org.apache.archiva.redback.rest.api.model.LdapGroupMapping&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setLdapGroupMapping"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ldapGroupMapping" type="java.util.List&lt;org.apache.archiva.redback.rest.api.model.LdapGroupMapping&gt;">
</parameter>
</method>
</class>
<class name="LoginRequest"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="LoginRequest"
 type="org.apache.archiva.redback.rest.api.model.LoginRequest"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="LoginRequest"
 type="org.apache.archiva.redback.rest.api.model.LoginRequest"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<parameter name="password" type="java.lang.String">
</parameter>
</constructor>
<method name="getPassword"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUsername"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="password" type="java.lang.String">
</parameter>
</method>
<method name="setUsername"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
</method>
</class>
<class name="Operation"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Operation"
 type="org.apache.archiva.redback.rest.api.model.Operation"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Operation"
 type="org.apache.archiva.redback.rest.api.model.Operation"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="operation" type="org.apache.archiva.redback.rbac.Operation">
</parameter>
</constructor>
<method name="getDescription"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isPermanent"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setDescription"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="description" type="java.lang.String">
</parameter>
</method>
<method name="setName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="setPermanent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permanent" type="boolean">
</parameter>
</method>
</class>
<class name="Permission"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Permission"
 type="org.apache.archiva.redback.rest.api.model.Permission"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Permission"
 type="org.apache.archiva.redback.rest.api.model.Permission"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permission" type="org.apache.archiva.redback.rbac.Permission">
</parameter>
</constructor>
<method name="getName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getOperation"
 return="org.apache.archiva.redback.rest.api.model.Operation"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getResource"
 return="org.apache.archiva.redback.rest.api.model.Resource"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="setOperation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="operation" type="org.apache.archiva.redback.rest.api.model.Operation">
</parameter>
</method>
<method name="setResource"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="resource" type="org.apache.archiva.redback.rest.api.model.Resource">
</parameter>
</method>
</class>
<class name="RedbackRestError"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RedbackRestError"
 type="org.apache.archiva.redback.rest.api.model.RedbackRestError"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="RedbackRestError"
 type="org.apache.archiva.redback.rest.api.model.RedbackRestError"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="e" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</parameter>
</constructor>
<method name="addErrorMessage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="errorMessage" type="org.apache.archiva.redback.rest.api.model.ErrorMessage">
</parameter>
</method>
<method name="getErrorMessages"
 return="java.util.List&lt;org.apache.archiva.redback.rest.api.model.ErrorMessage&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setErrorMessages"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="errorMessages" type="java.util.List&lt;org.apache.archiva.redback.rest.api.model.ErrorMessage&gt;">
</parameter>
</method>
</class>
<class name="RegistrationKey"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RegistrationKey"
 type="org.apache.archiva.redback.rest.api.model.RegistrationKey"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="RegistrationKey"
 type="org.apache.archiva.redback.rest.api.model.RegistrationKey"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
</constructor>
<method name="getKey"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setKey"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
</method>
</class>
<class name="ResetPasswordRequest"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ResetPasswordRequest"
 type="org.apache.archiva.redback.rest.api.model.ResetPasswordRequest"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="ResetPasswordRequest"
 type="org.apache.archiva.redback.rest.api.model.ResetPasswordRequest"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<parameter name="applicationUrl" type="java.lang.String">
</parameter>
</constructor>
<method name="getApplicationUrl"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUsername"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setApplicationUrl"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="applicationUrl" type="java.lang.String">
</parameter>
</method>
<method name="setUsername"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
</method>
</class>
<class name="Resource"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Resource"
 type="org.apache.archiva.redback.rest.api.model.Resource"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Resource"
 type="org.apache.archiva.redback.rest.api.model.Resource"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="resource" type="org.apache.archiva.redback.rbac.Resource">
</parameter>
</constructor>
<method name="getIdentifier"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isPattern"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isPermanent"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setIdentifier"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="identifier" type="java.lang.String">
</parameter>
</method>
<method name="setPattern"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pattern" type="boolean">
</parameter>
</method>
<method name="setPermanent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permanent" type="boolean">
</parameter>
</method>
</class>
<class name="Role"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="Role"
 type="org.apache.archiva.redback.rest.api.model.Role"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="Role"
 type="org.apache.archiva.redback.rest.api.model.Role"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</constructor>
<constructor name="Role"
 type="org.apache.archiva.redback.rest.api.model.Role"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
</constructor>
<method name="getChildRoleNames"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getDescription"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getOtherUsers"
 return="java.util.List&lt;org.apache.archiva.redback.rest.api.model.User&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getParentRoleNames"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getParentsRolesUsers"
 return="java.util.List&lt;org.apache.archiva.redback.rest.api.model.User&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPermissions"
 return="java.util.List&lt;org.apache.archiva.redback.rest.api.model.Permission&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getRemovedUsers"
 return="java.util.List&lt;org.apache.archiva.redback.rest.api.model.User&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUsers"
 return="java.util.List&lt;org.apache.archiva.redback.rest.api.model.User&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isAssignable"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isPermanent"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setAssignable"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="assignable" type="boolean">
</parameter>
</method>
<method name="setChildRoleNames"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="childRoleNames" type="java.util.List&lt;java.lang.String&gt;">
</parameter>
</method>
<method name="setDescription"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="description" type="java.lang.String">
</parameter>
</method>
<method name="setName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="setOtherUsers"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="otherUsers" type="java.util.List&lt;org.apache.archiva.redback.rest.api.model.User&gt;">
</parameter>
</method>
<method name="setParentRoleNames"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="parentRoleNames" type="java.util.List&lt;java.lang.String&gt;">
</parameter>
</method>
<method name="setParentsRolesUsers"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="parentsRolesUsers" type="java.util.List&lt;org.apache.archiva.redback.rest.api.model.User&gt;">
</parameter>
</method>
<method name="setPermanent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permanent" type="boolean">
</parameter>
</method>
<method name="setPermissions"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permissions" type="java.util.List&lt;org.apache.archiva.redback.rest.api.model.Permission&gt;">
</parameter>
</method>
<method name="setRemovedUsers"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="removedUsers" type="java.util.List&lt;org.apache.archiva.redback.rest.api.model.User&gt;">
</parameter>
</method>
<method name="setUsers"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="users" type="java.util.List&lt;org.apache.archiva.redback.rest.api.model.User&gt;">
</parameter>
</method>
</class>
<class name="RoleTemplate"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RoleTemplate"
 type="org.apache.archiva.redback.rest.api.model.RoleTemplate"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="RoleTemplate"
 type="org.apache.archiva.redback.rest.api.model.RoleTemplate"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="id" type="java.lang.String">
</parameter>
<parameter name="namePrefix" type="java.lang.String">
</parameter>
<parameter name="delimiter" type="java.lang.String">
</parameter>
<parameter name="description" type="java.lang.String">
</parameter>
<parameter name="resource" type="java.lang.String">
</parameter>
<parameter name="roles" type="java.util.List&lt;java.lang.String&gt;">
</parameter>
</constructor>
<method name="getDelimiter"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getDescription"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getId"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getNamePrefix"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getResource"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getRoles"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setDelimiter"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="delimiter" type="java.lang.String">
</parameter>
</method>
<method name="setDescription"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="description" type="java.lang.String">
</parameter>
</method>
<method name="setId"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="id" type="java.lang.String">
</parameter>
</method>
<method name="setNamePrefix"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="namePrefix" type="java.lang.String">
</parameter>
</method>
<method name="setResource"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="resource" type="java.lang.String">
</parameter>
</method>
<method name="setRoles"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roles" type="java.util.List&lt;java.lang.String&gt;">
</parameter>
</method>
</class>
<class name="StringList"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="StringList"
 type="org.apache.archiva.redback.rest.api.model.StringList"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="StringList"
 type="org.apache.archiva.redback.rest.api.model.StringList"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="strings" type="java.util.List&lt;java.lang.String&gt;">
</parameter>
</constructor>
<method name="getStrings"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setStrings"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="strings" type="java.util.List&lt;java.lang.String&gt;">
</parameter>
</method>
</class>
<class name="User"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="User"
 type="org.apache.archiva.redback.rest.api.model.User"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="User"
 type="org.apache.archiva.redback.rest.api.model.User"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<parameter name="fullName" type="java.lang.String">
</parameter>
<parameter name="email" type="java.lang.String">
</parameter>
<parameter name="validated" type="boolean">
</parameter>
<parameter name="locked" type="boolean">
</parameter>
</constructor>
<constructor name="User"
 type="org.apache.archiva.redback.rest.api.model.User"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
</constructor>
<method name="getAssignedRoles"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getConfirmPassword"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getEmail"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getFullName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPassword"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPreviousPassword"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTimestampAccountCreation"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTimestampLastLogin"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTimestampLastPasswordChange"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUserManagerId"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUsername"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isLocked"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isPasswordChangeRequired"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isPermanent"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isReadOnly"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isValidated"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setAssignedRoles"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="assignedRoles" type="java.util.List&lt;java.lang.String&gt;">
</parameter>
</method>
<method name="setConfirmPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="confirmPassword" type="java.lang.String">
</parameter>
</method>
<method name="setEmail"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="email" type="java.lang.String">
</parameter>
</method>
<method name="setFullName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="fullName" type="java.lang.String">
</parameter>
</method>
<method name="setLocked"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="isLocked" type="boolean">
</parameter>
</method>
<method name="setPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="password" type="java.lang.String">
</parameter>
</method>
<method name="setPasswordChangeRequired"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="passwordChangeRequired" type="boolean">
</parameter>
</method>
<method name="setPermanent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permanent" type="boolean">
</parameter>
</method>
<method name="setPreviousPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="previousPassword" type="java.lang.String">
</parameter>
</method>
<method name="setReadOnly"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="readOnly" type="boolean">
</parameter>
</method>
<method name="setTimestampAccountCreation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="timestampAccountCreation" type="java.lang.String">
</parameter>
</method>
<method name="setTimestampLastLogin"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="timestampLastLogin" type="java.lang.String">
</parameter>
</method>
<method name="setTimestampLastPasswordChange"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="timestampLastPasswordChange" type="java.lang.String">
</parameter>
</method>
<method name="setUserManagerId"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userManagerId" type="java.lang.String">
</parameter>
</method>
<method name="setUsername"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
</method>
<method name="setValidated"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="validated" type="boolean">
</parameter>
</method>
</class>
<class name="UserRegistrationRequest"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="UserRegistrationRequest"
 type="org.apache.archiva.redback.rest.api.model.UserRegistrationRequest"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="UserRegistrationRequest"
 type="org.apache.archiva.redback.rest.api.model.UserRegistrationRequest"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.rest.api.model.User">
</parameter>
<parameter name="applicationUrl" type="java.lang.String">
</parameter>
</constructor>
<method name="getApplicationUrl"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUser"
 return="org.apache.archiva.redback.rest.api.model.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setApplicationUrl"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="applicationUrl" type="java.lang.String">
</parameter>
</method>
<method name="setUser"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.rest.api.model.User">
</parameter>
</method>
</class>
</package>
<package name="org.apache.archiva.redback.rest.api.services"
>
<interface name="LdapGroupMappingService"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="addLdapGroupMapping"
 return="java.lang.Boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ldapGroupMapping" type="org.apache.archiva.redback.rest.api.model.LdapGroupMapping">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="getLdapGroupMappings"
 return="java.util.List&lt;org.apache.archiva.redback.rest.api.model.LdapGroupMapping&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="getLdapGroups"
 return="org.apache.archiva.redback.rest.api.model.StringList"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="removeLdapGroupMapping"
 return="java.lang.Boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="group" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="updateLdapGroupMapping"
 return="java.lang.Boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ldapGroupMappingUpdateRequest" type="org.apache.archiva.redback.rest.api.model.LdapGroupMappingUpdateRequest">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
</interface>
<interface name="LoginService"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="addAuthenticationKey"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="providedKey" type="java.lang.String">
</parameter>
<parameter name="principal" type="java.lang.String">
</parameter>
<parameter name="purpose" type="java.lang.String">
</parameter>
<parameter name="expirationMinutes" type="int">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="isLogged"
 return="org.apache.archiva.redback.rest.api.model.User"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="logIn"
 return="org.apache.archiva.redback.rest.api.model.User"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="loginRequest" type="org.apache.archiva.redback.rest.api.model.LoginRequest">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="logout"
 return="java.lang.Boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="ping"
 return="java.lang.Boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="pingWithAutz"
 return="java.lang.Boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
</interface>
<interface name="PasswordService"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="changePassword"
 return="org.apache.archiva.redback.rest.api.model.User"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userName" type="java.lang.String">
</parameter>
<parameter name="previousPassword" type="java.lang.String">
</parameter>
<parameter name="password" type="java.lang.String">
</parameter>
<parameter name="passwordConfirmation" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="changePasswordWithKey"
 return="org.apache.archiva.redback.rest.api.model.User"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="password" type="java.lang.String">
</parameter>
<parameter name="passwordConfirmation" type="java.lang.String">
</parameter>
<parameter name="key" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
</interface>
<class name="RedbackServiceException"
 extends="java.lang.Exception"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RedbackServiceException"
 type="org.apache.archiva.redback.rest.api.services.RedbackServiceException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="s" type="java.lang.String">
</parameter>
</constructor>
<constructor name="RedbackServiceException"
 type="org.apache.archiva.redback.rest.api.services.RedbackServiceException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="s" type="java.lang.String">
</parameter>
<parameter name="httpErrorCode" type="int">
</parameter>
</constructor>
<constructor name="RedbackServiceException"
 type="org.apache.archiva.redback.rest.api.services.RedbackServiceException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="errorMessage" type="org.apache.archiva.redback.rest.api.model.ErrorMessage">
</parameter>
</constructor>
<constructor name="RedbackServiceException"
 type="org.apache.archiva.redback.rest.api.services.RedbackServiceException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="errorMessage" type="org.apache.archiva.redback.rest.api.model.ErrorMessage">
</parameter>
<parameter name="httpErrorCode" type="int">
</parameter>
</constructor>
<constructor name="RedbackServiceException"
 type="org.apache.archiva.redback.rest.api.services.RedbackServiceException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="errorMessage" type="java.util.List&lt;org.apache.archiva.redback.rest.api.model.ErrorMessage&gt;">
</parameter>
</constructor>
<method name="addErrorMessage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="errorMessage" type="org.apache.archiva.redback.rest.api.model.ErrorMessage">
</parameter>
</method>
<method name="getErrorMessages"
 return="java.util.List&lt;org.apache.archiva.redback.rest.api.model.ErrorMessage&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getHttpErrorCode"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setErrorMessages"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="errorMessages" type="java.util.List&lt;org.apache.archiva.redback.rest.api.model.ErrorMessage&gt;">
</parameter>
</method>
<method name="setHttpErrorCode"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="httpErrorCode" type="int">
</parameter>
</method>
</class>
<interface name="RoleManagementService"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="assignRole"
 return="java.lang.Boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleId" type="java.lang.String">
</parameter>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="assignRoleByName"
 return="java.lang.Boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleName" type="java.lang.String">
</parameter>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="assignTemplatedRole"
 return="java.lang.Boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="templateId" type="java.lang.String">
</parameter>
<parameter name="resource" type="java.lang.String">
</parameter>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="createTemplatedRole"
 return="java.lang.Boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="templateId" type="java.lang.String">
</parameter>
<parameter name="resource" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="getAllRoles"
 return="java.util.List&lt;org.apache.archiva.redback.rest.api.model.Role&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="getApplicationRoles"
 return="java.util.List&lt;org.apache.archiva.redback.rest.api.model.ApplicationRoles&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="getApplications"
 return="java.util.List&lt;org.apache.archiva.redback.rest.api.model.Application&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="getDetailedAllRoles"
 return="java.util.List&lt;org.apache.archiva.redback.rest.api.model.Role&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="getEffectivelyAssignedRoles"
 return="java.util.List&lt;org.apache.archiva.redback.rest.api.model.Role&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="getRole"
 return="org.apache.archiva.redback.rest.api.model.Role"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleName" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="removeTemplatedRole"
 return="java.lang.Boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="templateId" type="java.lang.String">
</parameter>
<parameter name="resource" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="roleExists"
 return="java.lang.Boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleId" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="templatedRoleExists"
 return="java.lang.Boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="templateId" type="java.lang.String">
</parameter>
<parameter name="resource" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="unassignRole"
 return="java.lang.Boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleId" type="java.lang.String">
</parameter>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="unassignRoleByName"
 return="java.lang.Boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleName" type="java.lang.String">
</parameter>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="updateRole"
 return="java.lang.Boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="templateId" type="java.lang.String">
</parameter>
<parameter name="oldResource" type="java.lang.String">
</parameter>
<parameter name="newResource" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="updateRoleDescription"
 return="java.lang.Boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleName" type="java.lang.String">
</parameter>
<parameter name="description" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="updateRoleUsers"
 return="java.lang.Boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rest.api.model.Role">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="updateUserRoles"
 return="java.lang.Boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.rest.api.model.User">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="verifyTemplatedRole"
 return="java.lang.Boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="templateId" type="java.lang.String">
</parameter>
<parameter name="resource" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
</interface>
<interface name="UserService"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="createAdminUser"
 return="java.lang.Boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.rest.api.model.User">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="createGuestUser"
 return="org.apache.archiva.redback.rest.api.model.User"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="createUser"
 return="java.lang.Boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.rest.api.model.User">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="deleteUser"
 return="java.lang.Boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="getCurrentUserOperations"
 return="java.util.Collection&lt;org.apache.archiva.redback.rest.api.model.Operation&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="getCurrentUserPermissions"
 return="java.util.Collection&lt;org.apache.archiva.redback.rest.api.model.Permission&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="getGuestUser"
 return="org.apache.archiva.redback.rest.api.model.User"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="getUser"
 return="org.apache.archiva.redback.rest.api.model.User"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="getUserOperations"
 return="java.util.Collection&lt;org.apache.archiva.redback.rest.api.model.Operation&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userName" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="getUserPermissions"
 return="java.util.Collection&lt;org.apache.archiva.redback.rest.api.model.Permission&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userName" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="getUsers"
 return="java.util.List&lt;org.apache.archiva.redback.rest.api.model.User&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="isAdminUserExists"
 return="java.lang.Boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="lockUser"
 return="java.lang.Boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="passwordChangeNotRequired"
 return="java.lang.Boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="passwordChangeRequired"
 return="java.lang.Boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="ping"
 return="java.lang.Boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="registerUser"
 return="org.apache.archiva.redback.rest.api.model.RegistrationKey"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userRegistrationRequest" type="org.apache.archiva.redback.rest.api.model.UserRegistrationRequest">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="removeFromCache"
 return="int"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="resetPassword"
 return="java.lang.Boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="resetPasswordRequest" type="org.apache.archiva.redback.rest.api.model.ResetPasswordRequest">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="unlockUser"
 return="java.lang.Boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="updateMe"
 return="java.lang.Boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.rest.api.model.User">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="updateUser"
 return="java.lang.Boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.rest.api.model.User">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="validateUserFromKey"
 return="java.lang.Boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
</interface>
<interface name="UtilServices"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getI18nProperties"
 return="java.util.Properties"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="locale" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="getI18nResources"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="locale" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
</interface>
</package>
<package name="org.apache.archiva.redback.rest.services"
>
<class name="DefaultLdapGroupMappingService"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.rest.api.services.LdapGroupMappingService">
</implements>
<constructor name="DefaultLdapGroupMappingService"
 type="org.apache.archiva.redback.rest.services.DefaultLdapGroupMappingService"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="addLdapGroupMapping"
 return="java.lang.Boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ldapGroupMapping" type="org.apache.archiva.redback.rest.api.model.LdapGroupMapping">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="closeContext"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="context" type="javax.naming.directory.DirContext">
</parameter>
</method>
<method name="closeLdapConnection"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="ldapConnection" type="org.apache.archiva.redback.common.ldap.connection.LdapConnection">
</parameter>
</method>
<method name="getLdapGroupMappings"
 return="java.util.List&lt;org.apache.archiva.redback.rest.api.model.LdapGroupMapping&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="getLdapGroups"
 return="org.apache.archiva.redback.rest.api.model.StringList"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="removeLdapGroupMapping"
 return="java.lang.Boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="group" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="updateLdapGroupMapping"
 return="java.lang.Boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ldapGroupMappingUpdateRequest" type="org.apache.archiva.redback.rest.api.model.LdapGroupMappingUpdateRequest">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
</class>
<class name="DefaultLoginService"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.rest.api.services.LoginService">
</implements>
<constructor name="DefaultLoginService"
 type="org.apache.archiva.redback.rest.services.DefaultLoginService"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="securitySystem" type="org.apache.archiva.redback.system.SecuritySystem">
</parameter>
<parameter name="httpAuthenticator" type="org.apache.archiva.redback.integration.filter.authentication.HttpAuthenticator">
</parameter>
</constructor>
<method name="addAuthenticationKey"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="providedKey" type="java.lang.String">
</parameter>
<parameter name="principal" type="java.lang.String">
</parameter>
<parameter name="purpose" type="java.lang.String">
</parameter>
<parameter name="expirationMinutes" type="int">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="isLogged"
 return="org.apache.archiva.redback.rest.api.model.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="logIn"
 return="org.apache.archiva.redback.rest.api.model.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="loginRequest" type="org.apache.archiva.redback.rest.api.model.LoginRequest">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="logout"
 return="java.lang.Boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="ping"
 return="java.lang.Boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="pingWithAutz"
 return="java.lang.Boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
</class>
<class name="DefaultPasswordService"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.rest.api.services.PasswordService">
</implements>
<constructor name="DefaultPasswordService"
 type="org.apache.archiva.redback.rest.services.DefaultPasswordService"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="securitySystem" type="org.apache.archiva.redback.system.SecuritySystem">
</parameter>
<parameter name="httpAuthenticator" type="org.apache.archiva.redback.integration.filter.authentication.HttpAuthenticator">
</parameter>
<parameter name="passwordValidator" type="org.apache.archiva.redback.rest.services.utils.PasswordValidator">
</parameter>
</constructor>
<method name="changePassword"
 return="org.apache.archiva.redback.rest.api.model.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userName" type="java.lang.String">
</parameter>
<parameter name="previousPassword" type="java.lang.String">
</parameter>
<parameter name="password" type="java.lang.String">
</parameter>
<parameter name="passwordConfirmation" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="changePasswordWithKey"
 return="org.apache.archiva.redback.rest.api.model.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="password" type="java.lang.String">
</parameter>
<parameter name="passwordConfirmation" type="java.lang.String">
</parameter>
<parameter name="key" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
</class>
<class name="DefaultRoleManagementService"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.rest.api.services.RoleManagementService">
</implements>
<constructor name="DefaultRoleManagementService"
 type="org.apache.archiva.redback.rest.services.DefaultRoleManagementService"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleManager" type="org.apache.archiva.redback.role.RoleManager">
</parameter>
<parameter name="rbacManager" type="org.apache.archiva.redback.rbac.RBACManager">
</parameter>
<parameter name="userManager" type="org.apache.archiva.redback.users.UserManager">
</parameter>
</constructor>
<method name="assignRole"
 return="java.lang.Boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleId" type="java.lang.String">
</parameter>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="assignRoleByName"
 return="java.lang.Boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleName" type="java.lang.String">
</parameter>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="assignTemplatedRole"
 return="java.lang.Boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="templateId" type="java.lang.String">
</parameter>
<parameter name="resource" type="java.lang.String">
</parameter>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="createTemplatedRole"
 return="java.lang.Boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="templateId" type="java.lang.String">
</parameter>
<parameter name="resource" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="filterRolesForCurrentUserAccess"
 return="java.util.List&lt;org.apache.archiva.redback.rbac.Role&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="roleList" type="java.util.List&lt;org.apache.archiva.redback.rbac.Role&gt;">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="getAllRoles"
 return="java.util.List&lt;org.apache.archiva.redback.rest.api.model.Role&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="getApplicationRoles"
 return="java.util.List&lt;org.apache.archiva.redback.rest.api.model.ApplicationRoles&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="getApplications"
 return="java.util.List&lt;org.apache.archiva.redback.rest.api.model.Application&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="getDetailedAllRoles"
 return="java.util.List&lt;org.apache.archiva.redback.rest.api.model.Role&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="getEffectivelyAssignedRoles"
 return="java.util.List&lt;org.apache.archiva.redback.rest.api.model.Role&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="getRole"
 return="org.apache.archiva.redback.rest.api.model.Role"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleName" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="removeTemplatedRole"
 return="java.lang.Boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="templateId" type="java.lang.String">
</parameter>
<parameter name="resource" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="roleExists"
 return="java.lang.Boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleId" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="templatedRoleExists"
 return="java.lang.Boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="templateId" type="java.lang.String">
</parameter>
<parameter name="resource" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="unassignRole"
 return="java.lang.Boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleId" type="java.lang.String">
</parameter>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="unassignRoleByName"
 return="java.lang.Boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleName" type="java.lang.String">
</parameter>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="updateRole"
 return="java.lang.Boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="templateId" type="java.lang.String">
</parameter>
<parameter name="oldResource" type="java.lang.String">
</parameter>
<parameter name="newResource" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="updateRoleDescription"
 return="java.lang.Boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleName" type="java.lang.String">
</parameter>
<parameter name="description" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="updateRoleUsers"
 return="java.lang.Boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rest.api.model.Role">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="updateUserRoles"
 return="java.lang.Boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.rest.api.model.User">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="verifyTemplatedRole"
 return="java.lang.Boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="templateId" type="java.lang.String">
</parameter>
<parameter name="resource" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
</class>
<class name="DefaultUserService"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.rest.api.services.UserService">
</implements>
<constructor name="DefaultUserService"
 type="org.apache.archiva.redback.rest.services.DefaultUserService"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userManager" type="org.apache.archiva.redback.users.UserManager">
</parameter>
<parameter name="securitySystem" type="org.apache.archiva.redback.system.SecuritySystem">
</parameter>
<parameter name="httpAuthenticator" type="org.apache.archiva.redback.integration.filter.authentication.HttpAuthenticator">
</parameter>
</constructor>
<method name="createAdminUser"
 return="java.lang.Boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="adminUser" type="org.apache.archiva.redback.rest.api.model.User">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="createGuestUser"
 return="org.apache.archiva.redback.rest.api.model.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="createUser"
 return="java.lang.Boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.rest.api.model.User">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="deleteUser"
 return="java.lang.Boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="getCurrentUserOperations"
 return="java.util.Collection&lt;org.apache.archiva.redback.rest.api.model.Operation&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="getCurrentUserPermissions"
 return="java.util.Collection&lt;org.apache.archiva.redback.rest.api.model.Permission&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="getGuestUser"
 return="org.apache.archiva.redback.rest.api.model.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="getUser"
 return="org.apache.archiva.redback.rest.api.model.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="getUserOperations"
 return="java.util.Collection&lt;org.apache.archiva.redback.rest.api.model.Operation&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userName" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="getUserPermissions"
 return="java.util.Collection&lt;org.apache.archiva.redback.rest.api.model.Permission&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userName" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="getUsers"
 return="java.util.List&lt;org.apache.archiva.redback.rest.api.model.User&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="isAdminUserExists"
 return="java.lang.Boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="lockUser"
 return="java.lang.Boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="passwordChangeNotRequired"
 return="java.lang.Boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="passwordChangeRequired"
 return="java.lang.Boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="ping"
 return="java.lang.Boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="registerUser"
 return="org.apache.archiva.redback.rest.api.model.RegistrationKey"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userRegistrationRequest" type="org.apache.archiva.redback.rest.api.model.UserRegistrationRequest">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="removeFromCache"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userName" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="resetPassword"
 return="java.lang.Boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="resetPasswordRequest" type="org.apache.archiva.redback.rest.api.model.ResetPasswordRequest">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="unlockUser"
 return="java.lang.Boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="updateMe"
 return="java.lang.Boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.rest.api.model.User">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="updateUser"
 return="java.lang.Boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.rest.api.model.User">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="validateCredentialsLoose"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.rest.api.model.User">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="validateCredentialsStrict"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.rest.api.model.User">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="validateUserFromKey"
 return="java.lang.Boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
</class>
<class name="DefaultUtilServices"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.rest.api.services.UtilServices">
</implements>
<constructor name="DefaultUtilServices"
 type="org.apache.archiva.redback.rest.services.DefaultUtilServices"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getI18nProperties"
 return="java.util.Properties"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="locale" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="getI18nResources"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="locale" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
<method name="init"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
</class>
<class name="RedbackAuthenticationThreadLocal"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RedbackAuthenticationThreadLocal"
 type="org.apache.archiva.redback.rest.services.RedbackAuthenticationThreadLocal"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="get"
 return="org.apache.archiva.redback.rest.services.RedbackRequestInformation"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="set"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="redbackRequestInformation" type="org.apache.archiva.redback.rest.services.RedbackRequestInformation">
</parameter>
</method>
</class>
<class name="RedbackRequestInformation"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RedbackRequestInformation"
 type="org.apache.archiva.redback.rest.services.RedbackRequestInformation"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
<parameter name="remoteAddr" type="java.lang.String">
</parameter>
</constructor>
<method name="getRemoteAddr"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUser"
 return="org.apache.archiva.redback.users.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setRemoteAddr"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="remoteAddr" type="java.lang.String">
</parameter>
</method>
<method name="setUser"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
</method>
</class>
</package>
<package name="org.apache.archiva.redback.rest.services.interceptors"
>
<class name="AbstractInterceptor"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="AbstractInterceptor"
 type="org.apache.archiva.redback.rest.services.interceptors.AbstractInterceptor"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getHttpServletRequest"
 return="javax.servlet.http.HttpServletRequest"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="org.apache.cxf.message.Message">
</parameter>
</method>
<method name="getHttpServletResponse"
 return="javax.servlet.http.HttpServletResponse"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="org.apache.cxf.message.Message">
</parameter>
</method>
<method name="getRedbackAuthorization"
 return="org.apache.archiva.redback.authorization.RedbackAuthorization"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="org.apache.cxf.message.Message">
</parameter>
</method>
</class>
<class name="AuthenticationInterceptor"
 extends="org.apache.archiva.redback.rest.services.interceptors.AbstractInterceptor"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="AuthenticationInterceptor"
 type="org.apache.archiva.redback.rest.services.interceptors.AuthenticationInterceptor"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="handleRequest"
 return="javax.ws.rs.core.Response"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="org.apache.cxf.message.Message">
</parameter>
<parameter name="classResourceInfo" type="org.apache.cxf.jaxrs.model.ClassResourceInfo">
</parameter>
</method>
</class>
<class name="DebugJAXRSInInterceptor"
 extends="org.apache.cxf.jaxrs.interceptor.JAXRSInInterceptor"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="DebugJAXRSInInterceptor"
 type="org.apache.archiva.redback.rest.services.interceptors.DebugJAXRSInInterceptor"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
</class>
<class name="JacksonJsonConfigurator"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="JacksonJsonConfigurator"
 type="org.apache.archiva.redback.rest.services.interceptors.JacksonJsonConfigurator"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="objectMapper" type="org.codehaus.jackson.map.ObjectMapper">
</parameter>
</constructor>
</class>
<class name="PasswordRuleViolationExceptionMapper"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PasswordRuleViolationExceptionMapper"
 type="org.apache.archiva.redback.rest.services.interceptors.PasswordRuleViolationExceptionMapper"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="toResponse"
 return="javax.ws.rs.core.Response"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="e" type="org.apache.archiva.redback.policy.PasswordRuleViolationException">
</parameter>
</method>
</class>
<class name="PermissionsInterceptor"
 extends="org.apache.archiva.redback.rest.services.interceptors.AbstractInterceptor"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PermissionsInterceptor"
 type="org.apache.archiva.redback.rest.services.interceptors.PermissionsInterceptor"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="handleRequest"
 return="javax.ws.rs.core.Response"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="org.apache.cxf.message.Message">
</parameter>
<parameter name="classResourceInfo" type="org.apache.cxf.jaxrs.model.ClassResourceInfo">
</parameter>
</method>
</class>
<class name="RedbackServiceExceptionMapper"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RedbackServiceExceptionMapper"
 type="org.apache.archiva.redback.rest.services.interceptors.RedbackServiceExceptionMapper"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="toResponse"
 return="javax.ws.rs.core.Response"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="e" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</parameter>
</method>
</class>
<class name="ThreadLocalUserCleaner"
 extends="org.apache.cxf.phase.AbstractPhaseInterceptor"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.cxf.phase.PhaseInterceptor">
</implements>
<constructor name="ThreadLocalUserCleaner"
 type="org.apache.archiva.redback.rest.services.interceptors.ThreadLocalUserCleaner"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="phase" type="java.lang.String">
</parameter>
</constructor>
<constructor name="ThreadLocalUserCleaner"
 type="org.apache.archiva.redback.rest.services.interceptors.ThreadLocalUserCleaner"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="handleMessage"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="org.apache.cxf.message.Message">
</parameter>
<exception name="Fault" type="org.apache.cxf.interceptor.Fault">
</exception>
</method>
<method name="handleResponse"
 return="javax.ws.rs.core.Response"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="org.apache.cxf.message.Message">
</parameter>
<parameter name="operationResourceInfo" type="org.apache.cxf.jaxrs.model.OperationResourceInfo">
</parameter>
<parameter name="response" type="javax.ws.rs.core.Response">
</parameter>
</method>
</class>
</package>
<package name="org.apache.archiva.redback.rest.services.utils"
>
<class name="EnvironmentChecker"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="EnvironmentChecker"
 type="org.apache.archiva.redback.rest.services.utils.EnvironmentChecker"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="applicationContext" type="org.springframework.context.ApplicationContext">
</parameter>
</constructor>
</class>
<class name="PasswordValidator"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PasswordValidator"
 type="org.apache.archiva.redback.rest.services.utils.PasswordValidator"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="validatePassword"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="password" type="java.lang.String">
</parameter>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RedbackServiceException" type="org.apache.archiva.redback.rest.api.services.RedbackServiceException">
</exception>
</method>
</class>
</package>
<package name="org.apache.archiva.redback.role"
>
<class name="DefaultRoleManager"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.role.RoleManager">
</implements>
<constructor name="DefaultRoleManager"
 type="org.apache.archiva.redback.role.DefaultRoleManager"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="assignRole"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleId" type="java.lang.String">
</parameter>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RoleManagerException" type="org.apache.archiva.redback.role.RoleManagerException">
</exception>
</method>
<method name="assignRoleByName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleName" type="java.lang.String">
</parameter>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RoleManagerException" type="org.apache.archiva.redback.role.RoleManagerException">
</exception>
</method>
<method name="assignTemplatedRole"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="templateId" type="java.lang.String">
</parameter>
<parameter name="resource" type="java.lang.String">
</parameter>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RoleManagerException" type="org.apache.archiva.redback.role.RoleManagerException">
</exception>
</method>
<method name="createTemplatedRole"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="templateId" type="java.lang.String">
</parameter>
<parameter name="resource" type="java.lang.String">
</parameter>
<exception name="RoleManagerException" type="org.apache.archiva.redback.role.RoleManagerException">
</exception>
</method>
<method name="getBlessedModel"
 return="org.apache.archiva.redback.role.model.RedbackRoleModel"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getKnownResources"
 return="java.util.Map&lt;java.lang.String, org.apache.archiva.redback.role.model.ModelApplication&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getModel"
 return="org.apache.archiva.redback.role.model.RedbackRoleModel"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getModelProcessor"
 return="org.apache.archiva.redback.role.processor.RoleModelProcessor"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getModelValidator"
 return="org.apache.archiva.redback.role.validator.RoleModelValidator"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getRbacManager"
 return="org.apache.archiva.redback.rbac.RBACManager"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTemplateProcessor"
 return="org.apache.archiva.redback.role.template.RoleTemplateProcessor"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUnblessedModel"
 return="org.apache.archiva.redback.role.model.RedbackRoleModel"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="initialize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="loadApplication"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="app" type="org.apache.archiva.redback.role.model.ModelApplication">
</parameter>
<exception name="RoleManagerException" type="org.apache.archiva.redback.role.RoleManagerException">
</exception>
</method>
<method name="loadRoleModel"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="resource" type="java.net.URL">
</parameter>
<exception name="RoleManagerException" type="org.apache.archiva.redback.role.RoleManagerException">
</exception>
</method>
<method name="loadRoleModel"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleModel" type="org.apache.archiva.redback.role.model.RedbackRoleModel">
</parameter>
<exception name="RoleManagerException" type="org.apache.archiva.redback.role.RoleManagerException">
</exception>
</method>
<method name="removeTemplatedRole"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="templateId" type="java.lang.String">
</parameter>
<parameter name="resource" type="java.lang.String">
</parameter>
<exception name="RoleManagerException" type="org.apache.archiva.redback.role.RoleManagerException">
</exception>
</method>
<method name="roleExists"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleId" type="java.lang.String">
</parameter>
<exception name="RoleManagerException" type="org.apache.archiva.redback.role.RoleManagerException">
</exception>
</method>
<method name="setBlessedModel"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="blessedModel" type="org.apache.archiva.redback.role.model.RedbackRoleModel">
</parameter>
</method>
<method name="setKnownResources"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="knownResources" type="java.util.Map&lt;java.lang.String, org.apache.archiva.redback.role.model.ModelApplication&gt;">
</parameter>
</method>
<method name="setModelProcessor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="modelProcessor" type="org.apache.archiva.redback.role.processor.RoleModelProcessor">
</parameter>
</method>
<method name="setModelValidator"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="modelValidator" type="org.apache.archiva.redback.role.validator.RoleModelValidator">
</parameter>
</method>
<method name="setRbacManager"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rbacManager" type="org.apache.archiva.redback.rbac.RBACManager">
</parameter>
</method>
<method name="setTemplateProcessor"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="templateProcessor" type="org.apache.archiva.redback.role.template.RoleTemplateProcessor">
</parameter>
</method>
<method name="setUnblessedModel"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="unblessedModel" type="org.apache.archiva.redback.role.model.RedbackRoleModel">
</parameter>
</method>
<method name="templatedRoleExists"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="templateId" type="java.lang.String">
</parameter>
<parameter name="resource" type="java.lang.String">
</parameter>
<exception name="RoleManagerException" type="org.apache.archiva.redback.role.RoleManagerException">
</exception>
</method>
<method name="unassignRole"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleId" type="java.lang.String">
</parameter>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RoleManagerException" type="org.apache.archiva.redback.role.RoleManagerException">
</exception>
</method>
<method name="unassignRoleByName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleName" type="java.lang.String">
</parameter>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RoleManagerException" type="org.apache.archiva.redback.role.RoleManagerException">
</exception>
</method>
<method name="updateRole"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="templateId" type="java.lang.String">
</parameter>
<parameter name="oldResource" type="java.lang.String">
</parameter>
<parameter name="newResource" type="java.lang.String">
</parameter>
<exception name="RoleManagerException" type="org.apache.archiva.redback.role.RoleManagerException">
</exception>
</method>
<method name="verifyTemplatedRole"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="templateId" type="java.lang.String">
</parameter>
<parameter name="resource" type="java.lang.String">
</parameter>
<exception name="RoleManagerException" type="org.apache.archiva.redback.role.RoleManagerException">
</exception>
</method>
</class>
<interface name="RoleManager"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="assignRole"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleId" type="java.lang.String">
</parameter>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RoleManagerException" type="org.apache.archiva.redback.role.RoleManagerException">
</exception>
</method>
<method name="assignRoleByName"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleName" type="java.lang.String">
</parameter>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RoleManagerException" type="org.apache.archiva.redback.role.RoleManagerException">
</exception>
</method>
<method name="assignTemplatedRole"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="templateId" type="java.lang.String">
</parameter>
<parameter name="resource" type="java.lang.String">
</parameter>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RoleManagerException" type="org.apache.archiva.redback.role.RoleManagerException">
</exception>
</method>
<method name="createTemplatedRole"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="templateId" type="java.lang.String">
</parameter>
<parameter name="resource" type="java.lang.String">
</parameter>
<exception name="RoleManagerException" type="org.apache.archiva.redback.role.RoleManagerException">
</exception>
</method>
<method name="getModel"
 return="org.apache.archiva.redback.role.model.RedbackRoleModel"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="initialize"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="loadRoleModel"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="resourceLocation" type="java.net.URL">
</parameter>
<exception name="RoleManagerException" type="org.apache.archiva.redback.role.RoleManagerException">
</exception>
</method>
<method name="loadRoleModel"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="model" type="org.apache.archiva.redback.role.model.RedbackRoleModel">
</parameter>
<exception name="RoleManagerException" type="org.apache.archiva.redback.role.RoleManagerException">
</exception>
</method>
<method name="removeTemplatedRole"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="templateId" type="java.lang.String">
</parameter>
<parameter name="resource" type="java.lang.String">
</parameter>
<exception name="RoleManagerException" type="org.apache.archiva.redback.role.RoleManagerException">
</exception>
</method>
<method name="roleExists"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleId" type="java.lang.String">
</parameter>
<exception name="RoleManagerException" type="org.apache.archiva.redback.role.RoleManagerException">
</exception>
</method>
<method name="templatedRoleExists"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="templateId" type="java.lang.String">
</parameter>
<parameter name="resource" type="java.lang.String">
</parameter>
<exception name="RoleManagerException" type="org.apache.archiva.redback.role.RoleManagerException">
</exception>
</method>
<method name="unassignRole"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleId" type="java.lang.String">
</parameter>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RoleManagerException" type="org.apache.archiva.redback.role.RoleManagerException">
</exception>
</method>
<method name="unassignRoleByName"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roleName" type="java.lang.String">
</parameter>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="RoleManagerException" type="org.apache.archiva.redback.role.RoleManagerException">
</exception>
</method>
<method name="updateRole"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="templateId" type="java.lang.String">
</parameter>
<parameter name="oldResource" type="java.lang.String">
</parameter>
<parameter name="newResource" type="java.lang.String">
</parameter>
<exception name="RoleManagerException" type="org.apache.archiva.redback.role.RoleManagerException">
</exception>
</method>
<method name="verifyTemplatedRole"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="templateID" type="java.lang.String">
</parameter>
<parameter name="resource" type="java.lang.String">
</parameter>
<exception name="RoleManagerException" type="org.apache.archiva.redback.role.RoleManagerException">
</exception>
</method>
</interface>
<class name="RoleManagerException"
 extends="java.lang.Exception"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RoleManagerException"
 type="org.apache.archiva.redback.role.RoleManagerException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="string" type="java.lang.String">
</parameter>
</constructor>
<constructor name="RoleManagerException"
 type="org.apache.archiva.redback.role.RoleManagerException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="string" type="java.lang.String">
</parameter>
<parameter name="throwable" type="java.lang.Throwable">
</parameter>
</constructor>
</class>
</package>
<package name="org.apache.archiva.redback.role.model"
>
<class name="ModelApplication"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ModelApplication"
 type="org.apache.archiva.redback.role.model.ModelApplication"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="addOperation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="modelOperation" type="org.apache.archiva.redback.role.model.ModelOperation">
</parameter>
</method>
<method name="addResource"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="modelResource" type="org.apache.archiva.redback.role.model.ModelResource">
</parameter>
</method>
<method name="addRole"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="modelRole" type="org.apache.archiva.redback.role.model.ModelRole">
</parameter>
</method>
<method name="addTemplate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="modelTemplate" type="org.apache.archiva.redback.role.model.ModelTemplate">
</parameter>
</method>
<method name="getDescription"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getId"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLongDescription"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getOperations"
 return="java.util.List&lt;org.apache.archiva.redback.role.model.ModelOperation&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getResources"
 return="java.util.List&lt;org.apache.archiva.redback.role.model.ModelResource&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getRoles"
 return="java.util.List&lt;org.apache.archiva.redback.role.model.ModelRole&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getTemplates"
 return="java.util.List&lt;org.apache.archiva.redback.role.model.ModelTemplate&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getVersion"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="removeOperation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="modelOperation" type="org.apache.archiva.redback.role.model.ModelOperation">
</parameter>
</method>
<method name="removeResource"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="modelResource" type="org.apache.archiva.redback.role.model.ModelResource">
</parameter>
</method>
<method name="removeRole"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="modelRole" type="org.apache.archiva.redback.role.model.ModelRole">
</parameter>
</method>
<method name="removeTemplate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="modelTemplate" type="org.apache.archiva.redback.role.model.ModelTemplate">
</parameter>
</method>
<method name="setDescription"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="description" type="java.lang.String">
</parameter>
</method>
<method name="setId"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="id" type="java.lang.String">
</parameter>
</method>
<method name="setLongDescription"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="longDescription" type="java.lang.String">
</parameter>
</method>
<method name="setOperations"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="operations" type="java.util.List&lt;org.apache.archiva.redback.role.model.ModelOperation&gt;">
</parameter>
</method>
<method name="setResources"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="resources" type="java.util.List&lt;org.apache.archiva.redback.role.model.ModelResource&gt;">
</parameter>
</method>
<method name="setRoles"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="roles" type="java.util.List&lt;org.apache.archiva.redback.role.model.ModelRole&gt;">
</parameter>
</method>
<method name="setTemplates"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="templates" type="java.util.List&lt;org.apache.archiva.redback.role.model.ModelTemplate&gt;">
</parameter>
</method>
<method name="setVersion"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="version" type="java.lang.String">
</parameter>
</method>
</class>
<class name="ModelOperation"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ModelOperation"
 type="org.apache.archiva.redback.role.model.ModelOperation"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getDescription"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getId"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isPermanent"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setDescription"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="description" type="java.lang.String">
</parameter>
</method>
<method name="setId"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="id" type="java.lang.String">
</parameter>
</method>
<method name="setName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="setPermanent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permanent" type="boolean">
</parameter>
</method>
</class>
<class name="ModelPermission"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ModelPermission"
 type="org.apache.archiva.redback.role.model.ModelPermission"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getDescription"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getId"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getOperation"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getResource"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isPermanent"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setDescription"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="description" type="java.lang.String">
</parameter>
</method>
<method name="setId"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="id" type="java.lang.String">
</parameter>
</method>
<method name="setName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="setOperation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="operation" type="java.lang.String">
</parameter>
</method>
<method name="setPermanent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permanent" type="boolean">
</parameter>
</method>
<method name="setResource"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="resource" type="java.lang.String">
</parameter>
</method>
</class>
<class name="ModelResource"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ModelResource"
 type="org.apache.archiva.redback.role.model.ModelResource"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getDescription"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getId"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isPattern"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isPermanent"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setDescription"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="description" type="java.lang.String">
</parameter>
</method>
<method name="setId"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="id" type="java.lang.String">
</parameter>
</method>
<method name="setName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="setPattern"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="pattern" type="boolean">
</parameter>
</method>
<method name="setPermanent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permanent" type="boolean">
</parameter>
</method>
</class>
<class name="ModelRole"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ModelRole"
 type="org.apache.archiva.redback.role.model.ModelRole"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="addChildRole"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="string" type="java.lang.String">
</parameter>
</method>
<method name="addParentRole"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="string" type="java.lang.String">
</parameter>
</method>
<method name="addPermission"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="modelPermission" type="org.apache.archiva.redback.role.model.ModelPermission">
</parameter>
</method>
<method name="getChildRoles"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getDescription"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getId"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getParentRoles"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPermissions"
 return="java.util.List&lt;org.apache.archiva.redback.role.model.ModelPermission&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isAssignable"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isPermanent"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="removeChildRole"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="string" type="java.lang.String">
</parameter>
</method>
<method name="removeParentRole"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="string" type="java.lang.String">
</parameter>
</method>
<method name="removePermission"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="modelPermission" type="org.apache.archiva.redback.role.model.ModelPermission">
</parameter>
</method>
<method name="setAssignable"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="assignable" type="boolean">
</parameter>
</method>
<method name="setChildRoles"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="childRoles" type="java.util.List&lt;java.lang.String&gt;">
</parameter>
</method>
<method name="setDescription"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="description" type="java.lang.String">
</parameter>
</method>
<method name="setId"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="id" type="java.lang.String">
</parameter>
</method>
<method name="setName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="setParentRoles"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="parentRoles" type="java.util.List&lt;java.lang.String&gt;">
</parameter>
</method>
<method name="setPermanent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permanent" type="boolean">
</parameter>
</method>
<method name="setPermissions"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permissions" type="java.util.List&lt;org.apache.archiva.redback.role.model.ModelPermission&gt;">
</parameter>
</method>
</class>
<class name="ModelTemplate"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="ModelTemplate"
 type="org.apache.archiva.redback.role.model.ModelTemplate"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="addChildRole"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="string" type="java.lang.String">
</parameter>
</method>
<method name="addChildTemplate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="string" type="java.lang.String">
</parameter>
</method>
<method name="addParentRole"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="string" type="java.lang.String">
</parameter>
</method>
<method name="addParentTemplate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="string" type="java.lang.String">
</parameter>
</method>
<method name="addPermission"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="modelPermission" type="org.apache.archiva.redback.role.model.ModelPermission">
</parameter>
</method>
<method name="getChildRoles"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getChildTemplates"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getDelimiter"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getDescription"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getId"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getNamePrefix"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getParentRoles"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getParentTemplates"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPermissions"
 return="java.util.List&lt;org.apache.archiva.redback.role.model.ModelPermission&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isAssignable"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isPermanent"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isPermanentResource"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="removeChildRole"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="string" type="java.lang.String">
</parameter>
</method>
<method name="removeChildTemplate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="string" type="java.lang.String">
</parameter>
</method>
<method name="removeParentRole"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="string" type="java.lang.String">
</parameter>
</method>
<method name="removeParentTemplate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="string" type="java.lang.String">
</parameter>
</method>
<method name="removePermission"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="modelPermission" type="org.apache.archiva.redback.role.model.ModelPermission">
</parameter>
</method>
<method name="setAssignable"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="assignable" type="boolean">
</parameter>
</method>
<method name="setChildRoles"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="childRoles" type="java.util.List&lt;java.lang.String&gt;">
</parameter>
</method>
<method name="setChildTemplates"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="childTemplates" type="java.util.List&lt;java.lang.String&gt;">
</parameter>
</method>
<method name="setDelimiter"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="delimiter" type="java.lang.String">
</parameter>
</method>
<method name="setDescription"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="description" type="java.lang.String">
</parameter>
</method>
<method name="setId"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="id" type="java.lang.String">
</parameter>
</method>
<method name="setNamePrefix"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="namePrefix" type="java.lang.String">
</parameter>
</method>
<method name="setParentRoles"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="parentRoles" type="java.util.List&lt;java.lang.String&gt;">
</parameter>
</method>
<method name="setParentTemplates"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="parentTemplates" type="java.util.List&lt;java.lang.String&gt;">
</parameter>
</method>
<method name="setPermanent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permanent" type="boolean">
</parameter>
</method>
<method name="setPermanentResource"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permanentResource" type="boolean">
</parameter>
</method>
<method name="setPermissions"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permissions" type="java.util.List&lt;org.apache.archiva.redback.role.model.ModelPermission&gt;">
</parameter>
</method>
</class>
<class name="RedbackRoleModel"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RedbackRoleModel"
 type="org.apache.archiva.redback.role.model.RedbackRoleModel"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="addApplication"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="modelApplication" type="org.apache.archiva.redback.role.model.ModelApplication">
</parameter>
</method>
<method name="getApplications"
 return="java.util.List&lt;org.apache.archiva.redback.role.model.ModelApplication&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getModelEncoding"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getModelVersion"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="removeApplication"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="modelApplication" type="org.apache.archiva.redback.role.model.ModelApplication">
</parameter>
</method>
<method name="setApplications"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="applications" type="java.util.List&lt;org.apache.archiva.redback.role.model.ModelApplication&gt;">
</parameter>
</method>
<method name="setModelEncoding"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="modelEncoding" type="java.lang.String">
</parameter>
</method>
<method name="setModelVersion"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="modelVersion" type="java.lang.String">
</parameter>
</method>
</class>
</package>
<package name="org.apache.archiva.redback.role.model.io.stax"
>
<class name="RedbackRoleModelStaxReader"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RedbackRoleModelStaxReader"
 type="org.apache.archiva.redback.role.model.io.stax.RedbackRoleModelStaxReader"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="read"
 return="org.apache.archiva.redback.role.model.RedbackRoleModel"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="reader" type="java.io.Reader">
</parameter>
<parameter name="strict" type="boolean">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="XMLStreamException" type="javax.xml.stream.XMLStreamException">
</exception>
</method>
<method name="read"
 return="org.apache.archiva.redback.role.model.RedbackRoleModel"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="reader" type="java.io.Reader">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="XMLStreamException" type="javax.xml.stream.XMLStreamException">
</exception>
</method>
<method name="read"
 return="org.apache.archiva.redback.role.model.RedbackRoleModel"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.InputStream">
</parameter>
<parameter name="strict" type="boolean">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="XMLStreamException" type="javax.xml.stream.XMLStreamException">
</exception>
</method>
<method name="read"
 return="org.apache.archiva.redback.role.model.RedbackRoleModel"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.InputStream">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="XMLStreamException" type="javax.xml.stream.XMLStreamException">
</exception>
</method>
<method name="read"
 return="org.apache.archiva.redback.role.model.RedbackRoleModel"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filePath" type="java.lang.String">
</parameter>
<parameter name="strict" type="boolean">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="XMLStreamException" type="javax.xml.stream.XMLStreamException">
</exception>
</method>
<method name="read"
 return="org.apache.archiva.redback.role.model.RedbackRoleModel"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filePath" type="java.lang.String">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="XMLStreamException" type="javax.xml.stream.XMLStreamException">
</exception>
</method>
</class>
<class name="RedbackRoleModelStaxWriter"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RedbackRoleModelStaxWriter"
 type="org.apache.archiva.redback.role.model.io.stax.RedbackRoleModelStaxWriter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="write"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="writer" type="java.io.Writer">
</parameter>
<parameter name="redbackRoleModel" type="org.apache.archiva.redback.role.model.RedbackRoleModel">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="XMLStreamException" type="javax.xml.stream.XMLStreamException">
</exception>
</method>
<method name="write"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.OutputStream">
</parameter>
<parameter name="redbackRoleModel" type="org.apache.archiva.redback.role.model.RedbackRoleModel">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="XMLStreamException" type="javax.xml.stream.XMLStreamException">
</exception>
</method>
</class>
</package>
<package name="org.apache.archiva.redback.role.processor"
>
<class name="DefaultRoleModelProcessor"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.role.processor.RoleModelProcessor">
</implements>
<constructor name="DefaultRoleModelProcessor"
 type="org.apache.archiva.redback.role.processor.DefaultRoleModelProcessor"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getRbacManager"
 return="org.apache.archiva.redback.rbac.RBACManager"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="process"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="model" type="org.apache.archiva.redback.role.model.RedbackRoleModel">
</parameter>
<exception name="RoleManagerException" type="org.apache.archiva.redback.role.RoleManagerException">
</exception>
</method>
<method name="setRbacManager"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rbacManager" type="org.apache.archiva.redback.rbac.RBACManager">
</parameter>
</method>
</class>
<interface name="RoleModelProcessor"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="process"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="model" type="org.apache.archiva.redback.role.model.RedbackRoleModel">
</parameter>
<exception name="RoleManagerException" type="org.apache.archiva.redback.role.RoleManagerException">
</exception>
</method>
</interface>
</package>
<package name="org.apache.archiva.redback.role.template"
>
<class name="DefaultRoleTemplateProcessor"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.role.template.RoleTemplateProcessor">
</implements>
<constructor name="DefaultRoleTemplateProcessor"
 type="org.apache.archiva.redback.role.template.DefaultRoleTemplateProcessor"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="create"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="model" type="org.apache.archiva.redback.role.model.RedbackRoleModel">
</parameter>
<parameter name="templateId" type="java.lang.String">
</parameter>
<parameter name="resource" type="java.lang.String">
</parameter>
<exception name="RoleManagerException" type="org.apache.archiva.redback.role.RoleManagerException">
</exception>
</method>
<method name="getRbacManager"
 return="org.apache.archiva.redback.rbac.RBACManager"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="remove"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="model" type="org.apache.archiva.redback.role.model.RedbackRoleModel">
</parameter>
<parameter name="templateId" type="java.lang.String">
</parameter>
<parameter name="resource" type="java.lang.String">
</parameter>
<exception name="RoleManagerException" type="org.apache.archiva.redback.role.RoleManagerException">
</exception>
</method>
<method name="setRbacManager"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rbacManager" type="org.apache.archiva.redback.rbac.RBACManager">
</parameter>
</method>
</class>
<interface name="RoleTemplateProcessor"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="create"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="model" type="org.apache.archiva.redback.role.model.RedbackRoleModel">
</parameter>
<parameter name="templateId" type="java.lang.String">
</parameter>
<parameter name="resource" type="java.lang.String">
</parameter>
<exception name="RoleManagerException" type="org.apache.archiva.redback.role.RoleManagerException">
</exception>
</method>
<method name="remove"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="model" type="org.apache.archiva.redback.role.model.RedbackRoleModel">
</parameter>
<parameter name="templateId" type="java.lang.String">
</parameter>
<parameter name="resource" type="java.lang.String">
</parameter>
<exception name="RoleManagerException" type="org.apache.archiva.redback.role.RoleManagerException">
</exception>
</method>
</interface>
<class name="RoleTemplateProcessorException"
 extends="java.lang.Exception"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RoleTemplateProcessorException"
 type="org.apache.archiva.redback.role.template.RoleTemplateProcessorException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="string" type="java.lang.String">
</parameter>
</constructor>
<constructor name="RoleTemplateProcessorException"
 type="org.apache.archiva.redback.role.template.RoleTemplateProcessorException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="string" type="java.lang.String">
</parameter>
<parameter name="throwable" type="java.lang.Throwable">
</parameter>
</constructor>
</class>
</package>
<package name="org.apache.archiva.redback.role.util"
>
<class name="RoleModelUtils"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RoleModelUtils"
 type="org.apache.archiva.redback.role.util.RoleModelUtils"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="generateRoleGraph"
 return="org.codehaus.plexus.util.dag.DAG"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="model" type="org.apache.archiva.redback.role.model.RedbackRoleModel">
</parameter>
<exception name="CycleDetectedException" type="org.codehaus.plexus.util.dag.CycleDetectedException">
</exception>
</method>
<method name="generateTemplateGraph"
 return="org.codehaus.plexus.util.dag.DAG"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="model" type="org.apache.archiva.redback.role.model.RedbackRoleModel">
</parameter>
<exception name="CycleDetectedException" type="org.codehaus.plexus.util.dag.CycleDetectedException">
</exception>
</method>
<method name="getModelOperation"
 return="org.apache.archiva.redback.role.model.ModelOperation"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="model" type="org.apache.archiva.redback.role.model.RedbackRoleModel">
</parameter>
<parameter name="operationId" type="java.lang.String">
</parameter>
</method>
<method name="getModelResource"
 return="org.apache.archiva.redback.role.model.ModelResource"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="model" type="org.apache.archiva.redback.role.model.RedbackRoleModel">
</parameter>
<parameter name="resourceId" type="java.lang.String">
</parameter>
</method>
<method name="getModelRole"
 return="org.apache.archiva.redback.role.model.ModelRole"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="model" type="org.apache.archiva.redback.role.model.RedbackRoleModel">
</parameter>
<parameter name="roleId" type="java.lang.String">
</parameter>
</method>
<method name="getModelTemplate"
 return="org.apache.archiva.redback.role.model.ModelTemplate"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="model" type="org.apache.archiva.redback.role.model.RedbackRoleModel">
</parameter>
<parameter name="templateId" type="java.lang.String">
</parameter>
</method>
<method name="getOperationIdList"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="model" type="org.apache.archiva.redback.role.model.RedbackRoleModel">
</parameter>
</method>
<method name="getResourceIdList"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="model" type="org.apache.archiva.redback.role.model.RedbackRoleModel">
</parameter>
</method>
<method name="getRoleIdList"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="model" type="org.apache.archiva.redback.role.model.RedbackRoleModel">
</parameter>
</method>
<method name="getRoles"
 return="java.util.List&lt;org.apache.archiva.redback.role.model.ModelRole&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="model" type="org.apache.archiva.redback.role.model.RedbackRoleModel">
</parameter>
</method>
<method name="getTemplateIdList"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="model" type="org.apache.archiva.redback.role.model.RedbackRoleModel">
</parameter>
</method>
<method name="getTemplates"
 return="java.util.List&lt;org.apache.archiva.redback.role.model.ModelTemplate&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="model" type="org.apache.archiva.redback.role.model.RedbackRoleModel">
</parameter>
</method>
<method name="reverseTopologicalSortedRoleList"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="model" type="org.apache.archiva.redback.role.model.RedbackRoleModel">
</parameter>
<exception name="CycleDetectedException" type="org.codehaus.plexus.util.dag.CycleDetectedException">
</exception>
</method>
</class>
</package>
<package name="org.apache.archiva.redback.role.validator"
>
<class name="DefaultRoleModelValidator"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.role.validator.RoleModelValidator">
</implements>
<constructor name="DefaultRoleModelValidator"
 type="org.apache.archiva.redback.role.validator.DefaultRoleModelValidator"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getValidationErrors"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="validate"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="model" type="org.apache.archiva.redback.role.model.RedbackRoleModel">
</parameter>
<exception name="RoleManagerException" type="org.apache.archiva.redback.role.RoleManagerException">
</exception>
</method>
</class>
<interface name="RoleModelValidator"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getValidationErrors"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="validate"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="model" type="org.apache.archiva.redback.role.model.RedbackRoleModel">
</parameter>
<exception name="RoleManagerException" type="org.apache.archiva.redback.role.RoleManagerException">
</exception>
</method>
</interface>
</package>
<package name="org.apache.archiva.redback.system"
>
<class name="DefaultSecuritySession"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.system.SecuritySession">
</implements>
<constructor name="DefaultSecuritySession"
 type="org.apache.archiva.redback.system.DefaultSecuritySession"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="DefaultSecuritySession"
 type="org.apache.archiva.redback.system.DefaultSecuritySession"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="authResult" type="org.apache.archiva.redback.authentication.AuthenticationResult">
</parameter>
</constructor>
<constructor name="DefaultSecuritySession"
 type="org.apache.archiva.redback.system.DefaultSecuritySession"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="authenticationResult" type="org.apache.archiva.redback.authentication.AuthenticationResult">
</parameter>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
</constructor>
<method name="getAuthenticationResult"
 return="org.apache.archiva.redback.authentication.AuthenticationResult"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUser"
 return="org.apache.archiva.redback.users.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isAuthenticated"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="DefaultSecuritySystem"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.system.SecuritySystem">
</implements>
<constructor name="DefaultSecuritySystem"
 type="org.apache.archiva.redback.system.DefaultSecuritySystem"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="authenticate"
 return="org.apache.archiva.redback.system.SecuritySession"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="source" type="org.apache.archiva.redback.authentication.AuthenticationDataSource">
</parameter>
<exception name="AccountLockedException" type="org.apache.archiva.redback.policy.AccountLockedException">
</exception>
<exception name="AuthenticationException" type="org.apache.archiva.redback.authentication.AuthenticationException">
</exception>
<exception name="MustChangePasswordException" type="org.apache.archiva.redback.policy.MustChangePasswordException">
</exception>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
<exception name="UserNotFoundException" type="org.apache.archiva.redback.users.UserNotFoundException">
</exception>
</method>
<method name="authorize"
 return="org.apache.archiva.redback.authorization.AuthorizationResult"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="session" type="org.apache.archiva.redback.system.SecuritySession">
</parameter>
<parameter name="permission" type="java.lang.String">
</parameter>
<exception name="AuthorizationException" type="org.apache.archiva.redback.authorization.AuthorizationException">
</exception>
</method>
<method name="authorize"
 return="org.apache.archiva.redback.authorization.AuthorizationResult"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="session" type="org.apache.archiva.redback.system.SecuritySession">
</parameter>
<parameter name="permission" type="java.lang.String">
</parameter>
<parameter name="resource" type="java.lang.String">
</parameter>
<exception name="AuthorizationException" type="org.apache.archiva.redback.authorization.AuthorizationException">
</exception>
</method>
<method name="getAuthenticationManager"
 return="org.apache.archiva.redback.authentication.AuthenticationManager"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getAuthenticatorId"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getAuthnManager"
 return="org.apache.archiva.redback.authentication.AuthenticationManager"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getAuthorizer"
 return="org.apache.archiva.redback.authorization.Authorizer"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getAuthorizerId"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getKeyManagementId"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getKeyManager"
 return="org.apache.archiva.redback.keys.KeyManager"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPolicy"
 return="org.apache.archiva.redback.policy.UserSecurityPolicy"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPolicyId"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUserManagementId"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUserManager"
 return="org.apache.archiva.redback.users.UserManager"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isAuthenticated"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="source" type="org.apache.archiva.redback.authentication.AuthenticationDataSource">
</parameter>
<exception name="AccountLockedException" type="org.apache.archiva.redback.policy.AccountLockedException">
</exception>
<exception name="AuthenticationException" type="org.apache.archiva.redback.authentication.AuthenticationException">
</exception>
<exception name="MustChangePasswordException" type="org.apache.archiva.redback.policy.MustChangePasswordException">
</exception>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
<exception name="UserNotFoundException" type="org.apache.archiva.redback.users.UserNotFoundException">
</exception>
</method>
<method name="isAuthorized"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="session" type="org.apache.archiva.redback.system.SecuritySession">
</parameter>
<parameter name="permission" type="java.lang.String">
</parameter>
<exception name="AuthorizationException" type="org.apache.archiva.redback.authorization.AuthorizationException">
</exception>
</method>
<method name="isAuthorized"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="session" type="org.apache.archiva.redback.system.SecuritySession">
</parameter>
<parameter name="permission" type="java.lang.String">
</parameter>
<parameter name="resource" type="java.lang.String">
</parameter>
<exception name="AuthorizationException" type="org.apache.archiva.redback.authorization.AuthorizationException">
</exception>
</method>
<method name="setAuthnManager"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="authnManager" type="org.apache.archiva.redback.authentication.AuthenticationManager">
</parameter>
</method>
<method name="setAuthorizer"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="authorizer" type="org.apache.archiva.redback.authorization.Authorizer">
</parameter>
</method>
<method name="setKeyManager"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="keyManager" type="org.apache.archiva.redback.keys.KeyManager">
</parameter>
</method>
<method name="setPolicy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="policy" type="org.apache.archiva.redback.policy.UserSecurityPolicy">
</parameter>
</method>
<method name="setUserManager"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userManager" type="org.apache.archiva.redback.users.UserManager">
</parameter>
</method>
<method name="userManagerReadOnly"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<interface name="SecuritySession"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getAuthenticationResult"
 return="org.apache.archiva.redback.authentication.AuthenticationResult"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUser"
 return="org.apache.archiva.redback.users.User"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isAuthenticated"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<field name="SESSION_KEY"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="null"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="USERKEY"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;SecuritySessionUser&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</interface>
<interface name="SecuritySystem"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="authenticate"
 return="org.apache.archiva.redback.system.SecuritySession"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="source" type="org.apache.archiva.redback.authentication.AuthenticationDataSource">
</parameter>
<exception name="AccountLockedException" type="org.apache.archiva.redback.policy.AccountLockedException">
</exception>
<exception name="AuthenticationException" type="org.apache.archiva.redback.authentication.AuthenticationException">
</exception>
<exception name="MustChangePasswordException" type="org.apache.archiva.redback.policy.MustChangePasswordException">
</exception>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
<exception name="UserNotFoundException" type="org.apache.archiva.redback.users.UserNotFoundException">
</exception>
</method>
<method name="authorize"
 return="org.apache.archiva.redback.authorization.AuthorizationResult"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="session" type="org.apache.archiva.redback.system.SecuritySession">
</parameter>
<parameter name="permission" type="java.lang.String">
</parameter>
<exception name="AuthorizationException" type="org.apache.archiva.redback.authorization.AuthorizationException">
</exception>
</method>
<method name="authorize"
 return="org.apache.archiva.redback.authorization.AuthorizationResult"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="session" type="org.apache.archiva.redback.system.SecuritySession">
</parameter>
<parameter name="permission" type="java.lang.String">
</parameter>
<parameter name="resource" type="java.lang.String">
</parameter>
<exception name="AuthorizationException" type="org.apache.archiva.redback.authorization.AuthorizationException">
</exception>
</method>
<method name="getKeyManager"
 return="org.apache.archiva.redback.keys.KeyManager"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPolicy"
 return="org.apache.archiva.redback.policy.UserSecurityPolicy"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUserManager"
 return="org.apache.archiva.redback.users.UserManager"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isAuthenticated"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="source" type="org.apache.archiva.redback.authentication.AuthenticationDataSource">
</parameter>
<exception name="AccountLockedException" type="org.apache.archiva.redback.policy.AccountLockedException">
</exception>
<exception name="AuthenticationException" type="org.apache.archiva.redback.authentication.AuthenticationException">
</exception>
<exception name="MustChangePasswordException" type="org.apache.archiva.redback.policy.MustChangePasswordException">
</exception>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
<exception name="UserNotFoundException" type="org.apache.archiva.redback.users.UserNotFoundException">
</exception>
</method>
<method name="isAuthorized"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="session" type="org.apache.archiva.redback.system.SecuritySession">
</parameter>
<parameter name="permission" type="java.lang.String">
</parameter>
<exception name="AuthorizationException" type="org.apache.archiva.redback.authorization.AuthorizationException">
</exception>
</method>
<method name="isAuthorized"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="session" type="org.apache.archiva.redback.system.SecuritySession">
</parameter>
<parameter name="permission" type="java.lang.String">
</parameter>
<parameter name="resource" type="java.lang.String">
</parameter>
<exception name="AuthorizationException" type="org.apache.archiva.redback.authorization.AuthorizationException">
</exception>
</method>
<method name="userManagerReadOnly"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</interface>
<class name="SecuritySystemConstants"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<field name="SECURITY_SESSION_KEY"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;securitySession&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
</package>
<package name="org.apache.archiva.redback.system.check"
>
<interface name="EnvironmentCheck"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="validateEnvironment"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="violations" type="java.util.List&lt;java.lang.String&gt;">
</parameter>
</method>
</interface>
</package>
<package name="org.apache.archiva.redback.tests"
>
<class name="AbstractRbacManagerPerformanceTestCase"
 extends="junit.framework.TestCase"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="AbstractRbacManagerPerformanceTestCase"
 type="org.apache.archiva.redback.tests.AbstractRbacManagerPerformanceTestCase"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="assertPerformance"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="msg" type="java.lang.String">
</parameter>
<parameter name="startTime" type="long">
</parameter>
<parameter name="endTime" type="long">
</parameter>
<parameter name="iterations" type="int">
</parameter>
<parameter name="threshold" type="double">
</parameter>
</method>
<method name="setRbacManager"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="store" type="org.apache.archiva.redback.rbac.RBACManager">
</parameter>
</method>
<method name="setUp"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="Exception" type="java.lang.Exception">
</exception>
</method>
<method name="tearDown"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="Exception" type="java.lang.Exception">
</exception>
</method>
<method name="testPerformanceOperations"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="testPerformancePermissions"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="testPerformanceResource"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="testPerformanceRoles"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="testPerformanceUserAssignment"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<field name="logger"
 type="org.slf4j.Logger"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
</class>
<class name="AbstractRbacManagerTestCase"
 extends="junit.framework.TestCase"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="AbstractRbacManagerTestCase"
 type="org.apache.archiva.redback.tests.AbstractRbacManagerTestCase"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="afterSetup"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</method>
<method name="assertEventCount"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getChildRole"
 return="org.apache.archiva.redback.rbac.Role"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="manager" type="org.apache.archiva.redback.rbac.RBACManager">
</parameter>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
<parameter name="expectedChildRoleName" type="java.lang.String">
</parameter>
<parameter name="childRoleCount" type="int">
</parameter>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="getRbacManager"
 return="org.apache.archiva.redback.rbac.RBACManager"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="incAssignements"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="size" type="int">
</parameter>
</method>
<method name="setRbacManager"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="store" type="org.apache.archiva.redback.rbac.RBACManager">
</parameter>
</method>
<method name="setUp"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="Exception" type="java.lang.Exception">
</exception>
</method>
<method name="supportChildRole"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</method>
<method name="tearDown"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="Exception" type="java.lang.Exception">
</exception>
</method>
<method name="testAddGetChildRole"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="testAddGetChildRoleViaName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="testAddGetPermission"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="testAddGetRole"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="testAddRemovePermanentOperation"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="testAddRemovePermanentPermission"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="testAddRemovePermanentRole"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="testAllowRoleWithoutPermissions"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="testGetAssignedPermissions"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="testGetAssignedPermissionsDeep"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="testGetAssignedPermissionsNoChildRoles"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="testGetAssignedRoles"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="testGetRolesDeep"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="testGlobalResource"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="testGlobalResourceOneLiner"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="testInitialize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="Exception" type="java.lang.Exception">
</exception>
</method>
<method name="testLargeApplicationInit"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="testResources"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="Exception" type="java.lang.Exception">
</exception>
</method>
<method name="testStoreInitialization"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="Exception" type="java.lang.Exception">
</exception>
</method>
<method name="testUserAssignmentAddRemoveSecondRole"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="testUserAssignmentAddRole"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="testUserAssignmentMultipleRoles"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="testUserAssignmentMultipleRolesWithChildRoles"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<method name="testUserAssignmentWithChildRoles"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
<field name="eventTracker"
 type="org.apache.archiva.redback.tests.RbacManagerEventTracker"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
<field name="log"
 type="org.slf4j.Logger"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
</class>
<class name="RbacManagerEventTracker"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.rbac.RBACManagerListener">
</implements>
<constructor name="RbacManagerEventTracker"
 type="org.apache.archiva.redback.tests.RbacManagerEventTracker"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="rbacInit"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="freshdb" type="boolean">
</parameter>
</method>
<method name="rbacPermissionRemoved"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permission" type="org.apache.archiva.redback.rbac.Permission">
</parameter>
</method>
<method name="rbacPermissionSaved"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permission" type="org.apache.archiva.redback.rbac.Permission">
</parameter>
</method>
<method name="rbacRoleRemoved"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
</method>
<method name="rbacRoleSaved"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="role" type="org.apache.archiva.redback.rbac.Role">
</parameter>
</method>
<method name="rbacUserAssignmentRemoved"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userAssignment" type="org.apache.archiva.redback.rbac.UserAssignment">
</parameter>
</method>
<method name="rbacUserAssignmentSaved"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userAssignment" type="org.apache.archiva.redback.rbac.UserAssignment">
</parameter>
</method>
<field name="addedPermissionNames"
 type="java.util.List"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="addedRoleNames"
 type="java.util.List"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="initCount"
 type="long"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="lastDbFreshness"
 type="java.lang.Boolean"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="logger"
 type="org.slf4j.Logger"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
<field name="removedPermissionNames"
 type="java.util.List"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="removedRoleNames"
 type="java.util.List"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
</package>
<package name="org.apache.archiva.redback.tests.utils"
>
<class name="RBACDefaults"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="RBACDefaults"
 type="org.apache.archiva.redback.tests.utils.RBACDefaults"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="manager" type="org.apache.archiva.redback.rbac.RBACManager">
</parameter>
</constructor>
<method name="createDefaults"
 return="org.apache.archiva.redback.rbac.RBACManager"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="RbacManagerException" type="org.apache.archiva.redback.rbac.RbacManagerException">
</exception>
</method>
</class>
</package>
<package name="org.apache.archiva.redback.users"
>
<class name="AbstractUserManager"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.users.UserManager">
</implements>
<constructor name="AbstractUserManager"
 type="org.apache.archiva.redback.users.AbstractUserManager"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="addUserManagerListener"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="org.apache.archiva.redback.users.UserManagerListener">
</parameter>
</method>
<method name="createGuestUser"
 return="org.apache.archiva.redback.users.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<method name="fireUserManagerInit"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="freshDatabase" type="boolean">
</parameter>
</method>
<method name="fireUserManagerUserAdded"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="addedUser" type="org.apache.archiva.redback.users.User">
</parameter>
</method>
<method name="fireUserManagerUserRemoved"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="removedUser" type="org.apache.archiva.redback.users.User">
</parameter>
</method>
<method name="fireUserManagerUserUpdated"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="updatedUser" type="org.apache.archiva.redback.users.User">
</parameter>
</method>
<method name="getGuestUser"
 return="org.apache.archiva.redback.users.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
<exception name="UserNotFoundException" type="org.apache.archiva.redback.users.UserNotFoundException">
</exception>
</method>
<method name="getListeners"
 return="java.util.List&lt;org.apache.archiva.redback.users.UserManagerListener&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</method>
<method name="initialize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isFinalImplementation"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="removeUserManagerListener"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="org.apache.archiva.redback.users.UserManagerListener">
</parameter>
</method>
<field name="log"
 type="org.slf4j.Logger"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
</field>
</class>
<class name="AbstractUserQuery"
 extends="java.lang.Object"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.users.UserQuery">
</implements>
<constructor name="AbstractUserQuery"
 type="org.apache.archiva.redback.users.AbstractUserQuery"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getEmail"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getFirstResult"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getFullName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getMaxResults"
 return="long"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getOrderBy"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUsername"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isAscending"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setAscending"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ascending" type="boolean">
</parameter>
</method>
<method name="setEmail"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="email" type="java.lang.String">
</parameter>
</method>
<method name="setFirstResult"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="firstResult" type="int">
</parameter>
</method>
<method name="setFullName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="fullName" type="java.lang.String">
</parameter>
</method>
<method name="setMaxResults"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="maxResults" type="int">
</parameter>
</method>
<method name="setOrderBy"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="orderBy" type="java.lang.String">
</parameter>
</method>
<method name="setUsername"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userName" type="java.lang.String">
</parameter>
</method>
</class>
<class name="Messages"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
</method>
<method name="getString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="arg" type="java.lang.Object">
</parameter>
</method>
<method name="getString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="args" type="java.lang.Object[]">
</parameter>
</method>
</class>
<class name="PermanentUserException"
 extends="org.apache.archiva.redback.users.UserManagerException"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="PermanentUserException"
 type="org.apache.archiva.redback.users.PermanentUserException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="PermanentUserException"
 type="org.apache.archiva.redback.users.PermanentUserException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="cause" type="java.lang.Throwable">
</parameter>
</constructor>
<constructor name="PermanentUserException"
 type="org.apache.archiva.redback.users.PermanentUserException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
</constructor>
<constructor name="PermanentUserException"
 type="org.apache.archiva.redback.users.PermanentUserException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cause" type="java.lang.Throwable">
</parameter>
</constructor>
</class>
<interface name="User"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="addPreviousEncodedPassword"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="encodedPassword" type="java.lang.String">
</parameter>
</method>
<method name="getAccountCreationDate"
 return="java.util.Date"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getCountFailedLoginAttempts"
 return="int"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getEmail"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getEncodedPassword"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getFullName"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLastLoginDate"
 return="java.util.Date"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLastPasswordChange"
 return="java.util.Date"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPassword"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPreviousEncodedPasswords"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUserManagerId"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUsername"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isLocked"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isPasswordChangeRequired"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isPermanent"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isValidated"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setAccountCreationDate"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="date" type="java.util.Date">
</parameter>
</method>
<method name="setCountFailedLoginAttempts"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="count" type="int">
</parameter>
</method>
<method name="setEmail"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="address" type="java.lang.String">
</parameter>
</method>
<method name="setEncodedPassword"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="encodedPassword" type="java.lang.String">
</parameter>
</method>
<method name="setFullName"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="setLastLoginDate"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="date" type="java.util.Date">
</parameter>
</method>
<method name="setLastPasswordChange"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="passwordChangeDate" type="java.util.Date">
</parameter>
</method>
<method name="setLocked"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="locked" type="boolean">
</parameter>
</method>
<method name="setPassword"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="rawPassword" type="java.lang.String">
</parameter>
</method>
<method name="setPasswordChangeRequired"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="changeRequired" type="boolean">
</parameter>
</method>
<method name="setPermanent"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permanent" type="boolean">
</parameter>
</method>
<method name="setPreviousEncodedPasswords"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="encodedPasswordList" type="java.util.List&lt;java.lang.String&gt;">
</parameter>
</method>
<method name="setUsername"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="name" type="java.lang.String">
</parameter>
</method>
<method name="setValidated"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="valid" type="boolean">
</parameter>
</method>
</interface>
<interface name="UserManager"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="addUser"
 return="org.apache.archiva.redback.users.User"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<method name="addUserManagerListener"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="org.apache.archiva.redback.users.UserManagerListener">
</parameter>
</method>
<method name="addUserUnchecked"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<method name="createGuestUser"
 return="org.apache.archiva.redback.users.User"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<method name="createUser"
 return="org.apache.archiva.redback.users.User"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<parameter name="fullName" type="java.lang.String">
</parameter>
<parameter name="emailAddress" type="java.lang.String">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<method name="createUserQuery"
 return="org.apache.archiva.redback.users.UserQuery"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="deleteUser"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
<exception name="UserNotFoundException" type="org.apache.archiva.redback.users.UserNotFoundException">
</exception>
</method>
<method name="eraseDatabase"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="findUser"
 return="org.apache.archiva.redback.users.User"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
<exception name="UserNotFoundException" type="org.apache.archiva.redback.users.UserNotFoundException">
</exception>
</method>
<method name="findUsersByEmailKey"
 return="java.util.List&lt;org.apache.archiva.redback.users.User&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="emailKey" type="java.lang.String">
</parameter>
<parameter name="orderAscending" type="boolean">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<method name="findUsersByFullNameKey"
 return="java.util.List&lt;org.apache.archiva.redback.users.User&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="fullNameKey" type="java.lang.String">
</parameter>
<parameter name="orderAscending" type="boolean">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<method name="findUsersByQuery"
 return="java.util.List&lt;org.apache.archiva.redback.users.User&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="query" type="org.apache.archiva.redback.users.UserQuery">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<method name="findUsersByUsernameKey"
 return="java.util.List&lt;org.apache.archiva.redback.users.User&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="usernameKey" type="java.lang.String">
</parameter>
<parameter name="orderAscending" type="boolean">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<method name="getDescriptionKey"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getGuestUser"
 return="org.apache.archiva.redback.users.User"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
<exception name="UserNotFoundException" type="org.apache.archiva.redback.users.UserNotFoundException">
</exception>
</method>
<method name="getId"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUsers"
 return="java.util.List&lt;org.apache.archiva.redback.users.User&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<method name="getUsers"
 return="java.util.List&lt;org.apache.archiva.redback.users.User&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="orderAscending" type="boolean">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<method name="initialize"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isFinalImplementation"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isReadOnly"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="removeUserManagerListener"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="org.apache.archiva.redback.users.UserManagerListener">
</parameter>
</method>
<method name="updateUser"
 return="org.apache.archiva.redback.users.User"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
<exception name="UserNotFoundException" type="org.apache.archiva.redback.users.UserNotFoundException">
</exception>
</method>
<method name="updateUser"
 return="org.apache.archiva.redback.users.User"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
<parameter name="passwordChangeRequired" type="boolean">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
<exception name="UserNotFoundException" type="org.apache.archiva.redback.users.UserNotFoundException">
</exception>
</method>
<method name="userExists"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<field name="GUEST_USERNAME"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;guest&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</interface>
<class name="UserManagerException"
 extends="java.lang.Exception"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="UserManagerException"
 type="org.apache.archiva.redback.users.UserManagerException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="UserManagerException"
 type="org.apache.archiva.redback.users.UserManagerException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="cause" type="java.lang.Throwable">
</parameter>
</constructor>
<constructor name="UserManagerException"
 type="org.apache.archiva.redback.users.UserManagerException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
</constructor>
<constructor name="UserManagerException"
 type="org.apache.archiva.redback.users.UserManagerException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="cause" type="java.lang.Throwable">
</parameter>
</constructor>
</class>
<interface name="UserManagerListener"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="userManagerInit"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="freshDatabase" type="boolean">
</parameter>
</method>
<method name="userManagerUserAdded"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
</method>
<method name="userManagerUserRemoved"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
</method>
<method name="userManagerUserUpdated"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
</method>
</interface>
<class name="UserNotFoundException"
 extends="org.apache.archiva.redback.users.UserManagerException"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="UserNotFoundException"
 type="org.apache.archiva.redback.users.UserNotFoundException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="string" type="java.lang.String">
</parameter>
</constructor>
<constructor name="UserNotFoundException"
 type="org.apache.archiva.redback.users.UserNotFoundException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="string" type="java.lang.String">
</parameter>
<parameter name="throwable" type="java.lang.Throwable">
</parameter>
</constructor>
<constructor name="UserNotFoundException"
 type="org.apache.archiva.redback.users.UserNotFoundException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="throwable" type="java.lang.Throwable">
</parameter>
</constructor>
</class>
<interface name="UserQuery"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getEmail"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getFirstResult"
 return="long"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getFullName"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getMaxResults"
 return="long"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getOrderBy"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUsername"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isAscending"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setAscending"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ascending" type="boolean">
</parameter>
</method>
<method name="setEmail"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="email" type="java.lang.String">
</parameter>
</method>
<method name="setFirstResult"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="firstResult" type="int">
</parameter>
</method>
<method name="setFullName"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="fullName" type="java.lang.String">
</parameter>
</method>
<method name="setMaxResults"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="maxResults" type="int">
</parameter>
</method>
<method name="setOrderBy"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="orderBy" type="java.lang.String">
</parameter>
</method>
<method name="setUsername"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userName" type="java.lang.String">
</parameter>
</method>
<field name="ALLOWED_ORDER_FIELDS"
 type="java.util.Set"
 transient="false"
 volatile="false"
 value="null"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ORDER_BY_EMAIL"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;email&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ORDER_BY_FULLNAME"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;fullname&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="ORDER_BY_USERNAME"
 type="java.lang.String"
 transient="false"
 volatile="false"
 value="&quot;username&quot;"
 static="true"
 final="true"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</interface>
</package>
<package name="org.apache.archiva.redback.users.cached"
>
<class name="CachedUserManager"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.users.UserManager">
</implements>
<implements name="org.apache.archiva.redback.users.UserManagerListener">
</implements>
<constructor name="CachedUserManager"
 type="org.apache.archiva.redback.users.cached.CachedUserManager"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="addUser"
 return="org.apache.archiva.redback.users.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<method name="addUserManagerListener"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="org.apache.archiva.redback.users.UserManagerListener">
</parameter>
</method>
<method name="addUserUnchecked"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<method name="createGuestUser"
 return="org.apache.archiva.redback.users.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<method name="createUser"
 return="org.apache.archiva.redback.users.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<parameter name="fullName" type="java.lang.String">
</parameter>
<parameter name="emailAddress" type="java.lang.String">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<method name="createUserQuery"
 return="org.apache.archiva.redback.users.UserQuery"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="deleteUser"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
<exception name="UserNotFoundException" type="org.apache.archiva.redback.users.UserNotFoundException">
</exception>
</method>
<method name="eraseDatabase"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="findUser"
 return="org.apache.archiva.redback.users.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
<exception name="UserNotFoundException" type="org.apache.archiva.redback.users.UserNotFoundException">
</exception>
</method>
<method name="findUsersByEmailKey"
 return="java.util.List&lt;org.apache.archiva.redback.users.User&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="emailKey" type="java.lang.String">
</parameter>
<parameter name="orderAscending" type="boolean">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<method name="findUsersByFullNameKey"
 return="java.util.List&lt;org.apache.archiva.redback.users.User&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="fullNameKey" type="java.lang.String">
</parameter>
<parameter name="orderAscending" type="boolean">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<method name="findUsersByQuery"
 return="java.util.List&lt;org.apache.archiva.redback.users.User&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="query" type="org.apache.archiva.redback.users.UserQuery">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<method name="findUsersByUsernameKey"
 return="java.util.List&lt;org.apache.archiva.redback.users.User&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="usernameKey" type="java.lang.String">
</parameter>
<parameter name="orderAscending" type="boolean">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<method name="getDescriptionKey"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getGuestUser"
 return="org.apache.archiva.redback.users.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
<exception name="UserNotFoundException" type="org.apache.archiva.redback.users.UserNotFoundException">
</exception>
</method>
<method name="getId"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUserImpl"
 return="org.apache.archiva.redback.users.UserManager"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUsers"
 return="java.util.List&lt;org.apache.archiva.redback.users.User&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<method name="getUsers"
 return="java.util.List&lt;org.apache.archiva.redback.users.User&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="orderAscending" type="boolean">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<method name="getUsersCache"
 return="org.apache.archiva.redback.components.cache.Cache"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="initialize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isFinalImplementation"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isReadOnly"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="removeUserManagerListener"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="listener" type="org.apache.archiva.redback.users.UserManagerListener">
</parameter>
</method>
<method name="setUserImpl"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userImpl" type="org.apache.archiva.redback.users.UserManager">
</parameter>
</method>
<method name="setUsersCache"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="usersCache" type="org.apache.archiva.redback.components.cache.Cache">
</parameter>
</method>
<method name="updateUser"
 return="org.apache.archiva.redback.users.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
<exception name="UserNotFoundException" type="org.apache.archiva.redback.users.UserNotFoundException">
</exception>
</method>
<method name="updateUser"
 return="org.apache.archiva.redback.users.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
<parameter name="passwordChangeRequired" type="boolean">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
<exception name="UserNotFoundException" type="org.apache.archiva.redback.users.UserNotFoundException">
</exception>
</method>
<method name="userExists"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userName" type="java.lang.String">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<method name="userManagerInit"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="freshDatabase" type="boolean">
</parameter>
</method>
<method name="userManagerUserAdded"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
</method>
<method name="userManagerUserRemoved"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
</method>
<method name="userManagerUserUpdated"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
</method>
</class>
</package>
<package name="org.apache.archiva.redback.users.configurable"
>
<class name="ConfigurableUserManager"
 extends="org.apache.archiva.redback.users.AbstractUserManager"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.users.UserManager">
</implements>
<constructor name="ConfigurableUserManager"
 type="org.apache.archiva.redback.users.configurable.ConfigurableUserManager"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="addUser"
 return="org.apache.archiva.redback.users.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<method name="addUserUnchecked"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<method name="createUser"
 return="org.apache.archiva.redback.users.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<parameter name="fullName" type="java.lang.String">
</parameter>
<parameter name="emailAddress" type="java.lang.String">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<method name="createUserQuery"
 return="org.apache.archiva.redback.users.UserQuery"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="deleteUser"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
<exception name="UserNotFoundException" type="org.apache.archiva.redback.users.UserNotFoundException">
</exception>
</method>
<method name="eraseDatabase"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="findUser"
 return="org.apache.archiva.redback.users.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
<exception name="UserNotFoundException" type="org.apache.archiva.redback.users.UserNotFoundException">
</exception>
</method>
<method name="findUsersByEmailKey"
 return="java.util.List&lt;org.apache.archiva.redback.users.User&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="emailKey" type="java.lang.String">
</parameter>
<parameter name="orderAscending" type="boolean">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<method name="findUsersByFullNameKey"
 return="java.util.List&lt;org.apache.archiva.redback.users.User&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="fullNameKey" type="java.lang.String">
</parameter>
<parameter name="orderAscending" type="boolean">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<method name="findUsersByQuery"
 return="java.util.List&lt;org.apache.archiva.redback.users.User&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="query" type="org.apache.archiva.redback.users.UserQuery">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<method name="findUsersByUsernameKey"
 return="java.util.List&lt;org.apache.archiva.redback.users.User&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="usernameKey" type="java.lang.String">
</parameter>
<parameter name="orderAscending" type="boolean">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<method name="getDescriptionKey"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getId"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUsers"
 return="java.util.List&lt;org.apache.archiva.redback.users.User&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<method name="getUsers"
 return="java.util.List&lt;org.apache.archiva.redback.users.User&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="orderAscending" type="boolean">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<method name="isReadOnly"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setUserManagerImpl"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userManagerImpl" type="org.apache.archiva.redback.users.UserManager">
</parameter>
</method>
<method name="updateUser"
 return="org.apache.archiva.redback.users.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
<exception name="UserNotFoundException" type="org.apache.archiva.redback.users.UserNotFoundException">
</exception>
</method>
<method name="updateUser"
 return="org.apache.archiva.redback.users.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
<parameter name="passwordChangeRequired" type="boolean">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
<exception name="UserNotFoundException" type="org.apache.archiva.redback.users.UserNotFoundException">
</exception>
</method>
<method name="userExists"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userName" type="java.lang.String">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
</class>
</package>
<package name="org.apache.archiva.redback.users.jdo"
>
<class name="JdoUser"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.users.User">
</implements>
<constructor name="JdoUser"
 type="org.apache.archiva.redback.users.jdo.JdoUser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="addPreviousEncodedPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="string" type="java.lang.String">
</parameter>
</method>
<method name="getAccountCreationDate"
 return="java.util.Date"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getCountFailedLoginAttempts"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getEmail"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getEncodedPassword"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getFullName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLastLoginDate"
 return="java.util.Date"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLastPasswordChange"
 return="java.util.Date"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPassword"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPreviousEncodedPasswords"
 return="java.util.List"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUserManagerId"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUsername"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isLocked"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isPasswordChangeRequired"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isPermanent"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isValidated"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="removePreviousEncodedPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="string" type="java.lang.String">
</parameter>
</method>
<method name="setAccountCreationDate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="accountCreationDate" type="java.util.Date">
</parameter>
</method>
<method name="setCountFailedLoginAttempts"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="countFailedLoginAttempts" type="int">
</parameter>
</method>
<method name="setEmail"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="email" type="java.lang.String">
</parameter>
</method>
<method name="setEncodedPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="encodedPassword" type="java.lang.String">
</parameter>
</method>
<method name="setFullName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="fullName" type="java.lang.String">
</parameter>
</method>
<method name="setLastLoginDate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="lastLoginDate" type="java.util.Date">
</parameter>
</method>
<method name="setLastPasswordChange"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="lastPasswordChange" type="java.util.Date">
</parameter>
</method>
<method name="setLocked"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="locked" type="boolean">
</parameter>
</method>
<method name="setPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="password" type="java.lang.String">
</parameter>
</method>
<method name="setPasswordChangeRequired"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="passwordChangeRequired" type="boolean">
</parameter>
</method>
<method name="setPermanent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permanent" type="boolean">
</parameter>
</method>
<method name="setPreviousEncodedPasswords"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="previousEncodedPasswords" type="java.util.List">
</parameter>
</method>
<method name="setUsername"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
</method>
<method name="setValidated"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="validated" type="boolean">
</parameter>
</method>
</class>
<class name="JdoUserManager"
 extends="org.apache.archiva.redback.users.AbstractUserManager"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="JdoUserManager"
 type="org.apache.archiva.redback.users.jdo.JdoUserManager"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="addUser"
 return="org.apache.archiva.redback.users.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<method name="addUserUnchecked"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<method name="createUser"
 return="org.apache.archiva.redback.users.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<parameter name="fullname" type="java.lang.String">
</parameter>
<parameter name="email" type="java.lang.String">
</parameter>
</method>
<method name="createUserQuery"
 return="org.apache.archiva.redback.users.UserQuery"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="deleteUser"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<method name="eraseDatabase"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="findUser"
 return="org.apache.archiva.redback.users.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
<exception name="UserNotFoundException" type="org.apache.archiva.redback.users.UserNotFoundException">
</exception>
</method>
<method name="findUsersByEmailKey"
 return="java.util.List&lt;org.apache.archiva.redback.users.User&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="emailKey" type="java.lang.String">
</parameter>
<parameter name="orderAscending" type="boolean">
</parameter>
</method>
<method name="findUsersByFullNameKey"
 return="java.util.List&lt;org.apache.archiva.redback.users.User&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="fullNameKey" type="java.lang.String">
</parameter>
<parameter name="orderAscending" type="boolean">
</parameter>
</method>
<method name="findUsersByQuery"
 return="java.util.List&lt;org.apache.archiva.redback.users.User&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userQuery" type="org.apache.archiva.redback.users.UserQuery">
</parameter>
</method>
<method name="findUsersByUsernameKey"
 return="java.util.List&lt;org.apache.archiva.redback.users.User&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="usernameKey" type="java.lang.String">
</parameter>
<parameter name="orderAscending" type="boolean">
</parameter>
</method>
<method name="getDescriptionKey"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getId"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getJdoFactory"
 return="org.apache.archiva.redback.components.jdo.JdoFactory"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPersistenceManager"
 return="javax.jdo.PersistenceManager"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUserSecurityPolicy"
 return="org.apache.archiva.redback.policy.UserSecurityPolicy"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUsers"
 return="java.util.List&lt;org.apache.archiva.redback.users.User&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUsers"
 return="java.util.List&lt;org.apache.archiva.redback.users.User&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="orderAscending" type="boolean">
</parameter>
</method>
<method name="isReadOnly"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setJdoFactory"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jdoFactory" type="org.apache.archiva.redback.components.jdo.JdoFactory">
</parameter>
</method>
<method name="triggerInit"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="updateUser"
 return="org.apache.archiva.redback.users.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
<exception name="UserNotFoundException" type="org.apache.archiva.redback.users.UserNotFoundException">
</exception>
</method>
<method name="updateUser"
 return="org.apache.archiva.redback.users.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
<parameter name="passwordChangeRequired" type="boolean">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
<exception name="UserNotFoundException" type="org.apache.archiva.redback.users.UserNotFoundException">
</exception>
</method>
<method name="userExists"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
</class>
<class name="JdoUserQuery"
 extends="org.apache.archiva.redback.users.AbstractUserQuery"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="JdoUserQuery"
 type="org.apache.archiva.redback.users.jdo.JdoUserQuery"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getFilter"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getOrdering"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getParameters"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getSearchKeys"
 return="java.lang.String[]"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
</class>
<class name="Messages"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="getString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
</method>
<method name="getString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="arg" type="java.lang.Object">
</parameter>
</method>
<method name="getString"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="true"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="args" type="java.lang.Object[]">
</parameter>
</method>
</class>
<class name="UserDatabase"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="UserDatabase"
 type="org.apache.archiva.redback.users.jdo.UserDatabase"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="addUser"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jdoUser" type="org.apache.archiva.redback.users.jdo.JdoUser">
</parameter>
</method>
<method name="getModelEncoding"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUsers"
 return="java.util.List"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="removeUser"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="jdoUser" type="org.apache.archiva.redback.users.jdo.JdoUser">
</parameter>
</method>
<method name="setModelEncoding"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="modelEncoding" type="java.lang.String">
</parameter>
</method>
<method name="setUsers"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="users" type="java.util.List">
</parameter>
</method>
</class>
<class name="UsersManagementModelloMetadata"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="UsersManagementModelloMetadata"
 type="org.apache.archiva.redback.users.jdo.UsersManagementModelloMetadata"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getModelVersion"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setModelVersion"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="modelVersion" type="java.lang.String">
</parameter>
</method>
</class>
</package>
<package name="org.apache.archiva.redback.users.jdo.io.stax"
>
<class name="UsersManagementStaxReader"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="UsersManagementStaxReader"
 type="org.apache.archiva.redback.users.jdo.io.stax.UsersManagementStaxReader"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="read"
 return="org.apache.archiva.redback.users.jdo.UserDatabase"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="reader" type="java.io.Reader">
</parameter>
<parameter name="strict" type="boolean">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="XMLStreamException" type="javax.xml.stream.XMLStreamException">
</exception>
</method>
<method name="read"
 return="org.apache.archiva.redback.users.jdo.UserDatabase"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="reader" type="java.io.Reader">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="XMLStreamException" type="javax.xml.stream.XMLStreamException">
</exception>
</method>
<method name="read"
 return="org.apache.archiva.redback.users.jdo.UserDatabase"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.InputStream">
</parameter>
<parameter name="strict" type="boolean">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="XMLStreamException" type="javax.xml.stream.XMLStreamException">
</exception>
</method>
<method name="read"
 return="org.apache.archiva.redback.users.jdo.UserDatabase"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.InputStream">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="XMLStreamException" type="javax.xml.stream.XMLStreamException">
</exception>
</method>
<method name="read"
 return="org.apache.archiva.redback.users.jdo.UserDatabase"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filePath" type="java.lang.String">
</parameter>
<parameter name="strict" type="boolean">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="XMLStreamException" type="javax.xml.stream.XMLStreamException">
</exception>
</method>
<method name="read"
 return="org.apache.archiva.redback.users.jdo.UserDatabase"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="filePath" type="java.lang.String">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="XMLStreamException" type="javax.xml.stream.XMLStreamException">
</exception>
</method>
</class>
<class name="UsersManagementStaxWriter"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="UsersManagementStaxWriter"
 type="org.apache.archiva.redback.users.jdo.io.stax.UsersManagementStaxWriter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="write"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="writer" type="java.io.Writer">
</parameter>
<parameter name="userDatabase" type="org.apache.archiva.redback.users.jdo.UserDatabase">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="XMLStreamException" type="javax.xml.stream.XMLStreamException">
</exception>
</method>
<method name="write"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="stream" type="java.io.OutputStream">
</parameter>
<parameter name="userDatabase" type="org.apache.archiva.redback.users.jdo.UserDatabase">
</parameter>
<exception name="IOException" type="java.io.IOException">
</exception>
<exception name="XMLStreamException" type="javax.xml.stream.XMLStreamException">
</exception>
</method>
</class>
</package>
<package name="org.apache.archiva.redback.users.ldap"
>
<class name="LdapUserManager"
 extends="org.apache.archiva.redback.users.AbstractUserManager"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.users.UserManager">
</implements>
<constructor name="LdapUserManager"
 type="org.apache.archiva.redback.users.ldap.LdapUserManager"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="addUser"
 return="org.apache.archiva.redback.users.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<method name="addUserUnchecked"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<method name="createUser"
 return="org.apache.archiva.redback.users.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<parameter name="fullName" type="java.lang.String">
</parameter>
<parameter name="emailAddress" type="java.lang.String">
</parameter>
</method>
<method name="createUserQuery"
 return="org.apache.archiva.redback.users.UserQuery"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="deleteUser"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
<exception name="UserNotFoundException" type="org.apache.archiva.redback.users.UserNotFoundException">
</exception>
</method>
<method name="eraseDatabase"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="findUser"
 return="org.apache.archiva.redback.users.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
<exception name="UserNotFoundException" type="org.apache.archiva.redback.users.UserNotFoundException">
</exception>
</method>
<method name="findUsersByEmailKey"
 return="java.util.List&lt;org.apache.archiva.redback.users.User&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="emailKey" type="java.lang.String">
</parameter>
<parameter name="orderAscending" type="boolean">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<method name="findUsersByFullNameKey"
 return="java.util.List&lt;org.apache.archiva.redback.users.User&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="fullNameKey" type="java.lang.String">
</parameter>
<parameter name="orderAscending" type="boolean">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<method name="findUsersByQuery"
 return="java.util.List&lt;org.apache.archiva.redback.users.User&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="query" type="org.apache.archiva.redback.users.UserQuery">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<method name="findUsersByUsernameKey"
 return="java.util.List&lt;org.apache.archiva.redback.users.User&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="usernameKey" type="java.lang.String">
</parameter>
<parameter name="orderAscending" type="boolean">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<method name="getDescriptionKey"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getId"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUsers"
 return="java.util.List&lt;org.apache.archiva.redback.users.User&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUsers"
 return="java.util.List&lt;org.apache.archiva.redback.users.User&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="orderAscending" type="boolean">
</parameter>
</method>
<method name="isReadOnly"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="updateUser"
 return="org.apache.archiva.redback.users.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
<exception name="UserNotFoundException" type="org.apache.archiva.redback.users.UserNotFoundException">
</exception>
</method>
<method name="updateUser"
 return="org.apache.archiva.redback.users.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
<parameter name="passwordChangeRequired" type="boolean">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
<exception name="UserNotFoundException" type="org.apache.archiva.redback.users.UserNotFoundException">
</exception>
</method>
<method name="userExists"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
</class>
<class name="LdapUserQuery"
 extends="org.apache.archiva.redback.users.AbstractUserQuery"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="LdapUserQuery"
 type="org.apache.archiva.redback.users.ldap.LdapUserQuery"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getLdapFilter"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mapper" type="org.apache.archiva.redback.common.ldap.user.UserMapper">
</parameter>
</method>
</class>
</package>
<package name="org.apache.archiva.redback.users.ldap.ctl"
>
<class name="DefaultLdapController"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.users.ldap.ctl.LdapController">
</implements>
<constructor name="DefaultLdapController"
 type="org.apache.archiva.redback.users.ldap.ctl.DefaultLdapController"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="createUser"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
<parameter name="context" type="javax.naming.directory.DirContext">
</parameter>
<parameter name="encodePasswordIfChanged" type="boolean">
</parameter>
<exception name="LdapControllerException" type="org.apache.archiva.redback.users.ldap.ctl.LdapControllerException">
</exception>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="findUsersWithRoles"
 return="java.util.Map&lt;java.lang.String, java.util.Collection&lt;java.lang.String&gt;&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dirContext" type="javax.naming.directory.DirContext">
</parameter>
<exception name="LdapControllerException" type="org.apache.archiva.redback.users.ldap.ctl.LdapControllerException">
</exception>
</method>
<method name="getBaseDn"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getGroupsDn"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLdapGroupClass"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getMapper"
 return="org.apache.archiva.redback.common.ldap.user.UserMapper"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPasswordEncoder"
 return="org.apache.archiva.redback.policy.PasswordEncoder"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUser"
 return="org.apache.archiva.redback.common.ldap.user.LdapUser"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<parameter name="context" type="javax.naming.directory.DirContext">
</parameter>
<exception name="LdapControllerException" type="org.apache.archiva.redback.users.ldap.ctl.LdapControllerException">
</exception>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="getUserConf"
 return="org.apache.archiva.redback.configuration.UserConfiguration"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUsers"
 return="java.util.Collection&lt;org.apache.archiva.redback.users.User&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="context" type="javax.naming.directory.DirContext">
</parameter>
<exception name="LdapControllerException" type="org.apache.archiva.redback.users.ldap.ctl.LdapControllerException">
</exception>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="getUsersByQuery"
 return="java.util.List&lt;org.apache.archiva.redback.users.User&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="query" type="org.apache.archiva.redback.users.ldap.LdapUserQuery">
</parameter>
<parameter name="context" type="javax.naming.directory.DirContext">
</parameter>
<exception name="LdapControllerException" type="org.apache.archiva.redback.users.ldap.ctl.LdapControllerException">
</exception>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="initialize"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isWritableLdap"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="removeUser"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
<parameter name="context" type="javax.naming.directory.DirContext">
</parameter>
<exception name="LdapControllerException" type="org.apache.archiva.redback.users.ldap.ctl.LdapControllerException">
</exception>
</method>
<method name="searchUsers"
 return="javax.naming.NamingEnumeration&lt;javax.naming.directory.SearchResult&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="context" type="javax.naming.directory.DirContext">
</parameter>
<exception name="NamingException" type="javax.naming.NamingException">
</exception>
</method>
<method name="searchUsers"
 return="javax.naming.NamingEnumeration&lt;javax.naming.directory.SearchResult&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="context" type="javax.naming.directory.DirContext">
</parameter>
<exception name="NamingException" type="javax.naming.NamingException">
</exception>
</method>
<method name="searchUsers"
 return="javax.naming.NamingEnumeration&lt;javax.naming.directory.SearchResult&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="context" type="javax.naming.directory.DirContext">
</parameter>
<parameter name="returnAttributes" type="java.lang.String[]">
</parameter>
<exception name="NamingException" type="javax.naming.NamingException">
</exception>
</method>
<method name="searchUsers"
 return="javax.naming.NamingEnumeration&lt;javax.naming.directory.SearchResult&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<parameter name="context" type="javax.naming.directory.DirContext">
</parameter>
<parameter name="returnAttributes" type="java.lang.String[]">
</parameter>
<parameter name="query" type="org.apache.archiva.redback.users.ldap.LdapUserQuery">
</parameter>
<exception name="NamingException" type="javax.naming.NamingException">
</exception>
</method>
<method name="setBaseDn"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="baseDn" type="java.lang.String">
</parameter>
</method>
<method name="setGroupsDn"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="groupsDn" type="java.lang.String">
</parameter>
</method>
<method name="setLdapGroupClass"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ldapGroupClass" type="java.lang.String">
</parameter>
</method>
<method name="setMapper"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="mapper" type="org.apache.archiva.redback.common.ldap.user.UserMapper">
</parameter>
</method>
<method name="setPasswordEncoder"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="passwordEncoder" type="org.apache.archiva.redback.policy.PasswordEncoder">
</parameter>
</method>
<method name="setUserConf"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="userConf" type="org.apache.archiva.redback.configuration.UserConfiguration">
</parameter>
</method>
<method name="setWritableLdap"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="writableLdap" type="boolean">
</parameter>
</method>
<method name="updateUser"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
<parameter name="context" type="javax.naming.directory.DirContext">
</parameter>
<exception name="LdapControllerException" type="org.apache.archiva.redback.users.ldap.ctl.LdapControllerException">
</exception>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="userExists"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="context" type="javax.naming.directory.DirContext">
</parameter>
<exception name="LdapControllerException" type="org.apache.archiva.redback.users.ldap.ctl.LdapControllerException">
</exception>
</method>
</class>
<interface name="LdapController"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="createUser"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
<parameter name="context" type="javax.naming.directory.DirContext">
</parameter>
<parameter name="encodePasswordIfChanged" type="boolean">
</parameter>
<exception name="LdapControllerException" type="org.apache.archiva.redback.users.ldap.ctl.LdapControllerException">
</exception>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="findUsersWithRoles"
 return="java.util.Map&lt;java.lang.String, java.util.Collection&lt;java.lang.String&gt;&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="dirContext" type="javax.naming.directory.DirContext">
</parameter>
<exception name="LdapControllerException" type="org.apache.archiva.redback.users.ldap.ctl.LdapControllerException">
</exception>
</method>
<method name="getUser"
 return="org.apache.archiva.redback.common.ldap.user.LdapUser"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="context" type="javax.naming.directory.DirContext">
</parameter>
<exception name="LdapControllerException" type="org.apache.archiva.redback.users.ldap.ctl.LdapControllerException">
</exception>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="getUsers"
 return="java.util.Collection&lt;org.apache.archiva.redback.users.User&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="context" type="javax.naming.directory.DirContext">
</parameter>
<exception name="LdapControllerException" type="org.apache.archiva.redback.users.ldap.ctl.LdapControllerException">
</exception>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="getUsersByQuery"
 return="java.util.List&lt;org.apache.archiva.redback.users.User&gt;"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="query" type="org.apache.archiva.redback.users.ldap.LdapUserQuery">
</parameter>
<parameter name="context" type="javax.naming.directory.DirContext">
</parameter>
<exception name="LdapControllerException" type="org.apache.archiva.redback.users.ldap.ctl.LdapControllerException">
</exception>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="initialize"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="removeUser"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
<parameter name="context" type="javax.naming.directory.DirContext">
</parameter>
<exception name="LdapControllerException" type="org.apache.archiva.redback.users.ldap.ctl.LdapControllerException">
</exception>
</method>
<method name="updateUser"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
<parameter name="context" type="javax.naming.directory.DirContext">
</parameter>
<exception name="LdapControllerException" type="org.apache.archiva.redback.users.ldap.ctl.LdapControllerException">
</exception>
<exception name="MappingException" type="org.apache.archiva.redback.common.ldap.MappingException">
</exception>
</method>
<method name="userExists"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="key" type="java.lang.String">
</parameter>
<parameter name="context" type="javax.naming.directory.DirContext">
</parameter>
<exception name="LdapControllerException" type="org.apache.archiva.redback.users.ldap.ctl.LdapControllerException">
</exception>
</method>
</interface>
<class name="LdapControllerException"
 extends="java.lang.Exception"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="LdapControllerException"
 type="org.apache.archiva.redback.users.ldap.ctl.LdapControllerException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
<parameter name="cause" type="java.lang.Throwable">
</parameter>
</constructor>
<constructor name="LdapControllerException"
 type="org.apache.archiva.redback.users.ldap.ctl.LdapControllerException"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="message" type="java.lang.String">
</parameter>
</constructor>
</class>
</package>
<package name="org.apache.archiva.redback.users.ldap.service"
>
<class name="DefaultLdapCacheService"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.users.ldap.service.LdapCacheService">
</implements>
<constructor name="DefaultLdapCacheService"
 type="org.apache.archiva.redback.users.ldap.service.DefaultLdapCacheService"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="addLdapUserDn"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<parameter name="userDn" type="java.lang.String">
</parameter>
</method>
<method name="addUser"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.common.ldap.user.LdapUser">
</parameter>
</method>
<method name="getLdapUserDn"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
</method>
<method name="getUser"
 return="org.apache.archiva.redback.common.ldap.user.LdapUser"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
</method>
<method name="removeAllLdapUserDn"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="removeAllUsers"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="removeLdapUserDn"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
</method>
<method name="removeUser"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
</method>
</class>
<interface name="LdapCacheService"
 abstract="true"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<method name="addLdapUserDn"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<parameter name="userDn" type="java.lang.String">
</parameter>
</method>
<method name="addUser"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.common.ldap.user.LdapUser">
</parameter>
</method>
<method name="getLdapUserDn"
 return="java.lang.String"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
</method>
<method name="getUser"
 return="org.apache.archiva.redback.common.ldap.user.LdapUser"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
</method>
<method name="removeAllLdapUserDn"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="removeAllUsers"
 return="void"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="removeLdapUserDn"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
</method>
<method name="removeUser"
 return="boolean"
 abstract="true"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
</method>
</interface>
</package>
<package name="org.apache.archiva.redback.users.memory"
>
<class name="MemoryUserManager"
 extends="org.apache.archiva.redback.users.AbstractUserManager"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.users.UserManager">
</implements>
<constructor name="MemoryUserManager"
 type="org.apache.archiva.redback.users.memory.MemoryUserManager"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="addUser"
 return="org.apache.archiva.redback.users.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
</method>
<method name="addUserUnchecked"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
</method>
<method name="createUser"
 return="org.apache.archiva.redback.users.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<parameter name="fullName" type="java.lang.String">
</parameter>
<parameter name="emailAddress" type="java.lang.String">
</parameter>
</method>
<method name="createUserQuery"
 return="org.apache.archiva.redback.users.UserQuery"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="deleteUser"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
<exception name="UserNotFoundException" type="org.apache.archiva.redback.users.UserNotFoundException">
</exception>
</method>
<method name="eraseDatabase"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="findUser"
 return="org.apache.archiva.redback.users.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
<exception name="UserNotFoundException" type="org.apache.archiva.redback.users.UserNotFoundException">
</exception>
</method>
<method name="findUsersByEmailKey"
 return="java.util.List&lt;org.apache.archiva.redback.users.User&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="emailKey" type="java.lang.String">
</parameter>
<parameter name="orderAscending" type="boolean">
</parameter>
</method>
<method name="findUsersByFullNameKey"
 return="java.util.List&lt;org.apache.archiva.redback.users.User&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="fullNameKey" type="java.lang.String">
</parameter>
<parameter name="orderAscending" type="boolean">
</parameter>
</method>
<method name="findUsersByQuery"
 return="java.util.List&lt;org.apache.archiva.redback.users.User&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="query" type="org.apache.archiva.redback.users.UserQuery">
</parameter>
</method>
<method name="findUsersByUsernameKey"
 return="java.util.List&lt;org.apache.archiva.redback.users.User&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="usernameKey" type="java.lang.String">
</parameter>
<parameter name="orderAscending" type="boolean">
</parameter>
</method>
<method name="getDescriptionKey"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getId"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUsers"
 return="java.util.List&lt;org.apache.archiva.redback.users.User&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUsers"
 return="java.util.List&lt;org.apache.archiva.redback.users.User&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ascendingUsername" type="boolean">
</parameter>
</method>
<method name="isReadOnly"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="triggerInit"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="updateUser"
 return="org.apache.archiva.redback.users.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
</method>
<method name="updateUser"
 return="org.apache.archiva.redback.users.User"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
<parameter name="passwordChangeRequired" type="boolean">
</parameter>
</method>
<method name="userExists"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="principal" type="java.lang.String">
</parameter>
</method>
</class>
<class name="SimpleUser"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.users.User">
</implements>
<constructor name="SimpleUser"
 type="org.apache.archiva.redback.users.memory.SimpleUser"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="addPreviousEncodedPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="encodedPassword" type="java.lang.String">
</parameter>
</method>
<method name="getAccountCreationDate"
 return="java.util.Date"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getCountFailedLoginAttempts"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getEmail"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getEncodedPassword"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getFullName"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLastLoginDate"
 return="java.util.Date"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getLastPasswordChange"
 return="java.util.Date"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPassword"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getPreviousEncodedPasswords"
 return="java.util.List&lt;java.lang.String&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUserManagerId"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUsername"
 return="java.lang.String"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isLocked"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isPasswordChangeRequired"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isPermanent"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="isValidated"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setAccountCreationDate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="accountCreationDate" type="java.util.Date">
</parameter>
</method>
<method name="setCountFailedLoginAttempts"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="countFailedLoginAttempts" type="int">
</parameter>
</method>
<method name="setEmail"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="email" type="java.lang.String">
</parameter>
</method>
<method name="setEncodedPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="encodedPassword" type="java.lang.String">
</parameter>
</method>
<method name="setFullName"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="fullName" type="java.lang.String">
</parameter>
</method>
<method name="setLastLoginDate"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="lastLoginDate" type="java.util.Date">
</parameter>
</method>
<method name="setLastPasswordChange"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="lastPasswordChange" type="java.util.Date">
</parameter>
</method>
<method name="setLocked"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="locked" type="boolean">
</parameter>
</method>
<method name="setPassword"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="password" type="java.lang.String">
</parameter>
</method>
<method name="setPasswordChangeRequired"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="passwordChangeRequired" type="boolean">
</parameter>
</method>
<method name="setPermanent"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="permanent" type="boolean">
</parameter>
</method>
<method name="setPreviousEncodedPasswords"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="previousEncodedPasswords" type="java.util.List&lt;java.lang.String&gt;">
</parameter>
</method>
<method name="setUsername"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="username" type="java.lang.String">
</parameter>
</method>
<method name="setValidated"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="validated" type="boolean">
</parameter>
</method>
</class>
<class name="SimpleUserQuery"
 extends="org.apache.archiva.redback.users.AbstractUserQuery"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="SimpleUserQuery"
 type="org.apache.archiva.redback.users.memory.SimpleUserQuery"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="getComparator"
 return="java.util.Comparator&lt;org.apache.archiva.redback.users.User&gt;"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="matches"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
</method>
</class>
</package>
<package name="org.apache.archiva.redback.users.memory.util"
>
<class name="UserSorter"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="java.util.Comparator">
</implements>
<constructor name="UserSorter"
 type="org.apache.archiva.redback.users.memory.util.UserSorter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<constructor name="UserSorter"
 type="org.apache.archiva.redback.users.memory.util.UserSorter"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ascending" type="boolean">
</parameter>
</constructor>
<method name="compare"
 return="int"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="o1" type="org.apache.archiva.redback.users.User">
</parameter>
<parameter name="o2" type="org.apache.archiva.redback.users.User">
</parameter>
</method>
<method name="isAscending"
 return="boolean"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setAscending"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="ascending" type="boolean">
</parameter>
</method>
</class>
</package>
<package name="org.apache.archiva.redback.users.provider.test"
>
<class name="AbstractUserManagerTestCase"
 extends="junit.framework.TestCase"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<constructor name="AbstractUserManagerTestCase"
 type="org.apache.archiva.redback.users.provider.test.AbstractUserManagerTestCase"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="assertCleanUserManager"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="protected"
>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<method name="getEventTracker"
 return="org.apache.archiva.redback.users.provider.test.UserManagerEventTracker"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="getUserManager"
 return="org.apache.archiva.redback.users.UserManager"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</method>
<method name="setEventTracker"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="eventTracker" type="org.apache.archiva.redback.users.provider.test.UserManagerEventTracker">
</parameter>
</method>
<method name="setUp"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="Exception" type="java.lang.Exception">
</exception>
</method>
<method name="setUserManager"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="um" type="org.apache.archiva.redback.users.UserManager">
</parameter>
</method>
<method name="tearDown"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="Exception" type="java.lang.Exception">
</exception>
</method>
<method name="testAddFindUserByPrincipal"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
<exception name="UserNotFoundException" type="org.apache.archiva.redback.users.UserNotFoundException">
</exception>
</method>
<method name="testAddFindUserByUsername"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
<exception name="UserNotFoundException" type="org.apache.archiva.redback.users.UserNotFoundException">
</exception>
</method>
<method name="testAddFindUserLockedStatus"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
<exception name="UserNotFoundException" type="org.apache.archiva.redback.users.UserNotFoundException">
</exception>
</method>
<method name="testAddUser"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="Exception" type="java.lang.Exception">
</exception>
</method>
<method name="testCreateUser"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="Exception" type="java.lang.Exception">
</exception>
</method>
<method name="testDeletePermanentUser"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
<exception name="UserNotFoundException" type="org.apache.archiva.redback.users.UserNotFoundException">
</exception>
</method>
<method name="testDeleteUser"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="Exception" type="java.lang.Exception">
</exception>
</method>
<method name="testFindUser"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="Exception" type="java.lang.Exception">
</exception>
</method>
<method name="testFindUserByEmptyUsername"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<method name="testFindUserByNullPrincipal"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<method name="testFindUsersByQuery"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="UserManagerException" type="org.apache.archiva.redback.users.UserManagerException">
</exception>
</method>
<method name="testUpdateUser"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="Exception" type="java.lang.Exception">
</exception>
</method>
<method name="testUserExists"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<exception name="Exception" type="java.lang.Exception">
</exception>
</method>
</class>
<class name="UserManagerEventTracker"
 extends="java.lang.Object"
 abstract="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<implements name="org.apache.archiva.redback.users.UserManagerListener">
</implements>
<constructor name="UserManagerEventTracker"
 type="org.apache.archiva.redback.users.provider.test.UserManagerEventTracker"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</constructor>
<method name="userManagerInit"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="freshDatabase" type="boolean">
</parameter>
</method>
<method name="userManagerUserAdded"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
</method>
<method name="userManagerUserRemoved"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
</method>
<method name="userManagerUserUpdated"
 return="void"
 abstract="false"
 native="false"
 synchronized="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
<parameter name="user" type="org.apache.archiva.redback.users.User">
</parameter>
</method>
<field name="addedUsernames"
 type="java.util.List"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="countInit"
 type="long"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="lastDbFreshness"
 type="java.lang.Boolean"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="removedUsernames"
 type="java.util.List"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
<field name="updatedUsernames"
 type="java.util.List"
 transient="false"
 volatile="false"
 static="false"
 final="false"
 deprecated="not deprecated"
 visibility="public"
>
</field>
</class>
</package>
</api>
