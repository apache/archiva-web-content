{
  "swagger": "2.0",
  "info" : {
    "description" : "<h1>Redback :: Integration :: REST :: Api<\/h1><p>Archiva is an application for managing one or more remote\n      repositories, including administration, artifact handling,\n      browsing and searching.<\/p>",
    "contact" : {
      "name" : "Steffen Grunwald"
    },
    "license" : {
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.txt",
      "name" : "The Apache Software License, Version 2.0"
    },
    "version" : "3.0.0-SNAPSHOT",
    "title" : "Redback :: Integration :: REST :: Api"
  },
  "schemes" : [],
  "tags" : [
    {
      "name" : "LdapGroupMappingService"
    }
    ,
    {
      "name" : "LoginService"
    }
    ,
    {
      "name" : "PasswordService"
    }
    ,
    {
      "name" : "RoleManagementService"
    }
    ,
    {
      "name" : "UserService"
    }
    ,
    {
      "name" : "UtilServices"
    }
  ],
  "definitions" : {
    "xml_ns0_application" : {
      "type" : "object",
      "xml" : {
        "name" : "application",
        "namespace" : ""
      },
      "title" : "application",
      "allOf" : [
        {
          "properties" : {
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "longDescription" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "version" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_applicationRoles" : {
      "type" : "object",
      "xml" : {
        "name" : "applicationRole",
        "namespace" : ""
      },
      "title" : "applicationRoles",
      "allOf" : [
        {
          "properties" : {
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "globalRoles" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "resources" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "roleTemplates" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_roleTemplate"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_ldapGroupMapping" : {
      "type" : "object",
      "xml" : {
        "name" : "ldapGroupMapping",
        "namespace" : ""
      },
      "title" : "ldapGroupMapping",
      "allOf" : [
        {
          "properties" : {
            "group" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "roleNames" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_ldapGroupMappingUpdateRequest" : {
      "type" : "object",
      "xml" : {
        "name" : "ldapGroupMappingUpdateRequest",
        "namespace" : ""
      },
      "title" : "ldapGroupMappingUpdateRequest",
      "allOf" : [
        {
          "properties" : {
            "ldapGroupMapping" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_ldapGroupMapping"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_loginRequest" : {
      "type" : "object",
      "xml" : {
        "name" : "loginRequest",
        "namespace" : ""
      },
      "title" : "loginRequest",
      "allOf" : [
        {
          "properties" : {
            "password" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "username" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_operation" : {
      "type" : "object",
      "xml" : {
        "name" : "operation",
        "namespace" : ""
      },
      "title" : "operation",
      "allOf" : [
        {
          "properties" : {
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "permanent" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_permission" : {
      "type" : "object",
      "xml" : {
        "name" : "permission",
        "namespace" : ""
      },
      "title" : "permission",
      "allOf" : [
        {
          "properties" : {
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "operation" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_operation"
            },
            "resource" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_resource"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_registrationKey" : {
      "type" : "object",
      "xml" : {
        "name" : "registrationKey",
        "namespace" : ""
      },
      "title" : "registrationKey",
      "allOf" : [
        {
          "properties" : {
            "key" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_resetPasswordRequest" : {
      "type" : "object",
      "title" : "resetPasswordRequest",
      "allOf" : [
        {
          "properties" : {
            "applicationUrl" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "username" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_resource" : {
      "type" : "object",
      "xml" : {
        "name" : "resource",
        "namespace" : ""
      },
      "title" : "resource",
      "allOf" : [
        {
          "properties" : {
            "identifier" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "pattern" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "permanent" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_role" : {
      "type" : "object",
      "xml" : {
        "name" : "role",
        "namespace" : ""
      },
      "title" : "role",
      "allOf" : [
        {
          "properties" : {
            "assignable" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "childRoleNames" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "otherUsers" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_user"
}
            },
            "parentRoleNames" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "parentsRolesUsers" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_user"
}
            },
            "permanent" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "permissions" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_permission"
}
            },
            "removedUsers" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_user"
}
            },
            "users" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_user"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_roleTemplate" : {
      "type" : "object",
      "xml" : {
        "name" : "roleTemplate",
        "namespace" : ""
      },
      "title" : "roleTemplate",
      "allOf" : [
        {
          "properties" : {
            "delimiter" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "namePrefix" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "resource" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "roles" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_stringList" : {
      "type" : "object",
      "xml" : {
        "name" : "stringList",
        "namespace" : ""
      },
      "title" : "stringList",
      "allOf" : [
        {
          "properties" : {
            "strings" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "description" : "jaxrs fail to return List String so use this contains for rest services returning that"
    }
    ,
    "xml_ns0_user" : {
      "type" : "object",
      "xml" : {
        "name" : "user",
        "namespace" : ""
      },
      "title" : "user",
      "allOf" : [
        {
          "properties" : {
            "assignedRoles" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "confirmPassword" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "email" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "fullName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "locked" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "password" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "passwordChangeRequired" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "permanent" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "previousPassword" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "readOnly" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "timestampAccountCreation" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "timestampLastLogin" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "timestampLastPasswordChange" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "userManagerId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "username" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "validated" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "validationToken" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_userRegistrationRequest" : {
      "type" : "object",
      "xml" : {
        "name" : "userRegistrationRequest",
        "namespace" : ""
      },
      "title" : "userRegistrationRequest",
      "allOf" : [
        {
          "properties" : {
            "applicationUrl" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "user" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_user"
            }
          }
        }
      ],
      "description" : ""
    }
  },
  "paths": {
    "\/ldapGroupMappingService" : {
      "get" : {
        "tags" : [ "LdapGroupMappingService" ],
        "description" : "",
        "operationId" : "getLdapGroupMappings",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "LdapGroupMappingService" ],
        "description" : "",
        "operationId" : "updateLdapGroupMapping",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "LdapGroupMappingService" ],
        "description" : "",
        "operationId" : "addLdapGroupMapping",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/ldapGroupMappingService/ldapGroups" : {
      "get" : {
        "tags" : [ "LdapGroupMappingService" ],
        "description" : "",
        "operationId" : "getLdapGroups",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/ldapGroupMappingService/{group}" : {
      "delete" : {
        "tags" : [ "LdapGroupMappingService" ],
        "description" : "",
        "operationId" : "removeLdapGroupMapping",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "group",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/loginService/addAuthenticationKey" : {
      "get" : {
        "tags" : [ "LoginService" ],
        "description" : "",
        "operationId" : "addAuthenticationKey",
        "produces" : [ "application/json", "text/plain", "application/xml" ],
        "parameters" : [
          {
            "name" : "expirationMinutes",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "format" : "int32",
            "description" : ""
          },
          {
            "name" : "principal",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "providerKey",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "purpose",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/loginService/isLogged" : {
      "get" : {
        "tags" : [ "LoginService" ],
        "summary" : "simply check if current user has an http session opened with authz passed and return user data.",
        "description" : "simply check if current user has an http session opened with authz passed and return user data",
        "operationId" : "isLogged",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/loginService/logIn" : {
      "post" : {
        "tags" : [ "LoginService" ],
        "summary" : "check username/password and create a http session.",
        "description" : "check username/password and create a http session.\nSo no more need of reuse username/password for all ajaxRequest",
        "operationId" : "logIn",
        "consumes" : [ "application/xml" ],
        "produces" : [ "application/json", "text/plain", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/xml_ns0_loginRequest"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/loginService/logout" : {
      "get" : {
        "tags" : [ "LoginService" ],
        "summary" : "clear user http session.",
        "description" : "clear user http session",
        "operationId" : "logout",
        "produces" : [ "application/json", "text/plain", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/loginService/ping" : {
      "get" : {
        "tags" : [ "LoginService" ],
        "description" : "",
        "operationId" : "ping",
        "produces" : [ "application/json", "text/plain", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/loginService/pingWithAutz" : {
      "get" : {
        "tags" : [ "LoginService" ],
        "description" : "",
        "operationId" : "pingWithAutz",
        "produces" : [ "application/json", "text/plain", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/passwordService/changePassword" : {
      "get" : {
        "tags" : [ "PasswordService" ],
        "summary" : "used to change the password on passwordChangeRequired state.",
        "description" : "used to change the password on passwordChangeRequired state.",
        "operationId" : "changePassword",
        "produces" : [ "application/json", "text/plain", "application/xml" ],
        "parameters" : [
          {
            "name" : "password",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "passwordConfirmation",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "previousPassword",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "userName",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/passwordService/changePasswordWithKey" : {
      "get" : {
        "tags" : [ "PasswordService" ],
        "summary" : "used to change the password on first user connection after registration use.",
        "description" : "used to change the password on first user connection after registration use.\nthe key is mandatory and a control will be done on the username provided.\n<b>need to be logged by UserService#validateUserFromKey(String)<\/b>",
        "operationId" : "changePasswordWithKey",
        "produces" : [ "application/json", "text/plain", "application/xml" ],
        "parameters" : [
          {
            "name" : "key",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "password",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "passwordConfirmation",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "username",
"type" : "string"
            },
            "description" : "username"
          }
        }
      }
    }
    ,
    "\/roleManagementService/allRoles" : {
      "get" : {
        "tags" : [ "RoleManagementService" ],
        "description" : "",
        "operationId" : "getAllRoles",
        "produces" : [ "application/json", "text/plain", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/roleManagementService/assignRole" : {
      "get" : {
        "tags" : [ "RoleManagementService" ],
        "summary" : "Assigns the role indicated by the roleId to the given principal.",
        "description" : "Assigns the role indicated by the roleId to the given principal",
        "operationId" : "assignRole",
        "produces" : [ "application/json", "text/plain", "application/xml" ],
        "parameters" : [
          {
            "name" : "principal",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "roleId",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/roleManagementService/assignRoleByName" : {
      "get" : {
        "tags" : [ "RoleManagementService" ],
        "summary" : "Assigns the role indicated by the roleName to the given principal.",
        "description" : "Assigns the role indicated by the roleName to the given principal",
        "operationId" : "assignRoleByName",
        "produces" : [ "application/json", "text/plain", "application/xml" ],
        "parameters" : [
          {
            "name" : "principal",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "roleName",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/roleManagementService/assignTemplatedRole" : {
      "get" : {
        "tags" : [ "RoleManagementService" ],
        "summary" : "Assigns the templated role indicated by the templateId\n\nfails if the templated role has not been created.",
        "description" : "Assigns the templated role indicated by the templateId\n\nfails if the templated role has not been created",
        "operationId" : "assignTemplatedRole",
        "produces" : [ "application/json", "text/plain", "application/xml" ],
        "parameters" : [
          {
            "name" : "principal",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "resource",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "templateId",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/roleManagementService/createTemplatedRole" : {
      "get" : {
        "tags" : [ "RoleManagementService" ],
        "description" : "",
        "operationId" : "createTemplatedRole",
        "produces" : [ "application/json", "text/plain", "application/xml" ],
        "parameters" : [
          {
            "name" : "resource",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "templateId",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/roleManagementService/detailledAllRoles" : {
      "get" : {
        "tags" : [ "RoleManagementService" ],
        "description" : "",
        "operationId" : "getDetailedAllRoles",
        "produces" : [ "application/json", "text/plain", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/roleManagementService/getApplicationRoles/{username}" : {
      "get" : {
        "tags" : [ "RoleManagementService" ],
        "description" : "",
        "operationId" : "getApplicationRoles",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "username",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/roleManagementService/getApplications/{username}" : {
      "get" : {
        "tags" : [ "RoleManagementService" ],
        "description" : "",
        "operationId" : "getApplications",
        "produces" : [ "application/json", "text/plain", "application/xml" ],
        "parameters" : [
          {
            "name" : "username",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/roleManagementService/getEffectivelyAssignedRoles/{username}" : {
      "get" : {
        "tags" : [ "RoleManagementService" ],
        "description" : "",
        "operationId" : "getEffectivelyAssignedRoles",
        "produces" : [ "application/json", "text/plain", "application/xml" ],
        "parameters" : [
          {
            "name" : "username",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/roleManagementService/getRole/{roleName}" : {
      "get" : {
        "tags" : [ "RoleManagementService" ],
        "description" : "",
        "operationId" : "getRole",
        "produces" : [ "application/json", "text/plain", "application/xml" ],
        "parameters" : [
          {
            "name" : "roleName",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/roleManagementService/removeTemplatedRole" : {
      "get" : {
        "tags" : [ "RoleManagementService" ],
        "summary" : "removes a role corresponding to the role Id that was manufactured with the given resource\n\nit also removes any user assignments for that role.",
        "description" : "removes a role corresponding to the role Id that was manufactured with the given resource\n\nit also removes any user assignments for that role",
        "operationId" : "removeTemplatedRole",
        "produces" : [ "application/json", "text/plain", "application/xml" ],
        "parameters" : [
          {
            "name" : "resource",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "templateId",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/roleManagementService/roleExists" : {
      "get" : {
        "tags" : [ "RoleManagementService" ],
        "summary" : "true of a role exists with the given roleId.",
        "description" : "true of a role exists with the given roleId",
        "operationId" : "roleExists",
        "produces" : [ "application/json", "text/plain", "application/xml" ],
        "parameters" : [
          {
            "name" : "roleId",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/roleManagementService/templatedRoleExists" : {
      "get" : {
        "tags" : [ "RoleManagementService" ],
        "summary" : "true of a role exists with the given roleId.",
        "description" : "true of a role exists with the given roleId",
        "operationId" : "templatedRoleExists",
        "produces" : [ "application/json", "text/plain", "application/xml" ],
        "parameters" : [
          {
            "name" : "resource",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "templateId",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/roleManagementService/unassignRole" : {
      "get" : {
        "tags" : [ "RoleManagementService" ],
        "summary" : "Unassigns the role indicated by the role id from the given principal.",
        "description" : "Unassigns the role indicated by the role id from the given principal",
        "operationId" : "unassignRole",
        "produces" : [ "application/json", "text/plain", "application/xml" ],
        "parameters" : [
          {
            "name" : "principal",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "roleId",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/roleManagementService/unassignRoleByName" : {
      "get" : {
        "tags" : [ "RoleManagementService" ],
        "summary" : "Unassigns the role indicated by the role name from the given principal.",
        "description" : "Unassigns the role indicated by the role name from the given principal",
        "operationId" : "unassignRoleByName",
        "produces" : [ "application/json", "text/plain", "application/xml" ],
        "parameters" : [
          {
            "name" : "principal",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "roleName",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/roleManagementService/updateRole" : {
      "get" : {
        "tags" : [ "RoleManagementService" ],
        "summary" : "allows for a role coming from a template to be renamed effectively swapping out the bits of it that\nwere labeled with the oldResource with the newResource\n\nit also manages any user assignments for that role.",
        "description" : "allows for a role coming from a template to be renamed effectively swapping out the bits of it that\nwere labeled with the oldResource with the newResource\n\nit also manages any user assignments for that role",
        "operationId" : "updateRole",
        "produces" : [ "application/json", "text/plain", "application/xml" ],
        "parameters" : [
          {
            "name" : "newResource",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "oldResource",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "templateId",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/roleManagementService/updateRoleDescription" : {
      "get" : {
        "tags" : [ "RoleManagementService" ],
        "description" : "",
        "operationId" : "updateRoleDescription",
        "produces" : [ "application/json", "text/plain", "application/xml" ],
        "parameters" : [
          {
            "name" : "roleDescription",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "roleName",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/roleManagementService/updateRoleUsers" : {
      "post" : {
        "tags" : [ "RoleManagementService" ],
        "summary" : "update users assigned to a role.",
        "description" : "update users assigned to a role",
        "operationId" : "updateRoleUsers",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/roleManagementService/updateUserRoles" : {
      "post" : {
        "tags" : [ "RoleManagementService" ],
        "summary" : "update roles assigned to a user.",
        "description" : "update roles assigned to a user",
        "operationId" : "updateUserRoles",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/roleManagementService/verifyTemplatedRole" : {
      "get" : {
        "tags" : [ "RoleManagementService" ],
        "summary" : "Check a role template is complete in the RBAC store.",
        "description" : "Check a role template is complete in the RBAC store.",
        "operationId" : "verifyTemplatedRole",
        "produces" : [ "application/json", "text/plain", "application/xml" ],
        "parameters" : [
          {
            "name" : "resource",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : "the resource to verify"
          },
          {
            "name" : "templateId",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : "the templated role"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/userService/createAdminUser" : {
      "post" : {
        "tags" : [ "UserService" ],
        "summary" : "will create admin user only if not exists !! if exists will return false.",
        "description" : "will create admin user only if not exists !! if exists will return false",
        "operationId" : "createAdminUser",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "text/plain", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/userService/createGuestUser" : {
      "get" : {
        "tags" : [ "UserService" ],
        "description" : "",
        "operationId" : "createGuestUser",
        "produces" : [ "application/json", "text/plain", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/userService/createUser" : {
      "post" : {
        "tags" : [ "UserService" ],
        "description" : "",
        "operationId" : "createUser",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "text/plain", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/userService/deleteUser/{userName}" : {
      "get" : {
        "tags" : [ "UserService" ],
        "description" : "",
        "operationId" : "deleteUser",
        "produces" : [ "application/json", "text/plain", "application/xml" ],
        "parameters" : [
          {
            "name" : "userName",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/userService/getCurrentUserOperations" : {
      "get" : {
        "tags" : [ "UserService" ],
        "description" : "",
        "operationId" : "getCurrentUserOperations",
        "produces" : [ "application/json", "text/plain", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "the current logged user operations, if no logged user guest operations are returned",
"type" : "string"
            },
            "description" : "the current logged user operations, if no logged user guest operations are returned"
          }
        }
      }
    }
    ,
    "\/userService/getCurrentUserPermissions" : {
      "get" : {
        "tags" : [ "UserService" ],
        "description" : "",
        "operationId" : "getCurrentUserPermissions",
        "produces" : [ "application/json", "text/plain", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "the current logged user permissions, if no logged user guest permissions are returned",
"type" : "string"
            },
            "description" : "the current logged user permissions, if no logged user guest permissions are returned"
          }
        }
      }
    }
    ,
    "\/userService/getGuestUser" : {
      "get" : {
        "tags" : [ "UserService" ],
        "description" : "",
        "operationId" : "getGuestUser",
        "produces" : [ "application/json", "text/plain", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/userService/getUser/{userName}" : {
      "get" : {
        "tags" : [ "UserService" ],
        "description" : "",
        "operationId" : "getUser",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "userName",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/userService/getUserOperations/{userName}" : {
      "get" : {
        "tags" : [ "UserService" ],
        "description" : "",
        "operationId" : "getUserOperations",
        "produces" : [ "application/json", "text/plain", "application/xml" ],
        "parameters" : [
          {
            "name" : "userName",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/userService/getUserPermissions/{userName}" : {
      "get" : {
        "tags" : [ "UserService" ],
        "description" : "",
        "operationId" : "getUserPermissions",
        "produces" : [ "application/json", "text/plain", "application/xml" ],
        "parameters" : [
          {
            "name" : "userName",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/userService/getUsers" : {
      "get" : {
        "tags" : [ "UserService" ],
        "description" : "",
        "operationId" : "getUsers",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/userService/isAdminUserExists" : {
      "get" : {
        "tags" : [ "UserService" ],
        "description" : "",
        "operationId" : "isAdminUserExists",
        "produces" : [ "application/json", "text/plain", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/userService/lockUser/{username}" : {
      "get" : {
        "tags" : [ "UserService" ],
        "description" : "",
        "operationId" : "lockUser",
        "produces" : [ "application/json", "text/plain", "application/xml" ],
        "parameters" : [
          {
            "name" : "username",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/userService/passwordChangeNotRequired/{username}" : {
      "get" : {
        "tags" : [ "UserService" ],
        "description" : "",
        "operationId" : "passwordChangeNotRequired",
        "produces" : [ "application/json", "text/plain", "application/xml" ],
        "parameters" : [
          {
            "name" : "username",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/userService/passwordChangeRequired/{username}" : {
      "get" : {
        "tags" : [ "UserService" ],
        "description" : "",
        "operationId" : "passwordChangeRequired",
        "produces" : [ "application/json", "text/plain", "application/xml" ],
        "parameters" : [
          {
            "name" : "username",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/userService/ping" : {
      "get" : {
        "tags" : [ "UserService" ],
        "description" : "",
        "operationId" : "ping2",
        "produces" : [ "application/json", "text/plain", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/userService/registerUser" : {
      "post" : {
        "tags" : [ "UserService" ],
        "summary" : "if redback is not configured for email validation is required, -1 is returned as key.",
        "description" : "if redback is not configured for email validation is required, -1 is returned as key",
        "operationId" : "registerUser",
        "consumes" : [ "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/xml_ns0_userRegistrationRequest"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/userService/removeFromCache/{userName}" : {
      "get" : {
        "tags" : [ "UserService" ],
        "description" : "",
        "operationId" : "removeFromCache",
        "produces" : [ "application/json", "text/plain", "application/xml" ],
        "parameters" : [
          {
            "name" : "userName",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/userService/resetPassword" : {
      "post" : {
        "tags" : [ "UserService" ],
        "description" : "",
        "operationId" : "resetPassword",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "text/plain", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "contains username for send a password reset email",
"type" : "string"
            },
            "description" : "contains username for send a password reset email"
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/userService/unlockUser/{username}" : {
      "get" : {
        "tags" : [ "UserService" ],
        "description" : "",
        "operationId" : "unlockUser",
        "produces" : [ "application/json", "text/plain", "application/xml" ],
        "parameters" : [
          {
            "name" : "username",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/userService/updateMe" : {
      "post" : {
        "tags" : [ "UserService" ],
        "summary" : "update only the current user and this fields: fullname, email, password.",
        "description" : "update only the current user and this fields: fullname, email, password.\nthe service verify the curent logged user with the one passed in the method",
        "operationId" : "updateMe",
        "consumes" : [ "application/xml" ],
        "produces" : [ "application/json", "text/plain", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/xml_ns0_user"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/userService/updateUser" : {
      "post" : {
        "tags" : [ "UserService" ],
        "description" : "",
        "operationId" : "updateUser",
        "consumes" : [ "application/xml" ],
        "produces" : [ "application/json", "text/plain", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/xml_ns0_user"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/userService/validateKey/{key}" : {
      "get" : {
        "tags" : [ "UserService" ],
        "summary" : "validate the key and the user with forcing a password change for next login.",
        "description" : "validate the key and the user with forcing a password change for next login.\nhttp session is created.",
        "operationId" : "validateUserFromKey",
        "produces" : [ "application/json", "text/plain", "application/xml" ],
        "parameters" : [
          {
            "name" : "key",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : "authentication key"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/utilServices/getBundleResources" : {
      "get" : {
        "tags" : [ "UtilServices" ],
        "description" : "",
        "operationId" : "getI18nResources",
        "produces" : [ "text/plain" ],
        "parameters" : [
          {
            "name" : "locale",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
  }
}
