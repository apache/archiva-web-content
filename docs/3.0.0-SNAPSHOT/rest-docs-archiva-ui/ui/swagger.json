{
  "swagger": "2.0",
  "info" : {
    "description" : "<h1>Archiva Web :: Web Common<\/h1><p>Archiva is an application for managing one or more remote\n      repositories, including administration, artifact handling,\n      browsing and searching.<\/p>",
    "contact" : {
      "name" : "Steffen Grunwald"
    },
    "license" : {
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.txt",
      "name" : "The Apache Software License, Version 2.0"
    },
    "version" : "3.0.0-SNAPSHOT",
    "title" : "Archiva UI Rest API"
  },
  "schemes" : [],
  "tags" : [
    {
      "name" : "ArchivaAdministrationService"
    }
    ,
    {
      "name" : "ArchivaRuntimeConfigurationService"
    }
    ,
    {
      "name" : "BrowseService"
    }
    ,
    {
      "name" : "CommonServices"
      ,
      "description" : "contains some \"free\" services (i18n)."
    }
    ,
    {
      "name" : "DataValidatorService"
    }
    ,
    {
      "name" : "FileUploadService"
    }
    ,
    {
      "name" : "JavascriptLogger"
    }
    ,
    {
      "name" : "ManagedRepositoriesService"
    }
    ,
    {
      "name" : "MergeRepositoriesService"
      ,
      "description" : "provide REST services on the top of stage merge repository plugin."
    }
    ,
    {
      "name" : "NetworkProxyService"
    }
    ,
    {
      "name" : "PingService"
    }
    ,
    {
      "name" : "PluginsService"
      ,
      "description" : "contains some services for plugins."
    }
    ,
    {
      "name" : "ProxyConnectorRuleService"
      ,
      "description" : "."
    }
    ,
    {
      "name" : "ProxyConnectorService"
      ,
      "description" : "."
    }
    ,
    {
      "name" : "RedbackRuntimeConfigurationService"
    }
    ,
    {
      "name" : "RemoteRepositoriesService"
    }
    ,
    {
      "name" : "ReportRepositoriesService"
      ,
      "description" : "ReportRepositoriesService."
    }
    ,
    {
      "name" : "RepositoriesService"
    }
    ,
    {
      "name" : "RepositoryGroupService"
    }
    ,
    {
      "name" : "RuntimeInfoService"
    }
    ,
    {
      "name" : "SearchService"
    }
    ,
    {
      "name" : "SystemStatusService"
    }
  ],
  "definitions" : {
    "json_AbstractImplementationInformation" : {
      "type" : "object",
      "title" : "AbstractImplementationInformation",
      "required" : ["readOnly"],
          "properties" : {
            "readOnly" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "beanId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "descriptionKey" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "readOnly" : true,
  "beanId" : "...",
  "descriptionKey" : "..."
},
      "description" : ""
    }
    ,
    "json_AbstractRepository" : {
      "type" : "object",
      "title" : "AbstractRepository",
          "properties" : {
            "layout" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "type" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "indexDirectory" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "descriptions" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "string"
}
            },
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "packedIndexDirectory" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "description" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "names" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "string"
}
            }
          },
      "example" : {
  "layout" : "...",
  "type" : "...",
  "indexDirectory" : "...",
  "descriptions" : {
    "property1" : "...",
    "property2" : "..."
  },
  "id" : "...",
  "name" : "...",
  "packedIndexDirectory" : "...",
  "description" : "...",
  "names" : {
    "property1" : "...",
    "property2" : "..."
  }
},
      "description" : ""
    }
    ,
    "json_AbstractRepositoryConnector" : {
      "type" : "object",
      "title" : "AbstractRepositoryConnector",
      "required" : ["disabled"],
          "properties" : {
            "blackListPatterns" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "policies" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "string"
}
            },
            "proxyId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "policiesEntries" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PropertyEntry"
}
            },
            "targetRepoId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "disabled" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "whiteListPatterns" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "propertiesEntries" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PropertyEntry"
}
            },
            "sourceRepoId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "properties" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "string"
}
            }
          },
      "example" : {
  "blackListPatterns" : [ "...", "..." ],
  "policies" : {
    "property1" : "...",
    "property2" : "..."
  },
  "proxyId" : "...",
  "policiesEntries" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "targetRepoId" : "...",
  "disabled" : true,
  "whiteListPatterns" : [ "...", "..." ],
  "propertiesEntries" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "sourceRepoId" : "...",
  "properties" : {
    "property1" : "...",
    "property2" : "..."
  }
},
      "description" : ""
    }
    ,
    "json_AdminRepositoryConsumer" : {
      "type" : "object",
      "title" : "AdminRepositoryConsumer",
      "required" : ["enabled"],
          "properties" : {
            "description" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "enabled" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            }
          },
      "example" : {
  "description" : "...",
  "id" : "...",
  "enabled" : true
},
      "description" : "AdminRepositoryConsumer"
    }
    ,
    "json_ApplicationRuntimeInfo" : {
      "type" : "object",
      "title" : "ApplicationRuntimeInfo",
      "required" : ["devMode", "javascriptLog", "timestamp", "logMissingI18n"],
          "properties" : {
            "devMode" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "javascriptLog" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "version" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "buildNumber" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "timestamp" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "copyrightRange" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "logMissingI18n" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "baseUrl" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "timestampStr" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "cookieInformation" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_CookieInformation",
"description" : ""
            }
          },
      "example" : {
  "devMode" : true,
  "javascriptLog" : true,
  "version" : "...",
  "buildNumber" : "...",
  "timestamp" : 12345,
  "copyrightRange" : "...",
  "logMissingI18n" : true,
  "baseUrl" : "...",
  "timestampStr" : "...",
  "cookieInformation" : {
    "path" : "...",
    "domain" : "...",
    "secure" : "...",
    "timeout" : "...",
    "rememberMeEnabled" : true
  }
},
      "description" : ""
    }
    ,
    "json_ArchivaRepositoryStatistics" : {
      "type" : "object",
      "title" : "ArchivaRepositoryStatistics",
      "required" : ["totalArtifactCount", "totalArtifactFileSize", "totalFileCount", "totalGroupCount", "totalProjectCount", "newFileCount", "duration"],
          "properties" : {
            "scanEndTime" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "scanStartTime" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "totalArtifactCount" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "totalArtifactFileSize" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "totalFileCount" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "totalGroupCount" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "totalProjectCount" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "newFileCount" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "duration" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "lastScanDate" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "totalCountForType" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "integer"
}
            },
            "customValues" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "integer"
}
            }
          },
      "example" : {
  "scanEndTime" : 12345,
  "scanStartTime" : 12345,
  "totalArtifactCount" : 12345,
  "totalArtifactFileSize" : 12345,
  "totalFileCount" : 12345,
  "totalGroupCount" : 12345,
  "totalProjectCount" : 12345,
  "newFileCount" : 12345,
  "duration" : 12345,
  "lastScanDate" : "...",
  "totalCountForType" : {
    "property1" : 12345,
    "property2" : 12345
  },
  "customValues" : {
    "property1" : 12345,
    "property2" : 12345
  }
},
      "description" : ""
    }
    ,
    "json_ArchivaRuntimeConfiguration" : {
      "type" : "object",
      "title" : "ArchivaRuntimeConfiguration",
          "properties" : {
            "urlFailureCacheConfiguration" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_CacheConfiguration",
"description" : ""
            },
            "fileLockConfiguration" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_FileLockConfiguration",
"description" : ""
            }
          },
      "example" : {
  "urlFailureCacheConfiguration" : {
    "timeToIdleSeconds" : 12345,
    "timeToLiveSeconds" : 12345,
    "maxElementsInMemory" : 12345,
    "maxElementsOnDisk" : 12345
  },
  "fileLockConfiguration" : {
    "lockingTimeout" : 12345,
    "skipLocking" : true
  }
},
      "description" : ""
    }
    ,
    "json_Artifact" : {
      "type" : "object",
      "title" : "Artifact",
          "properties" : {
            "prefix" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "repositoryId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "bundleName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "artifactId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "bundleExportPackage" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "bundleDocUrl" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "bundleVersion" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "groupId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "bundleDescription" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "scope" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "type" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "bundleImportPackage" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "packaging" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "path" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "url" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "context" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "classifier" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "bundleRequireBundle" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "fileExtension" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "bundleExportService" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "version" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "size" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "goals" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "bundleLicense" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "bundleSymbolicName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "prefix" : "...",
  "repositoryId" : "...",
  "bundleName" : "...",
  "artifactId" : "...",
  "bundleExportPackage" : "...",
  "bundleDocUrl" : "...",
  "bundleVersion" : "...",
  "groupId" : "...",
  "bundleDescription" : "...",
  "scope" : "...",
  "type" : "...",
  "bundleImportPackage" : "...",
  "packaging" : "...",
  "path" : "...",
  "url" : "...",
  "context" : "...",
  "classifier" : "...",
  "bundleRequireBundle" : "...",
  "fileExtension" : "...",
  "bundleExportService" : "...",
  "version" : "...",
  "id" : "...",
  "size" : "...",
  "goals" : [ "...", "..." ],
  "bundleLicense" : "...",
  "bundleSymbolicName" : "..."
},
      "description" : ""
    }
    ,
    "json_ArtifactContent" : {
      "type" : "object",
      "title" : "ArtifactContent",
          "properties" : {
            "content" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "repositoryId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "content" : "...",
  "repositoryId" : "..."
},
      "description" : ""
    }
    ,
    "json_ArtifactContentEntry" : {
      "type" : "object",
      "title" : "ArtifactContentEntry",
      "required" : ["file", "depth"],
          "properties" : {
            "path" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "file" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "depth" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "repositoryId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "path" : "...",
  "file" : true,
  "depth" : 12345,
  "repositoryId" : "..."
},
      "description" : ""
    }
    ,
    "json_ArtifactMetadata" : {
      "type" : "object",
      "title" : "ArtifactMetadata",
      "required" : ["size"],
      "allOf" : [
        {
          "$ref" : "#/definitions/json_FacetedMetadata"
        },
        {
          "properties" : {
            "namespace" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "whenGathered" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "md5" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "version" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "checksumTypes" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ChecksumAlgorithm"
}
            },
            "fileLastModified" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "size" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "project" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "projectVersion" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "sha1" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "repositoryId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "checksums" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "example" : {
  "namespace" : "...",
  "whenGathered" : 12345,
  "md5" : "...",
  "version" : "...",
  "checksumTypes" : [ "ASC", "SHA512" ],
  "fileLastModified" : 12345,
  "size" : 12345,
  "project" : "...",
  "projectVersion" : "...",
  "sha1" : "...",
  "repositoryId" : "...",
  "id" : "...",
  "checksums" : {
    "property1" : "...",
    "property2" : "..."
  },
  "facetIds" : [ "...", "..." ],
  "facetList" : [ {
    "name" : "...",
    "facetId" : "..."
  }, {
    "name" : "...",
    "facetId" : "..."
  } ],
  "facets" : {
    "property1" : { },
    "property2" : { }
  }
},
      "description" : ""
    }
    ,
    "json_ArtifactTransferRequest" : {
      "type" : "object",
      "title" : "ArtifactTransferRequest",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_Artifact"
        },
        {
          "properties" : {
            "targetRepositoryId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "targetRepositoryId" : "...",
  "prefix" : "...",
  "repositoryId" : "...",
  "bundleName" : "...",
  "artifactId" : "...",
  "bundleExportPackage" : "...",
  "bundleDocUrl" : "...",
  "bundleVersion" : "...",
  "groupId" : "...",
  "bundleDescription" : "...",
  "scope" : "...",
  "type" : "...",
  "bundleImportPackage" : "...",
  "packaging" : "...",
  "path" : "...",
  "url" : "...",
  "context" : "...",
  "classifier" : "...",
  "bundleRequireBundle" : "...",
  "fileExtension" : "...",
  "bundleExportService" : "...",
  "version" : "...",
  "id" : "...",
  "size" : "...",
  "goals" : [ "...", "..." ],
  "bundleLicense" : "...",
  "bundleSymbolicName" : "..."
},
      "description" : ""
    }
    ,
    "json_BrowseResult" : {
      "type" : "object",
      "title" : "BrowseResult",
          "properties" : {
            "browseResultEntries" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_BrowseResultEntry"
}
            }
          },
      "example" : {
  "browseResultEntries" : [ {
    "name" : "...",
    "project" : true,
    "groupId" : "...",
    "artifactId" : "..."
  }, {
    "name" : "...",
    "project" : true,
    "groupId" : "...",
    "artifactId" : "..."
  } ]
},
      "description" : ""
    }
    ,
    "json_BrowseResultEntry" : {
      "type" : "object",
      "title" : "BrowseResultEntry",
      "required" : ["project"],
          "properties" : {
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "project" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "groupId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "artifactId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "name" : "...",
  "project" : true,
  "groupId" : "...",
  "artifactId" : "..."
},
      "description" : ""
    }
    ,
    "json_CacheConfiguration" : {
      "type" : "object",
      "title" : "CacheConfiguration",
      "required" : ["timeToIdleSeconds", "timeToLiveSeconds", "maxElementsInMemory", "maxElementsOnDisk"],
          "properties" : {
            "timeToIdleSeconds" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "timeToLiveSeconds" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "maxElementsInMemory" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "maxElementsOnDisk" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          },
      "example" : {
  "timeToIdleSeconds" : 12345,
  "timeToLiveSeconds" : 12345,
  "maxElementsInMemory" : 12345,
  "maxElementsOnDisk" : 12345
},
      "description" : ""
    }
    ,
    "json_CacheEntry" : {
      "type" : "object",
      "title" : "CacheEntry",
      "required" : ["size", "cacheHits", "cacheMiss", "inMemorySize"],
          "properties" : {
            "key" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "size" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "cacheHits" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "cacheMiss" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "cacheHitRate" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "inMemorySize" : {
            "readOnly" : false,
"description" : "cache size in kb",
"type" : "integer",
"format" : "int64"
            }
          },
      "example" : {
  "key" : "...",
  "size" : 12345,
  "cacheHits" : 12345,
  "cacheMiss" : 12345,
  "cacheHitRate" : "...",
  "inMemorySize" : 12345
},
      "description" : ""
    }
    ,
    "json_ChecksumAlgorithm" : {
      "type" : "string",
      "title" : "ChecksumAlgorithm",
          "enum" : [
            "MD5",
            "SHA1",
            "SHA256",
            "SHA384",
            "SHA512",
            "ASC"
          ],
      "description" : ""
    }
    ,
    "json_ChecksumSearch" : {
      "type" : "object",
      "title" : "ChecksumSearch",
          "properties" : {
            "repositories" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "checksum" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "repositories" : [ "...", "..." ],
  "checksum" : "..."
},
      "description" : ""
    }
    ,
    "json_CiManagement" : {
      "type" : "object",
      "title" : "CiManagement",
          "properties" : {
            "system" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "url" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "system" : "...",
  "url" : "..."
},
      "description" : ""
    }
    ,
    "json_ConsumerScanningStatistics" : {
      "type" : "object",
      "title" : "ConsumerScanningStatistics",
      "required" : ["count", "time"],
          "properties" : {
            "consumerKey" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "count" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "time" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "average" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "consumerKey" : "...",
  "count" : 12345,
  "time" : 12345,
  "average" : "..."
},
      "description" : ""
    }
    ,
    "json_CookieInformation" : {
      "type" : "object",
      "title" : "CookieInformation",
      "required" : ["rememberMeEnabled"],
          "properties" : {
            "path" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "domain" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "secure" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "timeout" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "rememberMeEnabled" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            }
          },
      "example" : {
  "path" : "...",
  "domain" : "...",
  "secure" : "...",
  "timeout" : "...",
  "rememberMeEnabled" : true
},
      "description" : ""
    }
    ,
    "json_Dependency" : {
      "type" : "object",
      "title" : "Dependency",
      "required" : ["optional"],
          "properties" : {
            "projectId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "artifactId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "optional" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "version" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "type" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "namespace" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "classifier" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "scope" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "systemPath" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "projectId" : "...",
  "artifactId" : "...",
  "optional" : true,
  "version" : "...",
  "type" : "...",
  "namespace" : "...",
  "classifier" : "...",
  "scope" : "...",
  "systemPath" : "..."
},
      "description" : ""
    }
    ,
    "json_Entry" : {
      "type" : "object",
      "title" : "Entry",
          "properties" : {
            "value" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "key" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "value" : "...",
  "key" : "..."
},
      "description" : ""
    }
    ,
    "json_FacetedMetadata" : {
      "type" : "object",
      "title" : "FacetedMetadata",
          "properties" : {
            "facetIds" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "facetList" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_MetadataFacet"
}
            },
            "facets" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "object"
}
            }
          },
      "example" : {
  "facetIds" : [ "...", "..." ],
  "facetList" : [ {
    "name" : "...",
    "facetId" : "..."
  }, {
    "name" : "...",
    "facetId" : "..."
  } ],
  "facets" : {
    "property1" : { },
    "property2" : { }
  }
},
      "description" : ""
    }
    ,
    "json_FileLockConfiguration" : {
      "type" : "object",
      "title" : "FileLockConfiguration",
      "required" : ["lockingTimeout", "skipLocking"],
          "properties" : {
            "lockingTimeout" : {
            "readOnly" : false,
"description" : "Get maximum time to wait to get the file lock (0 infinite).",
"type" : "integer",
"format" : "int32"
            },
            "skipLocking" : {
            "readOnly" : false,
"description" : "Get skipping the locking mechanism.",
"type" : "boolean"
            }
          },
      "example" : {
  "lockingTimeout" : 12345,
  "skipLocking" : true
},
      "description" : "File Locking configuration."
    }
    ,
    "json_FileMetadata" : {
      "type" : "object",
      "title" : "FileMetadata",
      "required" : ["size", "pomFile"],
          "properties" : {
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "size" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "url" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "deleteUrl" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "deleteType" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "errorKey" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "classifier" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "pomFile" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "serverFileName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "packaging" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "name" : "...",
  "size" : 12345,
  "url" : "...",
  "deleteUrl" : "...",
  "deleteType" : "...",
  "errorKey" : "...",
  "classifier" : "...",
  "pomFile" : true,
  "serverFileName" : "...",
  "packaging" : "..."
},
      "description" : ""
    }
    ,
    "json_FileType" : {
      "type" : "object",
      "title" : "FileType",
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "patterns" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          },
      "example" : {
  "id" : "...",
  "patterns" : [ "...", "..." ]
},
      "description" : ""
    }
    ,
    "json_GroupIdList" : {
      "type" : "object",
      "title" : "GroupIdList",
          "properties" : {
            "groupIds" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          },
      "example" : {
  "groupIds" : [ "...", "..." ]
},
      "description" : ""
    }
    ,
    "json_IssueManagement" : {
      "type" : "object",
      "title" : "IssueManagement",
          "properties" : {
            "url" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "system" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "url" : "...",
  "system" : "..."
},
      "description" : ""
    }
    ,
    "json_JavascriptLog" : {
      "type" : "object",
      "title" : "JavascriptLog",
          "properties" : {
            "loggerName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "message" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "loggerName" : "...",
  "message" : "..."
},
      "description" : ""
    }
    ,
    "json_LdapConfiguration" : {
      "type" : "object",
      "title" : "LdapConfiguration",
      "required" : ["port", "ssl", "bindAuthenticatorEnabled", "writable", "useRoleNameAsGroup"],
          "properties" : {
            "hostName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "port" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "ssl" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "baseDn" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "contextFactory" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "bindDn" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "password" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "authenticationMethod" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "extraProperties" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "string"
}
            },
            "bindAuthenticatorEnabled" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "extraPropertiesEntries" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PropertyEntry"
}
            },
            "baseGroupsDn" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "writable" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "useRoleNameAsGroup" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            }
          },
      "example" : {
  "hostName" : "...",
  "port" : 12345,
  "ssl" : true,
  "baseDn" : "...",
  "contextFactory" : "...",
  "bindDn" : "...",
  "password" : "...",
  "authenticationMethod" : "...",
  "extraProperties" : {
    "property1" : "...",
    "property2" : "..."
  },
  "bindAuthenticatorEnabled" : true,
  "extraPropertiesEntries" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "baseGroupsDn" : "...",
  "writable" : true,
  "useRoleNameAsGroup" : true
},
      "description" : ""
    }
    ,
    "json_LdapGroupMapping" : {
      "type" : "object",
      "title" : "LdapGroupMapping",
          "properties" : {
            "roleNames" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "group" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "roleNames" : [ "...", "..." ],
  "group" : "..."
},
      "description" : ""
    }
    ,
    "json_LegacyArtifactPath" : {
      "type" : "object",
      "title" : "LegacyArtifactPath",
          "properties" : {
            "path" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "artifact" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "groupId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "artifactId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "version" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "classifier" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "type" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "path" : "...",
  "artifact" : "...",
  "groupId" : "...",
  "artifactId" : "...",
  "version" : "...",
  "classifier" : "...",
  "type" : "..."
},
      "description" : ""
    }
    ,
    "json_License" : {
      "type" : "object",
      "title" : "License",
          "properties" : {
            "index" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "url" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "index" : 12345,
  "name" : "...",
  "url" : "..."
},
      "description" : ""
    }
    ,
    "json_MailingList" : {
      "type" : "object",
      "title" : "MailingList",
          "properties" : {
            "otherArchives" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "subscribeAddress" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "mainArchiveUrl" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "postAddress" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "unsubscribeAddress" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "index" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          },
      "example" : {
  "otherArchives" : [ "...", "..." ],
  "subscribeAddress" : "...",
  "mainArchiveUrl" : "...",
  "name" : "...",
  "postAddress" : "...",
  "unsubscribeAddress" : "...",
  "index" : 12345
},
      "description" : ""
    }
    ,
    "json_ManagedRepository" : {
      "type" : "object",
      "title" : "ManagedRepository",
      "required" : ["releases", "snapshots", "blockRedeployments", "scanned", "retentionPeriod", "retentionCount", "deleteReleasedSnapshots", "stageRepoNeeded", "resetStats", "skipPackedIndexCreation"],
      "allOf" : [
        {
          "$ref" : "#/definitions/json_AbstractRepository"
        },
        {
          "properties" : {
            "cronExpression" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "location" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "releases" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "snapshots" : {
            "readOnly" : false,
"description" : "Get null",
"type" : "boolean"
            },
            "blockRedeployments" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "stagingRepository" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_ManagedRepository",
"description" : ""
            },
            "scanned" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "retentionPeriod" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "retentionCount" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "deleteReleasedSnapshots" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "stageRepoNeeded" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "resetStats" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "skipPackedIndexCreation" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "example" : {
  "cronExpression" : "...",
  "location" : "...",
  "releases" : true,
  "snapshots" : true,
  "blockRedeployments" : true,
  "stagingRepository" : {
    "cronExpression" : "...",
    "location" : "...",
    "releases" : true,
    "snapshots" : true,
    "blockRedeployments" : true,
    "stagingRepository" : { },
    "scanned" : true,
    "retentionPeriod" : 12345,
    "retentionCount" : 12345,
    "deleteReleasedSnapshots" : true,
    "stageRepoNeeded" : true,
    "resetStats" : true,
    "skipPackedIndexCreation" : true,
    "layout" : "...",
    "type" : "...",
    "indexDirectory" : "...",
    "descriptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "id" : "...",
    "name" : "...",
    "packedIndexDirectory" : "...",
    "description" : "...",
    "names" : {
      "property1" : "...",
      "property2" : "..."
    }
  },
  "scanned" : true,
  "retentionPeriod" : 12345,
  "retentionCount" : 12345,
  "deleteReleasedSnapshots" : true,
  "stageRepoNeeded" : true,
  "resetStats" : true,
  "skipPackedIndexCreation" : true,
  "layout" : "...",
  "type" : "...",
  "indexDirectory" : "...",
  "descriptions" : {
    "property1" : "...",
    "property2" : "..."
  },
  "id" : "...",
  "name" : "...",
  "packedIndexDirectory" : "...",
  "description" : "...",
  "names" : {
    "property1" : "...",
    "property2" : "..."
  }
},
      "description" : ""
    }
    ,
    "json_MetadataAddRequest" : {
      "type" : "object",
      "title" : "MetadataAddRequest",
          "properties" : {
            "groupId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "artifactId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "version" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "metadatas" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "string"
}
            }
          },
      "example" : {
  "groupId" : "...",
  "artifactId" : "...",
  "version" : "...",
  "metadatas" : {
    "property1" : "...",
    "property2" : "..."
  }
},
      "description" : ""
    }
    ,
    "json_MetadataFacet" : {
      "type" : "object",
      "title" : "MetadataFacet",
          "properties" : {
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "facetId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "name" : "...",
  "facetId" : "..."
},
      "description" : ""
    }
    ,
    "json_NetworkConfiguration" : {
      "type" : "object",
      "title" : "NetworkConfiguration",
      "required" : ["maxTotal", "maxTotalPerHost", "usePooling"],
          "properties" : {
            "maxTotal" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "maxTotalPerHost" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "usePooling" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            }
          },
      "example" : {
  "maxTotal" : 12345,
  "maxTotalPerHost" : 12345,
  "usePooling" : true
},
      "description" : ""
    }
    ,
    "json_NetworkProxy" : {
      "type" : "object",
      "title" : "NetworkProxy",
      "required" : ["port", "useNtlm"],
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "protocol" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "host" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "port" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "username" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "password" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "useNtlm" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            }
          },
      "example" : {
  "id" : "...",
  "protocol" : "...",
  "host" : "...",
  "port" : 12345,
  "username" : "...",
  "password" : "...",
  "useNtlm" : true
},
      "description" : ""
    }
    ,
    "json_OrganisationInformation" : {
      "type" : "object",
      "title" : "OrganisationInformation",
          "properties" : {
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "url" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "logoLocation" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "name" : "...",
  "url" : "...",
  "logoLocation" : "..."
},
      "description" : ""
    }
    ,
    "json_Organization" : {
      "type" : "object",
      "title" : "Organization",
          "properties" : {
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "url" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "name" : "...",
  "url" : "..."
},
      "description" : ""
    }
    ,
    "json_PolicyInformation" : {
      "type" : "object",
      "title" : "PolicyInformation",
          "properties" : {
            "options" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PolicyOption"
}
            },
            "defaultOption" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_PolicyOption",
"description" : ""
            },
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "options" : [ {
    "id" : "..."
  }, {
    "id" : "..."
  } ],
  "defaultOption" : {
    "id" : "..."
  },
  "id" : "...",
  "name" : "..."
},
      "description" : ""
    }
    ,
    "json_PolicyOption" : {
      "type" : "object",
      "title" : "PolicyOption",
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "id" : "..."
},
      "description" : ""
    }
    ,
    "json_ProjectVersionMetadata" : {
      "type" : "object",
      "title" : "ProjectVersionMetadata",
      "required" : ["incomplete"],
      "allOf" : [
        {
          "$ref" : "#/definitions/json_FacetedMetadata"
        },
        {
          "properties" : {
            "mailingLists" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_MailingList"
}
            },
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "ciManagement" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_CiManagement",
"description" : ""
            },
            "incomplete" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "properties" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "string"
}
            },
            "scm" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_Scm",
"description" : ""
            },
            "organization" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_Organization",
"description" : ""
            },
            "version" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "licenses" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_License"
}
            },
            "dependencies" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Dependency"
}
            },
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "url" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "issueManagement" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_IssueManagement",
"description" : ""
            },
            "description" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "mailingLists" : [ {
    "otherArchives" : [ "...", "..." ],
    "subscribeAddress" : "...",
    "mainArchiveUrl" : "...",
    "name" : "...",
    "postAddress" : "...",
    "unsubscribeAddress" : "...",
    "index" : 12345
  }, {
    "otherArchives" : [ "...", "..." ],
    "subscribeAddress" : "...",
    "mainArchiveUrl" : "...",
    "name" : "...",
    "postAddress" : "...",
    "unsubscribeAddress" : "...",
    "index" : 12345
  } ],
  "name" : "...",
  "ciManagement" : {
    "system" : "...",
    "url" : "..."
  },
  "incomplete" : true,
  "properties" : {
    "property1" : "...",
    "property2" : "..."
  },
  "scm" : {
    "connection" : "...",
    "url" : "...",
    "developerConnection" : "..."
  },
  "organization" : {
    "name" : "...",
    "url" : "..."
  },
  "version" : "...",
  "licenses" : [ {
    "index" : 12345,
    "name" : "...",
    "url" : "..."
  }, {
    "index" : 12345,
    "name" : "...",
    "url" : "..."
  } ],
  "dependencies" : [ {
    "projectId" : "...",
    "artifactId" : "...",
    "optional" : true,
    "version" : "...",
    "type" : "...",
    "namespace" : "...",
    "classifier" : "...",
    "scope" : "...",
    "systemPath" : "..."
  }, {
    "projectId" : "...",
    "artifactId" : "...",
    "optional" : true,
    "version" : "...",
    "type" : "...",
    "namespace" : "...",
    "classifier" : "...",
    "scope" : "...",
    "systemPath" : "..."
  } ],
  "id" : "...",
  "url" : "...",
  "issueManagement" : {
    "url" : "...",
    "system" : "..."
  },
  "description" : "...",
  "facetIds" : [ "...", "..." ],
  "facetList" : [ {
    "name" : "...",
    "facetId" : "..."
  }, {
    "name" : "...",
    "facetId" : "..."
  } ],
  "facets" : {
    "property1" : { },
    "property2" : { }
  }
},
      "description" : ""
    }
    ,
    "json_PropertyEntry" : {
      "type" : "object",
      "title" : "PropertyEntry",
          "properties" : {
            "key" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "value" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "key" : "...",
  "value" : "..."
},
      "description" : "Bean to expose Map entries as Json"
    }
    ,
    "json_ProxyConnector" : {
      "type" : "object",
      "title" : "ProxyConnector",
      "required" : ["order"],
      "allOf" : [
        {
          "$ref" : "#/definitions/json_AbstractRepositoryConnector"
        },
        {
          "properties" : {
            "order" : {
            "readOnly" : false,
"description" : "Get the order of the proxy connectors. (0 means no order specified)",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "example" : {
  "order" : 12345,
  "blackListPatterns" : [ "...", "..." ],
  "policies" : {
    "property1" : "...",
    "property2" : "..."
  },
  "proxyId" : "...",
  "policiesEntries" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "targetRepoId" : "...",
  "disabled" : true,
  "whiteListPatterns" : [ "...", "..." ],
  "propertiesEntries" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "sourceRepoId" : "...",
  "properties" : {
    "property1" : "...",
    "property2" : "..."
  }
},
      "description" : ""
    }
    ,
    "json_ProxyConnectorRule" : {
      "type" : "object",
      "title" : "ProxyConnectorRule",
          "properties" : {
            "pattern" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "proxyConnectorRuleType" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_ProxyConnectorRuleType",
"description" : ""
            },
            "proxyConnectors" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ProxyConnector"
}
            }
          },
      "example" : {
  "pattern" : "...",
  "proxyConnectorRuleType" : "WHITE_LIST",
  "proxyConnectors" : [ {
    "order" : 12345,
    "blackListPatterns" : [ "...", "..." ],
    "policies" : {
      "property1" : "...",
      "property2" : "..."
    },
    "proxyId" : "...",
    "policiesEntries" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "targetRepoId" : "...",
    "disabled" : true,
    "whiteListPatterns" : [ "...", "..." ],
    "propertiesEntries" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "sourceRepoId" : "...",
    "properties" : {
      "property1" : "...",
      "property2" : "..."
    }
  }, {
    "order" : 12345,
    "blackListPatterns" : [ "...", "..." ],
    "policies" : {
      "property1" : "...",
      "property2" : "..."
    },
    "proxyId" : "...",
    "policiesEntries" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "targetRepoId" : "...",
    "disabled" : true,
    "whiteListPatterns" : [ "...", "..." ],
    "propertiesEntries" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "sourceRepoId" : "...",
    "properties" : {
      "property1" : "...",
      "property2" : "..."
    }
  } ]
},
      "description" : ""
    }
    ,
    "json_ProxyConnectorRuleType" : {
      "type" : "string",
      "title" : "ProxyConnectorRuleType",
          "enum" : [
            "WHITE_LIST",
            "BLACK_LIST"
          ],
      "description" : ""
    }
    ,
    "json_QueueEntry" : {
      "type" : "object",
      "title" : "QueueEntry",
      "required" : ["entriesNumber"],
          "properties" : {
            "key" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "entriesNumber" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          },
      "example" : {
  "key" : "...",
  "entriesNumber" : 12345
},
      "description" : ""
    }
    ,
    "json_RBACManagerImplementationInformation" : {
      "type" : "object",
      "title" : "RBACManagerImplementationInformation",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_AbstractImplementationInformation"
        },
        {
        }
      ],
      "example" : {
  "readOnly" : true,
  "beanId" : "...",
  "descriptionKey" : "..."
},
      "description" : ""
    }
    ,
    "json_RedbackImplementationsInformations" : {
      "type" : "object",
      "title" : "RedbackImplementationsInformations",
          "properties" : {
            "userManagerImplementationInformations" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_UserManagerImplementationInformation"
}
            },
            "rbacManagerImplementationInformations" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RBACManagerImplementationInformation"
}
            }
          },
      "example" : {
  "userManagerImplementationInformations" : [ {
    "readOnly" : true,
    "beanId" : "...",
    "descriptionKey" : "..."
  }, {
    "readOnly" : true,
    "beanId" : "...",
    "descriptionKey" : "..."
  } ],
  "rbacManagerImplementationInformations" : [ {
    "readOnly" : true,
    "beanId" : "...",
    "descriptionKey" : "..."
  }, {
    "readOnly" : true,
    "beanId" : "...",
    "descriptionKey" : "..."
  } ]
},
      "description" : ""
    }
    ,
    "json_RedbackRuntimeConfiguration" : {
      "type" : "object",
      "title" : "RedbackRuntimeConfiguration",
      "required" : ["migratedFromRedbackConfiguration", "useUsersCache"],
          "properties" : {
            "userManagerImpls" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "ldapConfiguration" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_LdapConfiguration",
"description" : ""
            },
            "migratedFromRedbackConfiguration" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "configurationProperties" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "string"
}
            },
            "configurationPropertiesEntries" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PropertyEntry"
}
            },
            "useUsersCache" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "usersCacheConfiguration" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_CacheConfiguration",
"description" : ""
            },
            "rbacManagerImpls" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "ldapGroupMappings" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_LdapGroupMapping"
}
            }
          },
      "example" : {
  "userManagerImpls" : [ "...", "..." ],
  "ldapConfiguration" : {
    "hostName" : "...",
    "port" : 12345,
    "ssl" : true,
    "baseDn" : "...",
    "contextFactory" : "...",
    "bindDn" : "...",
    "password" : "...",
    "authenticationMethod" : "...",
    "extraProperties" : {
      "property1" : "...",
      "property2" : "..."
    },
    "bindAuthenticatorEnabled" : true,
    "extraPropertiesEntries" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "baseGroupsDn" : "...",
    "writable" : true,
    "useRoleNameAsGroup" : true
  },
  "migratedFromRedbackConfiguration" : true,
  "configurationProperties" : {
    "property1" : "...",
    "property2" : "..."
  },
  "configurationPropertiesEntries" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "useUsersCache" : true,
  "usersCacheConfiguration" : {
    "timeToIdleSeconds" : 12345,
    "timeToLiveSeconds" : 12345,
    "maxElementsInMemory" : 12345,
    "maxElementsOnDisk" : 12345
  },
  "rbacManagerImpls" : [ "...", "..." ],
  "ldapGroupMappings" : [ {
    "roleNames" : [ "...", "..." ],
    "group" : "..."
  }, {
    "roleNames" : [ "...", "..." ],
    "group" : "..."
  } ]
},
      "description" : ""
    }
    ,
    "json_RemoteRepository" : {
      "type" : "object",
      "title" : "RemoteRepository",
      "required" : ["timeout", "downloadRemoteIndex", "remoteDownloadTimeout", "downloadRemoteIndexOnStartup"],
      "allOf" : [
        {
          "$ref" : "#/definitions/json_AbstractRepository"
        },
        {
          "properties" : {
            "url" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "userName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "password" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "timeout" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "downloadRemoteIndex" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "remoteIndexUrl" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "remoteDownloadNetworkProxyId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "cronExpression" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "remoteDownloadTimeout" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "downloadRemoteIndexOnStartup" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "extraParameters" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "string"
}
            },
            "extraParametersEntries" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PropertyEntry"
}
            },
            "extraHeaders" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "string"
}
            },
            "extraHeadersEntries" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PropertyEntry"
}
            },
            "checkPath" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "url" : "...",
  "userName" : "...",
  "password" : "...",
  "timeout" : 12345,
  "downloadRemoteIndex" : true,
  "remoteIndexUrl" : "...",
  "remoteDownloadNetworkProxyId" : "...",
  "cronExpression" : "...",
  "remoteDownloadTimeout" : 12345,
  "downloadRemoteIndexOnStartup" : true,
  "extraParameters" : {
    "property1" : "...",
    "property2" : "..."
  },
  "extraParametersEntries" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "extraHeaders" : {
    "property1" : "...",
    "property2" : "..."
  },
  "extraHeadersEntries" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "checkPath" : "...",
  "layout" : "...",
  "type" : "...",
  "indexDirectory" : "...",
  "descriptions" : {
    "property1" : "...",
    "property2" : "..."
  },
  "id" : "...",
  "name" : "...",
  "packedIndexDirectory" : "...",
  "description" : "...",
  "names" : {
    "property1" : "...",
    "property2" : "..."
  }
},
      "description" : ""
    }
    ,
    "json_RepositoryGroup" : {
      "type" : "object",
      "title" : "RepositoryGroup",
      "required" : ["mergedIndexTtl"],
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Get the id of the repository group.",
"type" : "string"
            },
            "repositories" : {
            "readOnly" : false,
"description" : "Method getRepositories.",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "mergedIndexPath" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "mergedIndexTtl" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "cronExpression" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "id" : "...",
  "repositories" : [ "...", "..." ],
  "mergedIndexPath" : "...",
  "mergedIndexTtl" : 12345,
  "cronExpression" : "..."
},
      "description" : ""
    }
    ,
    "json_RepositoryProblemFacet" : {
      "type" : "object",
      "title" : "RepositoryProblemFacet",
          "properties" : {
            "project" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "facetId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "problem" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "namespace" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "message" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "version" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "repositoryId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "project" : "...",
  "name" : "...",
  "id" : "...",
  "facetId" : "...",
  "problem" : "...",
  "namespace" : "...",
  "message" : "...",
  "version" : "...",
  "repositoryId" : "..."
},
      "description" : ""
    }
    ,
    "json_RepositoryScanStatistics" : {
      "type" : "object",
      "title" : "RepositoryScanStatistics",
      "required" : ["newFileCount", "totalSize", "duration", "totalFileCount"],
          "properties" : {
            "newFileCount" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "whenGathered" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "totalSize" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "repositoryId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "duration" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "totalFileCount" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            }
          },
      "example" : {
  "newFileCount" : 12345,
  "whenGathered" : 12345,
  "totalSize" : 12345,
  "repositoryId" : "...",
  "duration" : 12345,
  "totalFileCount" : 12345
},
      "description" : ""
    }
    ,
    "json_RepositoryScannerStatistics" : {
      "type" : "object",
      "title" : "RepositoryScannerStatistics",
      "required" : ["totalFileCount", "newFileCount"],
          "properties" : {
            "managedRepository" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_ManagedRepository",
"description" : ""
            },
            "consumerScanningStatistics" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ConsumerScanningStatistics"
}
            },
            "totalFileCount" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "newFileCount" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            }
          },
      "example" : {
  "managedRepository" : {
    "cronExpression" : "...",
    "location" : "...",
    "releases" : true,
    "snapshots" : true,
    "blockRedeployments" : true,
    "stagingRepository" : { },
    "scanned" : true,
    "retentionPeriod" : 12345,
    "retentionCount" : 12345,
    "deleteReleasedSnapshots" : true,
    "stageRepoNeeded" : true,
    "resetStats" : true,
    "skipPackedIndexCreation" : true,
    "layout" : "...",
    "type" : "...",
    "indexDirectory" : "...",
    "descriptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "id" : "...",
    "name" : "...",
    "packedIndexDirectory" : "...",
    "description" : "...",
    "names" : {
      "property1" : "...",
      "property2" : "..."
    }
  },
  "consumerScanningStatistics" : [ {
    "consumerKey" : "...",
    "count" : 12345,
    "time" : 12345,
    "average" : "..."
  }, {
    "consumerKey" : "...",
    "count" : 12345,
    "time" : 12345,
    "average" : "..."
  } ],
  "totalFileCount" : 12345,
  "newFileCount" : 12345
},
      "description" : ""
    }
    ,
    "json_RepositoryStatistics" : {
      "type" : "object",
      "title" : "RepositoryStatistics",
      "required" : ["duration", "totalArtifactFileSize", "totalArtifactCount", "totalGroupCount", "totalProjectCount", "newFileCount", "totalFileCount"],
          "properties" : {
            "totalCountForType" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "integer"
}
            },
            "duration" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "totalArtifactFileSize" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "totalArtifactCount" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "repositoryId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "totalGroupCount" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "totalProjectCount" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "scanStartTime" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "newFileCount" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "scanEndTime" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "totalFileCount" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            }
          },
      "example" : {
  "totalCountForType" : {
    "property1" : 12345,
    "property2" : 12345
  },
  "duration" : 12345,
  "totalArtifactFileSize" : 12345,
  "totalArtifactCount" : 12345,
  "repositoryId" : "...",
  "totalGroupCount" : 12345,
  "totalProjectCount" : 12345,
  "scanStartTime" : 12345,
  "newFileCount" : 12345,
  "scanEndTime" : 12345,
  "totalFileCount" : 12345
},
      "description" : ""
    }
    ,
    "json_Scm" : {
      "type" : "object",
      "title" : "Scm",
          "properties" : {
            "connection" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "url" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "developerConnection" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "connection" : "...",
  "url" : "...",
  "developerConnection" : "..."
},
      "description" : ""
    }
    ,
    "json_SearchRequest" : {
      "type" : "object",
      "title" : "SearchRequest",
      "required" : ["includePomArtifacts", "pageSize", "selectedPage"],
          "properties" : {
            "groupId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "artifactId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "version" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "packaging" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "className" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "repositories" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "bundleVersion" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "bundleSymbolicName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "bundleExportPackage" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "bundleExportService" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "classifier" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "includePomArtifacts" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "queryTerms" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "bundleImportPackage" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "bundleRequireBundle" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "pageSize" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "selectedPage" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          },
      "example" : {
  "groupId" : "...",
  "artifactId" : "...",
  "version" : "...",
  "packaging" : "...",
  "className" : "...",
  "repositories" : [ "...", "..." ],
  "bundleVersion" : "...",
  "bundleSymbolicName" : "...",
  "bundleExportPackage" : "...",
  "bundleExportService" : "...",
  "classifier" : "...",
  "includePomArtifacts" : true,
  "queryTerms" : "...",
  "bundleImportPackage" : "...",
  "bundleRequireBundle" : "...",
  "pageSize" : 12345,
  "selectedPage" : 12345
},
      "description" : ""
    }
    ,
    "json_StringList" : {
      "type" : "object",
      "title" : "StringList",
          "properties" : {
            "strings" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          },
      "example" : {
  "strings" : [ "...", "..." ]
},
      "description" : "jaxrs fail to return List&lt;String&gt; so use this contains for rest services returning that"
    }
    ,
    "json_TreeEntry" : {
      "type" : "object",
      "title" : "TreeEntry",
          "properties" : {
            "artifact" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_Artifact",
"description" : ""
            },
            "childs" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_TreeEntry"
}
            }
          },
      "example" : {
  "artifact" : {
    "prefix" : "...",
    "repositoryId" : "...",
    "bundleName" : "...",
    "artifactId" : "...",
    "bundleExportPackage" : "...",
    "bundleDocUrl" : "...",
    "bundleVersion" : "...",
    "groupId" : "...",
    "bundleDescription" : "...",
    "scope" : "...",
    "type" : "...",
    "bundleImportPackage" : "...",
    "packaging" : "...",
    "path" : "...",
    "url" : "...",
    "context" : "...",
    "classifier" : "...",
    "bundleRequireBundle" : "...",
    "fileExtension" : "...",
    "bundleExportService" : "...",
    "version" : "...",
    "id" : "...",
    "size" : "...",
    "goals" : [ "...", "..." ],
    "bundleLicense" : "...",
    "bundleSymbolicName" : "..."
  },
  "childs" : [ {
    "artifact" : {
      "prefix" : "...",
      "repositoryId" : "...",
      "bundleName" : "...",
      "artifactId" : "...",
      "bundleExportPackage" : "...",
      "bundleDocUrl" : "...",
      "bundleVersion" : "...",
      "groupId" : "...",
      "bundleDescription" : "...",
      "scope" : "...",
      "type" : "...",
      "bundleImportPackage" : "...",
      "packaging" : "...",
      "path" : "...",
      "url" : "...",
      "context" : "...",
      "classifier" : "...",
      "bundleRequireBundle" : "...",
      "fileExtension" : "...",
      "bundleExportService" : "...",
      "version" : "...",
      "id" : "...",
      "size" : "...",
      "goals" : [ "...", "..." ],
      "bundleLicense" : "...",
      "bundleSymbolicName" : "..."
    },
    "childs" : [ { }, { } ]
  }, {
    "artifact" : {
      "prefix" : "...",
      "repositoryId" : "...",
      "bundleName" : "...",
      "artifactId" : "...",
      "bundleExportPackage" : "...",
      "bundleDocUrl" : "...",
      "bundleVersion" : "...",
      "groupId" : "...",
      "bundleDescription" : "...",
      "scope" : "...",
      "type" : "...",
      "bundleImportPackage" : "...",
      "packaging" : "...",
      "path" : "...",
      "url" : "...",
      "context" : "...",
      "classifier" : "...",
      "bundleRequireBundle" : "...",
      "fileExtension" : "...",
      "bundleExportService" : "...",
      "version" : "...",
      "id" : "...",
      "size" : "...",
      "goals" : [ "...", "..." ],
      "bundleLicense" : "...",
      "bundleSymbolicName" : "..."
    },
    "childs" : [ { }, { } ]
  } ]
},
      "description" : ""
    }
    ,
    "json_UiConfiguration" : {
      "type" : "object",
      "title" : "UiConfiguration",
      "required" : ["showFindArtifacts", "appletFindEnabled", "disableEasterEggs", "disableRegistration"],
          "properties" : {
            "showFindArtifacts" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "appletFindEnabled" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "disableEasterEggs" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "applicationUrl" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "disableRegistration" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            }
          },
      "example" : {
  "showFindArtifacts" : true,
  "appletFindEnabled" : true,
  "disableEasterEggs" : true,
  "applicationUrl" : "...",
  "disableRegistration" : true
},
      "description" : ""
    }
    ,
    "json_UserManagerImplementationInformation" : {
      "type" : "object",
      "title" : "UserManagerImplementationInformation",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_AbstractImplementationInformation"
        },
        {
        }
      ],
      "example" : {
  "readOnly" : true,
  "beanId" : "...",
  "descriptionKey" : "..."
},
      "description" : ""
    }
    ,
    "json_VersionsList" : {
      "type" : "object",
      "title" : "VersionsList",
          "properties" : {
            "versions" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          },
      "example" : {
  "versions" : [ "...", "..." ]
},
      "description" : ""
    }
    ,
    "xml_ns0_abstractRepositoryConnector" : {
      "type" : "object",
      "title" : "abstractRepositoryConnector",
      "required" : ["disabled"],
      "allOf" : [
        {
          "properties" : {
            "blackListPatterns" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "disabled" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "policies" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "policiesEntries" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_propertyEntry"
}
            },
            "properties" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "propertiesEntries" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_propertyEntry"
}
            },
            "proxyId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "sourceRepoId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "targetRepoId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "whiteListPatterns" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_abstractRepository" : {
      "type" : "object",
      "title" : "abstractRepository",
      "allOf" : [
        {
          "properties" : {
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "indexDirectory" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "layout" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "packedIndexDirectory" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "type" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_archivaRuntimeConfiguration" : {
      "type" : "object",
      "xml" : {
        "name" : "archivaRuntimeConfiguration",
        "namespace" : ""
      },
      "title" : "archivaRuntimeConfiguration",
      "allOf" : [
        {
          "properties" : {
            "fileLockConfiguration" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_fileLockConfiguration",
"description" : ""
            },
            "urlFailureCacheConfiguration" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_cacheConfiguration",
"description" : ""
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_cacheConfiguration" : {
      "type" : "object",
      "xml" : {
        "name" : "cacheConfiguration",
        "namespace" : ""
      },
      "title" : "cacheConfiguration",
      "required" : ["maxElementsInMemory", "maxElementsOnDisk", "timeToIdleSeconds", "timeToLiveSeconds"],
      "allOf" : [
        {
          "properties" : {
            "maxElementsInMemory" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "maxElementsOnDisk" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "timeToIdleSeconds" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "timeToLiveSeconds" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_fileLockConfiguration" : {
      "type" : "object",
      "xml" : {
        "name" : "fileLockConfiguration",
        "namespace" : ""
      },
      "title" : "fileLockConfiguration",
      "required" : ["lockingTimeout", "skipLocking"],
      "allOf" : [
        {
          "properties" : {
            "lockingTimeout" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Get maximum time to wait to get the file lock (0 infinite).",
"type" : "integer",
"format" : "int32"
            },
            "skipLocking" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Get skipping the locking mechanism.",
"type" : "boolean"
            }
          }
        }
      ],
      "description" : "File Locking configuration."
    }
    ,
    "xml_ns0_fileType" : {
      "type" : "object",
      "xml" : {
        "name" : "fileType",
        "namespace" : ""
      },
      "title" : "fileType",
      "allOf" : [
        {
          "properties" : {
            "id" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "patterns" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_ldapConfiguration" : {
      "type" : "object",
      "xml" : {
        "name" : "ldapConfiguration",
        "namespace" : ""
      },
      "title" : "ldapConfiguration",
      "required" : ["bindAuthenticatorEnabled", "port", "ssl", "useRoleNameAsGroup", "writable"],
      "allOf" : [
        {
          "properties" : {
            "authenticationMethod" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "baseDn" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "baseGroupsDn" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "bindAuthenticatorEnabled" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "bindDn" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "contextFactory" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "extraProperties" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "extraPropertiesEntries" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_propertyEntry"
}
            },
            "hostName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "password" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "port" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "ssl" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "useRoleNameAsGroup" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "writable" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_ldapGroupMapping" : {
      "type" : "object",
      "title" : "ldapGroupMapping",
      "allOf" : [
        {
          "properties" : {
            "group" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "roleNames" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_legacyArtifactPath" : {
      "type" : "object",
      "xml" : {
        "name" : "legacyArtifactPath",
        "namespace" : ""
      },
      "title" : "legacyArtifactPath",
      "allOf" : [
        {
          "properties" : {
            "artifact" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "artifactId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "groupId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "path" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_managedRepository" : {
      "type" : "object",
      "xml" : {
        "name" : "managedRepository",
        "namespace" : ""
      },
      "title" : "managedRepository",
      "required" : ["blockRedeployments", "deleteReleasedSnapshots", "releases", "resetStats", "retentionCount", "retentionPeriod", "scanned", "skipPackedIndexCreation", "snapshots", "stageRepoNeeded"],
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_abstractRepository"
        },
        {
          "properties" : {
            "blockRedeployments" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "cronExpression" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "deleteReleasedSnapshots" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "location" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "releases" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "resetStats" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "retentionCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "retentionPeriod" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "scanned" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "skipPackedIndexCreation" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "snapshots" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Get null",
"type" : "boolean"
            },
            "stageRepoNeeded" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "stagingRepository" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_managedRepository",
"description" : ""
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_networkConfiguration" : {
      "type" : "object",
      "xml" : {
        "name" : "networkConfiguration",
        "namespace" : ""
      },
      "title" : "networkConfiguration",
      "required" : ["maxTotal", "maxTotalPerHost", "usePooling"],
      "allOf" : [
        {
          "properties" : {
            "maxTotal" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "maxTotalPerHost" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "usePooling" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_networkProxy" : {
      "type" : "object",
      "xml" : {
        "name" : "networkProxy",
        "namespace" : ""
      },
      "title" : "networkProxy",
      "required" : ["port", "useNtlm"],
      "allOf" : [
        {
          "properties" : {
            "host" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "password" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "port" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "protocol" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "useNtlm" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "username" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_organisationInformation" : {
      "type" : "object",
      "xml" : {
        "name" : "organisationInformation",
        "namespace" : ""
      },
      "title" : "organisationInformation",
      "allOf" : [
        {
          "properties" : {
            "logoLocation" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "url" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_propertyEntry" : {
      "type" : "object",
      "xml" : {
        "name" : "propertyEntry",
        "namespace" : ""
      },
      "title" : "propertyEntry",
      "allOf" : [
        {
          "properties" : {
            "key" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "value" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "Bean to expose Map entries as Json"
    }
    ,
    "xml_ns0_proxyConnector" : {
      "type" : "object",
      "xml" : {
        "name" : "proxyConnector",
        "namespace" : ""
      },
      "title" : "proxyConnector",
      "required" : ["order"],
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_abstractRepositoryConnector"
        },
        {
          "properties" : {
            "order" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Get the order of the proxy connectors. (0 means no order specified)",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_proxyConnectorRule" : {
      "type" : "object",
      "xml" : {
        "name" : "proxyConnectorRule",
        "namespace" : ""
      },
      "title" : "proxyConnectorRule",
      "allOf" : [
        {
          "properties" : {
            "pattern" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "proxyConnectorRuleType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_proxyConnectorRuleType",
"description" : ""
            },
            "proxyConnectors" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_proxyConnector"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_redbackRuntimeConfiguration" : {
      "type" : "object",
      "xml" : {
        "name" : "redbackRuntimeConfiguration",
        "namespace" : ""
      },
      "title" : "redbackRuntimeConfiguration",
      "required" : ["migratedFromRedbackConfiguration", "useUsersCache"],
      "allOf" : [
        {
          "properties" : {
            "configurationProperties" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "configurationPropertiesEntries" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_propertyEntry"
}
            },
            "ldapConfiguration" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_ldapConfiguration",
"description" : ""
            },
            "ldapGroupMappings" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_ldapGroupMapping"
}
            },
            "migratedFromRedbackConfiguration" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "rbacManagerImpls" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "useUsersCache" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "userManagerImpls" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "usersCacheConfiguration" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_cacheConfiguration",
"description" : ""
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_remoteRepository" : {
      "type" : "object",
      "xml" : {
        "name" : "remoteRepository",
        "namespace" : ""
      },
      "title" : "remoteRepository",
      "required" : ["downloadRemoteIndex", "downloadRemoteIndexOnStartup", "remoteDownloadTimeout", "timeout"],
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_abstractRepository"
        },
        {
          "properties" : {
            "checkPath" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "cronExpression" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "downloadRemoteIndex" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "downloadRemoteIndexOnStartup" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "extraHeaders" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "extraHeadersEntries" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_propertyEntry"
}
            },
            "extraParameters" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "extraParametersEntries" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_propertyEntry"
}
            },
            "password" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "remoteDownloadNetworkProxyId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "remoteDownloadTimeout" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "remoteIndexUrl" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "timeout" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "url" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "userName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_repositoryGroup" : {
      "type" : "object",
      "xml" : {
        "name" : "repositoryGroup",
        "namespace" : ""
      },
      "title" : "repositoryGroup",
      "required" : ["mergedIndexTtl"],
      "allOf" : [
        {
          "properties" : {
            "cronExpression" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Get the id of the repository group.",
"type" : "string"
            },
            "mergedIndexPath" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "mergedIndexTtl" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "repositories" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Method getRepositories.",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_uiConfiguration" : {
      "type" : "object",
      "xml" : {
        "name" : "uiConfiguration",
        "namespace" : ""
      },
      "title" : "uiConfiguration",
      "required" : ["appletFindEnabled", "disableEasterEggs", "disableRegistration", "showFindArtifacts"],
      "allOf" : [
        {
          "properties" : {
            "appletFindEnabled" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "applicationUrl" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "disableEasterEggs" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "disableRegistration" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "showFindArtifacts" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_checksumAlgorithm" : {
      "type" : "string",
      "title" : "checksumAlgorithm",
          "enum" : [
            "MD5",
            "SHA1",
            "SHA256",
            "SHA384",
            "SHA512",
            "ASC"
          ],
      "description" : ""
    }
    ,
    "xml_ns0_artifact" : {
      "type" : "object",
      "xml" : {
        "name" : "artifact",
        "namespace" : ""
      },
      "title" : "artifact",
      "allOf" : [
        {
          "properties" : {
            "artifactId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "bundleDescription" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "bundleDocUrl" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "bundleExportPackage" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "bundleExportService" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "bundleImportPackage" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "bundleLicense" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "bundleName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "bundleRequireBundle" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "bundleSymbolicName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "bundleVersion" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "classifier" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "context" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "fileExtension" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "goals" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "groupId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "packaging" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "path" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "prefix" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "repositoryId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "scope" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "size" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "type" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "url" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "version" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_treeEntry" : {
      "type" : "object",
      "xml" : {
        "name" : "treeEntry",
        "namespace" : ""
      },
      "title" : "treeEntry",
      "allOf" : [
        {
          "properties" : {
            "artifact" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_artifact",
"description" : ""
            },
            "childs" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_treeEntry"
}
            },
            "parent" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_treeEntry",
"description" : ""
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_artifactMetadata" : {
      "type" : "object",
      "xml" : {
        "name" : "artifactMetadata",
        "namespace" : ""
      },
      "title" : "artifactMetadata",
      "required" : ["size"],
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_facetedMetadata"
        },
        {
          "properties" : {
            "checksums" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "md5" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "namespace" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "project" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "projectVersion" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "repositoryId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "sha1" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "size" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "version" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "whenGathered" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_ciManagement" : {
      "type" : "object",
      "xml" : {
        "name" : "ciManagement",
        "namespace" : ""
      },
      "title" : "ciManagement",
      "allOf" : [
        {
          "properties" : {
            "system" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "url" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_dependency" : {
      "type" : "object",
      "xml" : {
        "name" : "dependency",
        "namespace" : ""
      },
      "title" : "dependency",
      "required" : ["optional"],
      "allOf" : [
        {
          "properties" : {
            "artifactId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "classifier" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "namespace" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "optional" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "projectId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "scope" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "systemPath" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "type" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "version" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_facetedMetadata" : {
      "type" : "object",
      "title" : "facetedMetadata",
      "allOf" : [
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_issueManagement" : {
      "type" : "object",
      "xml" : {
        "name" : "issueManagement",
        "namespace" : ""
      },
      "title" : "issueManagement",
      "allOf" : [
        {
          "properties" : {
            "system" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "url" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_license" : {
      "type" : "object",
      "xml" : {
        "name" : "license",
        "namespace" : ""
      },
      "title" : "license",
      "allOf" : [
        {
          "properties" : {
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "url" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_mailingList" : {
      "type" : "object",
      "xml" : {
        "name" : "mailingList",
        "namespace" : ""
      },
      "title" : "mailingList",
      "allOf" : [
        {
          "properties" : {
            "index" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "mainArchiveUrl" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "otherArchives" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "postAddress" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "subscribeAddress" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "unsubscribeAddress" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_organization" : {
      "type" : "object",
      "xml" : {
        "name" : "organization",
        "namespace" : ""
      },
      "title" : "organization",
      "allOf" : [
        {
          "properties" : {
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "url" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_projectVersionMetadata" : {
      "type" : "object",
      "xml" : {
        "name" : "projectVersionMetadata",
        "namespace" : ""
      },
      "title" : "projectVersionMetadata",
      "required" : ["incomplete"],
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_facetedMetadata"
        },
        {
          "properties" : {
            "ciManagement" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_ciManagement",
"description" : ""
            },
            "dependencies" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_dependency"
}
            },
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "incomplete" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "issueManagement" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_issueManagement",
"description" : ""
            },
            "licenses" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_license"
}
            },
            "mailingLists" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_mailingList"
}
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "organization" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_organization",
"description" : ""
            },
            "scm" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_scm",
"description" : ""
            },
            "url" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_scm" : {
      "type" : "object",
      "xml" : {
        "name" : "scm",
        "namespace" : ""
      },
      "title" : "scm",
      "allOf" : [
        {
          "properties" : {
            "connection" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "developerConnection" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "url" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_repositoryProblemFacet" : {
      "type" : "object",
      "title" : "repositoryProblemFacet",
      "allOf" : [
        {
          "properties" : {
            "id" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "message" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "namespace" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "problem" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "project" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "repositoryId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "version" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_repositoryStatistics" : {
      "type" : "object",
      "title" : "repositoryStatistics",
      "required" : ["newFileCount", "totalArtifactCount", "totalArtifactFileSize", "totalFileCount", "totalGroupCount", "totalProjectCount"],
      "allOf" : [
        {
          "properties" : {
            "newFileCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "totalArtifactCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "totalArtifactFileSize" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "totalFileCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "totalGroupCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "totalProjectCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_policyOption" : {
      "type" : "object",
      "title" : "policyOption",
      "allOf" : [
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_proxyConnectorRuleType" : {
      "type" : "string",
      "title" : "proxyConnectorRuleType",
          "enum" : [
            "WHITE_LIST",
            "BLACK_LIST"
          ],
      "description" : ""
    }
    ,
    "xml_ns0_repositoryScanStatistics" : {
      "type" : "object",
      "xml" : {
        "name" : "repositoryScanStatistics",
        "namespace" : ""
      },
      "title" : "repositoryScanStatistics",
      "allOf" : [
        {
          "properties" : {
            "repositoryId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_abstractImplementationInformation" : {
      "type" : "object",
      "title" : "abstractImplementationInformation",
      "required" : ["readOnly"],
      "allOf" : [
        {
          "properties" : {
            "beanId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "descriptionKey" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "readOnly" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_adminRepositoryConsumer" : {
      "type" : "object",
      "xml" : {
        "name" : "adminRepositoryConsumer",
        "namespace" : ""
      },
      "title" : "adminRepositoryConsumer",
      "required" : ["enabled"],
      "allOf" : [
        {
          "properties" : {
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "enabled" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : "AdminRepositoryConsumer"
    }
    ,
    "xml_ns0_archivaRepositoryStatistics" : {
      "type" : "object",
      "xml" : {
        "name" : "archivaRepositoryStatistics",
        "namespace" : ""
      },
      "title" : "archivaRepositoryStatistics",
      "required" : ["duration", "newFileCount", "totalArtifactCount", "totalArtifactFileSize", "totalFileCount", "totalGroupCount", "totalProjectCount"],
      "allOf" : [
        {
          "properties" : {
            "customValues" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "duration" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "lastScanDate" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "newFileCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "scanEndTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "scanStartTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "totalArtifactCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "totalArtifactFileSize" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "totalCountForType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "totalFileCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "totalGroupCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "totalProjectCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_artifactContent" : {
      "type" : "object",
      "xml" : {
        "name" : "artifactContent",
        "namespace" : ""
      },
      "title" : "artifactContent",
      "allOf" : [
        {
          "properties" : {
            "content" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "repositoryId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_artifactContentEntry" : {
      "type" : "object",
      "xml" : {
        "name" : "artifactContentEntry",
        "namespace" : ""
      },
      "title" : "artifactContentEntry",
      "required" : ["depth", "file"],
      "allOf" : [
        {
          "properties" : {
            "depth" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "file" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "path" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "repositoryId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_artifactTransferRequest" : {
      "type" : "object",
      "xml" : {
        "name" : "artifactTransferRequest",
        "namespace" : ""
      },
      "title" : "artifactTransferRequest",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_artifact"
        },
        {
          "properties" : {
            "targetRepositoryId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_browseResult" : {
      "type" : "object",
      "xml" : {
        "name" : "browseResult",
        "namespace" : ""
      },
      "title" : "browseResult",
      "allOf" : [
        {
          "properties" : {
            "browseResultEntries" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_browseResultEntry"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_browseResultEntry" : {
      "type" : "object",
      "xml" : {
        "name" : "browseResultEntry",
        "namespace" : ""
      },
      "title" : "browseResultEntry",
      "required" : ["project"],
      "allOf" : [
        {
          "properties" : {
            "artifactId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "groupId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "project" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_cacheEntry" : {
      "type" : "object",
      "xml" : {
        "name" : "cacheEntry",
        "namespace" : ""
      },
      "title" : "cacheEntry",
      "required" : ["cacheHits", "cacheMiss", "inMemorySize", "size"],
      "allOf" : [
        {
          "properties" : {
            "cacheHitRate" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "cacheHits" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "cacheMiss" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "inMemorySize" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "cache size in kb",
"type" : "integer",
"format" : "int64"
            },
            "key" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "size" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_checksumSearch" : {
      "type" : "object",
      "title" : "checksumSearch",
      "allOf" : [
        {
          "properties" : {
            "checksum" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "repositories" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_consumerScanningStatistics" : {
      "type" : "object",
      "xml" : {
        "name" : "consumerScanningStatistics",
        "namespace" : ""
      },
      "title" : "consumerScanningStatistics",
      "required" : ["count", "time"],
      "allOf" : [
        {
          "properties" : {
            "average" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "consumerKey" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "count" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "time" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_entry" : {
      "type" : "object",
      "title" : "entry",
      "allOf" : [
        {
          "properties" : {
            "key" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "value" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_groupIdList" : {
      "type" : "object",
      "xml" : {
        "name" : "groupIdList",
        "namespace" : ""
      },
      "title" : "groupIdList",
      "allOf" : [
        {
          "properties" : {
            "groupIds" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_metadataAddRequest" : {
      "type" : "object",
      "xml" : {
        "name" : "metadataAddRequest",
        "namespace" : ""
      },
      "title" : "metadataAddRequest",
      "allOf" : [
        {
          "properties" : {
            "artifactId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "groupId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "metadatas" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "version" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_policyInformation" : {
      "type" : "object",
      "xml" : {
        "name" : "policyInformation",
        "namespace" : ""
      },
      "title" : "policyInformation",
      "allOf" : [
        {
          "properties" : {
            "defaultOption" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "options" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_queueEntry" : {
      "type" : "object",
      "xml" : {
        "name" : "queueEntry",
        "namespace" : ""
      },
      "title" : "queueEntry",
      "required" : ["entriesNumber"],
      "allOf" : [
        {
          "properties" : {
            "entriesNumber" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "key" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_RBACManagerImplementationInformation" : {
      "type" : "object",
      "xml" : {
        "name" : "rbacManagerImplementationInformation",
        "namespace" : ""
      },
      "title" : "RBACManagerImplementationInformation",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_abstractImplementationInformation"
        },
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_redbackImplementationsInformations" : {
      "type" : "object",
      "xml" : {
        "name" : "redbackImplementationsInformations",
        "namespace" : ""
      },
      "title" : "redbackImplementationsInformations",
      "allOf" : [
        {
          "properties" : {
            "rbacManagerImplementationInformations" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_RBACManagerImplementationInformation"
}
            },
            "userManagerImplementationInformations" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_userManagerImplementationInformation"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_repositoryScannerStatistics" : {
      "type" : "object",
      "xml" : {
        "name" : "repositoryScannerStatistics",
        "namespace" : ""
      },
      "title" : "repositoryScannerStatistics",
      "required" : ["newFileCount", "totalFileCount"],
      "allOf" : [
        {
          "properties" : {
            "consumerScanningStatistics" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_consumerScanningStatistics"
}
            },
            "managedRepository" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_managedRepository",
"description" : ""
            },
            "newFileCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "totalFileCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_searchRequest" : {
      "type" : "object",
      "xml" : {
        "name" : "searchRequest",
        "namespace" : ""
      },
      "title" : "searchRequest",
      "required" : ["includePomArtifacts", "pageSize", "selectedPage"],
      "allOf" : [
        {
          "properties" : {
            "artifactId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "bundleExportPackage" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "bundleExportService" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "bundleImportPackage" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "bundleRequireBundle" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "bundleSymbolicName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "bundleVersion" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "className" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "classifier" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "groupId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "includePomArtifacts" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "packaging" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "pageSize" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "queryTerms" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "repositories" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "selectedPage" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "version" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_stringList" : {
      "type" : "object",
      "xml" : {
        "name" : "stringList",
        "namespace" : ""
      },
      "title" : "stringList",
      "allOf" : [
        {
          "properties" : {
            "strings" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "description" : "jaxrs fail to return List&lt;String&gt; so use this contains for rest services returning that"
    }
    ,
    "xml_ns0_userManagerImplementationInformation" : {
      "type" : "object",
      "xml" : {
        "name" : "userManagerImplementationInformation",
        "namespace" : ""
      },
      "title" : "userManagerImplementationInformation",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_abstractImplementationInformation"
        },
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_versionsList" : {
      "type" : "object",
      "xml" : {
        "name" : "versionsList",
        "namespace" : ""
      },
      "title" : "versionsList",
      "allOf" : [
        {
          "properties" : {
            "versions" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_applicationRuntimeInfo" : {
      "type" : "object",
      "xml" : {
        "name" : "applicationRuntimeInfo",
        "namespace" : ""
      },
      "title" : "applicationRuntimeInfo",
      "required" : ["devMode", "javascriptLog", "logMissingI18n", "timestamp"],
      "allOf" : [
        {
          "properties" : {
            "baseUrl" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "buildNumber" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "cookieInformation" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_cookieInformation",
"description" : ""
            },
            "copyrightRange" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "devMode" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "javascriptLog" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "logMissingI18n" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "timestamp" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "timestampStr" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "version" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_cookieInformation" : {
      "type" : "object",
      "title" : "cookieInformation",
      "required" : ["rememberMeEnabled"],
      "allOf" : [
        {
          "properties" : {
            "domain" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "path" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "rememberMeEnabled" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "secure" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "timeout" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_fileMetadata" : {
      "type" : "object",
      "xml" : {
        "name" : "fileMetadata",
        "namespace" : ""
      },
      "title" : "fileMetadata",
      "required" : ["pomFile", "size"],
      "allOf" : [
        {
          "properties" : {
            "classifier" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "deleteType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "deleteUrl" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "errorKey" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "packaging" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "pomFile" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "serverFileName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "size" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "url" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_javascriptLog" : {
      "type" : "object",
      "xml" : {
        "name" : "javascriptLog",
        "namespace" : ""
      },
      "title" : "javascriptLog",
      "allOf" : [
        {
          "properties" : {
            "loggerName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "message" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
  },
  "paths": {
    "\/archivaAdministrationService/addFileType" : {
      "post" : {
        "tags" : [ "ArchivaAdministrationService" ],
        "operationId" : "addFileType",
        "consumes" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "required" : false,
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_FileType",
"description" : ""
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "description" : "Success"
          }
        }
      }
    }
    ,
    "\/archivaAdministrationService/addFileTypePattern" : {
      "get" : {
        "tags" : [ "ArchivaAdministrationService" ],
        "operationId" : "addFileTypePattern",
        "produces" : [ "text/plain", "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "fileTypeId",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "pattern",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/archivaAdministrationService/applicationUrl" : {
      "get" : {
        "tags" : [ "ArchivaAdministrationService" ],
        "operationId" : "getApplicationUrl",
        "produces" : [ "text/plain" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/archivaAdministrationService/deleteLegacyArtifactPath" : {
      "get" : {
        "tags" : [ "ArchivaAdministrationService" ],
        "operationId" : "deleteLegacyArtifactPath",
        "produces" : [ "text/plain", "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "path",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/archivaAdministrationService/disabledInvalidContentConsumer/{invalidContentConsumer}" : {
      "get" : {
        "tags" : [ "ArchivaAdministrationService" ],
        "operationId" : "disabledInvalidContentConsumer",
        "produces" : [ "text/plain", "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "invalidContentConsumer",
            "in" : "path",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/archivaAdministrationService/disabledKnownContentConsumer/{knownContentConsumer}" : {
      "get" : {
        "tags" : [ "ArchivaAdministrationService" ],
        "operationId" : "disabledKnownContentConsumer",
        "produces" : [ "text/plain", "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "knownContentConsumer",
            "in" : "path",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/archivaAdministrationService/enabledInvalidContentConsumer/{invalidContentConsumer}" : {
      "get" : {
        "tags" : [ "ArchivaAdministrationService" ],
        "operationId" : "enabledInvalidContentConsumer",
        "produces" : [ "text/plain", "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "invalidContentConsumer",
            "in" : "path",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/archivaAdministrationService/enabledInvalidContentConsumers" : {
      "post" : {
        "tags" : [ "ArchivaAdministrationService" ],
        "operationId" : "enabledInvalidContentConsumers",
        "consumes" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "required" : false,
            "in" : "body",
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "description" : "Success"
          }
        }
      }
    }
    ,
    "\/archivaAdministrationService/enabledKnownContentConsumer/{knownContentConsumer}" : {
      "get" : {
        "tags" : [ "ArchivaAdministrationService" ],
        "operationId" : "enabledKnownContentConsumer",
        "produces" : [ "text/plain", "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "knownContentConsumer",
            "in" : "path",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/archivaAdministrationService/enabledKnownContentConsumers" : {
      "post" : {
        "tags" : [ "ArchivaAdministrationService" ],
        "operationId" : "enabledKnownContentConsumers",
        "consumes" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "required" : false,
            "in" : "body",
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "description" : "Success"
          }
        }
      }
    }
    ,
    "\/archivaAdministrationService/getFileType" : {
      "get" : {
        "tags" : [ "ArchivaAdministrationService" ],
        "operationId" : "getFileType",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "fileTypeId",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_FileType",
"description" : ""
            },
            "examples" : {
  "id" : "...",
  "patterns" : [ "...", "..." ]
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/archivaAdministrationService/getFileTypes" : {
      "get" : {
        "tags" : [ "ArchivaAdministrationService" ],
        "operationId" : "getFileTypes",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_FileType"
}
            },
            "examples" : [ {
  "id" : "...",
  "patterns" : [ "...", "..." ]
} ],
            "description" : ""
          }
        }
      }
    }
    ,
    "\/archivaAdministrationService/getInvalidContentAdminRepositoryConsumers" : {
      "get" : {
        "tags" : [ "ArchivaAdministrationService" ],
        "operationId" : "getInvalidContentAdminRepositoryConsumers",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_AdminRepositoryConsumer"
}
            },
            "examples" : [ {
  "description" : "...",
  "id" : "...",
  "enabled" : true
} ],
            "description" : ""
          }
        }
      }
    }
    ,
    "\/archivaAdministrationService/getInvalidContentConsumers" : {
      "get" : {
        "tags" : [ "ArchivaAdministrationService" ],
        "operationId" : "getInvalidContentConsumers",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/archivaAdministrationService/getKnownContentAdminRepositoryConsumers" : {
      "get" : {
        "tags" : [ "ArchivaAdministrationService" ],
        "operationId" : "getKnownContentAdminRepositoryConsumers",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_AdminRepositoryConsumer"
}
            },
            "examples" : [ {
  "description" : "...",
  "id" : "...",
  "enabled" : true
} ],
            "description" : ""
          }
        }
      }
    }
    ,
    "\/archivaAdministrationService/getKnownContentConsumers" : {
      "get" : {
        "tags" : [ "ArchivaAdministrationService" ],
        "operationId" : "getKnownContentConsumers",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/archivaAdministrationService/getLegacyArtifactPaths" : {
      "get" : {
        "tags" : [ "ArchivaAdministrationService" ],
        "operationId" : "getLegacyArtifactPaths",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_LegacyArtifactPath"
}
            },
            "examples" : [ {
  "path" : "...",
  "artifact" : "...",
  "groupId" : "...",
  "artifactId" : "...",
  "version" : "...",
  "classifier" : "...",
  "type" : "..."
} ],
            "description" : ""
          }
        }
      }
    }
    ,
    "\/archivaAdministrationService/getNetworkConfiguration" : {
      "get" : {
        "tags" : [ "ArchivaAdministrationService" ],
        "operationId" : "getNetworkConfiguration",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_NetworkConfiguration",
"description" : ""
            },
            "examples" : {
  "maxTotal" : 12345,
  "maxTotalPerHost" : 12345,
  "usePooling" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/archivaAdministrationService/getOrganisationInformation" : {
      "get" : {
        "tags" : [ "ArchivaAdministrationService" ],
        "operationId" : "getOrganisationInformation",
        "produces" : [ "text/plain", "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_OrganisationInformation",
"description" : ""
            },
            "examples" : {
  "name" : "...",
  "url" : "...",
  "logoLocation" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/archivaAdministrationService/getUiConfiguration" : {
      "get" : {
        "tags" : [ "ArchivaAdministrationService" ],
        "operationId" : "getUiConfiguration",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_UiConfiguration",
"description" : ""
            },
            "examples" : {
  "showFindArtifacts" : true,
  "appletFindEnabled" : true,
  "disableEasterEggs" : true,
  "applicationUrl" : "...",
  "disableRegistration" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/archivaAdministrationService/registrationDisabled" : {
      "get" : {
        "tags" : [ "ArchivaAdministrationService" ],
        "operationId" : "registrationDisabled",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/archivaAdministrationService/removeFileType" : {
      "get" : {
        "tags" : [ "ArchivaAdministrationService" ],
        "operationId" : "removeFileType",
        "produces" : [ "text/plain", "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "fileTypeId",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/archivaAdministrationService/removeFileTypePattern" : {
      "get" : {
        "tags" : [ "ArchivaAdministrationService" ],
        "operationId" : "removeFileTypePattern",
        "produces" : [ "text/plain", "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "fileTypeId",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "pattern",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/archivaAdministrationService/setNetworkConfiguration" : {
      "post" : {
        "tags" : [ "ArchivaAdministrationService" ],
        "operationId" : "setNetworkConfiguration",
        "consumes" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "required" : false,
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_NetworkConfiguration",
"description" : ""
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "description" : "Success"
          }
        }
      }
    }
    ,
    "\/archivaAdministrationService/setOrganisationInformation" : {
      "post" : {
        "tags" : [ "ArchivaAdministrationService" ],
        "operationId" : "setOrganisationInformation",
        "consumes" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "required" : false,
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_OrganisationInformation",
"description" : ""
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "description" : "Success"
          }
        }
      }
    }
    ,
    "\/archivaAdministrationService/setUiConfiguration" : {
      "post" : {
        "tags" : [ "ArchivaAdministrationService" ],
        "operationId" : "setUiConfiguration",
        "consumes" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "required" : false,
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_UiConfiguration",
"description" : ""
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "description" : "Success"
          }
        }
      }
    }
    ,
    "\/archivaRuntimeConfigurationService/archivaRuntimeConfiguration" : {
      "get" : {
        "tags" : [ "ArchivaRuntimeConfigurationService" ],
        "operationId" : "getArchivaRuntimeConfiguration",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_ArchivaRuntimeConfiguration",
"description" : ""
            },
            "examples" : {
  "urlFailureCacheConfiguration" : {
    "timeToIdleSeconds" : 12345,
    "timeToLiveSeconds" : 12345,
    "maxElementsInMemory" : 12345,
    "maxElementsOnDisk" : 12345
  },
  "fileLockConfiguration" : {
    "lockingTimeout" : 12345,
    "skipLocking" : true
  }
},
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "ArchivaRuntimeConfigurationService" ],
        "operationId" : "updateArchivaRuntimeConfiguration",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "required" : false,
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_ArchivaRuntimeConfiguration",
"description" : ""
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/browseService/artifactAvailable/{g}/{a}/{v}" : {
      "get" : {
        "tags" : [ "BrowseService" ],
        "description" : "verify if an artifact is available locally if not download from proxies will be try",
        "operationId" : "artifactAvailable",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "a",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "g",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "v",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "repositoryId",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/browseService/artifactAvailable/{g}/{a}/{v}/{c}" : {
      "get" : {
        "tags" : [ "BrowseService" ],
        "description" : "verify if an artifact is available locally if not download from proxies will be try",
        "operationId" : "artifactAvailable",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "a",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "c",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "g",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "v",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "repositoryId",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/browseService/artifactContentEntries/{g}/{a}/{v}" : {
      "get" : {
        "tags" : [ "BrowseService" ],
        "operationId" : "getArtifactContentEntries",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "a",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "g",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "v",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "c",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "p",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "repositoryId",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "t",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ArtifactContentEntry"
}
            },
            "examples" : [ {
  "path" : "...",
  "file" : true,
  "depth" : 12345,
  "repositoryId" : "..."
} ],
            "description" : ""
          }
        }
      }
    }
    ,
    "\/browseService/artifactContentText/{g}/{a}/{v}" : {
      "get" : {
        "tags" : [ "BrowseService" ],
        "description" : "if path is empty content of the file is returned (for pom view)",
        "operationId" : "getArtifactContentText",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "a",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "g",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "v",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "c",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "p",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "repositoryId",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "t",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_ArtifactContent",
"description" : ""
            },
            "examples" : {
  "content" : "...",
  "repositoryId" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/browseService/artifactDownloadInfos/{g}/{a}/{v}" : {
      "get" : {
        "tags" : [ "BrowseService" ],
        "operationId" : "getArtifactDownloadInfos",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "a",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "g",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "v",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "repositoryId",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Artifact"
}
            },
            "examples" : [ {
  "prefix" : "...",
  "repositoryId" : "...",
  "bundleName" : "...",
  "artifactId" : "...",
  "bundleExportPackage" : "...",
  "bundleDocUrl" : "...",
  "bundleVersion" : "...",
  "groupId" : "...",
  "bundleDescription" : "...",
  "scope" : "...",
  "type" : "...",
  "bundleImportPackage" : "...",
  "packaging" : "...",
  "path" : "...",
  "url" : "...",
  "context" : "...",
  "classifier" : "...",
  "bundleRequireBundle" : "...",
  "fileExtension" : "...",
  "bundleExportService" : "...",
  "version" : "...",
  "id" : "...",
  "size" : "...",
  "goals" : [ "...", "..." ],
  "bundleLicense" : "...",
  "bundleSymbolicName" : "..."
} ],
            "description" : ""
          }
        }
      }
    }
    ,
    "\/browseService/artifacts/{r}" : {
      "get" : {
        "tags" : [ "BrowseService" ],
        "description" : "return List of all artifacts from this repository",
        "operationId" : "getArtifacts",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "r",
            "in" : "path",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Artifact"
}
            },
            "examples" : [ {
  "prefix" : "...",
  "repositoryId" : "...",
  "bundleName" : "...",
  "artifactId" : "...",
  "bundleExportPackage" : "...",
  "bundleDocUrl" : "...",
  "bundleVersion" : "...",
  "groupId" : "...",
  "bundleDescription" : "...",
  "scope" : "...",
  "type" : "...",
  "bundleImportPackage" : "...",
  "packaging" : "...",
  "path" : "...",
  "url" : "...",
  "context" : "...",
  "classifier" : "...",
  "bundleRequireBundle" : "...",
  "fileExtension" : "...",
  "bundleExportService" : "...",
  "version" : "...",
  "id" : "...",
  "size" : "...",
  "goals" : [ "...", "..." ],
  "bundleLicense" : "...",
  "bundleSymbolicName" : "..."
} ],
            "description" : ""
          }
        }
      }
    }
    ,
    "\/browseService/artifactsByMetadata/{key}/{value}" : {
      "get" : {
        "tags" : [ "BrowseService" ],
        "description" : "Return List of artifacts from this repository with artifact metadata key matching value.\nIf repository is not provided the search runs in all repositories.",
        "operationId" : "getArtifactsByMetadata",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "key",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "value",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "repositoryId",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Artifact"
}
            },
            "examples" : [ {
  "prefix" : "...",
  "repositoryId" : "...",
  "bundleName" : "...",
  "artifactId" : "...",
  "bundleExportPackage" : "...",
  "bundleDocUrl" : "...",
  "bundleVersion" : "...",
  "groupId" : "...",
  "bundleDescription" : "...",
  "scope" : "...",
  "type" : "...",
  "bundleImportPackage" : "...",
  "packaging" : "...",
  "path" : "...",
  "url" : "...",
  "context" : "...",
  "classifier" : "...",
  "bundleRequireBundle" : "...",
  "fileExtension" : "...",
  "bundleExportService" : "...",
  "version" : "...",
  "id" : "...",
  "size" : "...",
  "goals" : [ "...", "..." ],
  "bundleLicense" : "...",
  "bundleSymbolicName" : "..."
} ],
            "description" : ""
          }
        }
      }
    }
    ,
    "\/browseService/artifactsByProjectVersionMetadata/{key}/{value}" : {
      "get" : {
        "tags" : [ "BrowseService" ],
        "description" : "Return List of artifacts from this repository with project version level metadata key matching value. If\nrepository is not provided the search runs in all repositories.",
        "operationId" : "getArtifactsByProjectVersionMetadata",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "key",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "value",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "repositoryId",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Artifact"
}
            },
            "examples" : [ {
  "prefix" : "...",
  "repositoryId" : "...",
  "bundleName" : "...",
  "artifactId" : "...",
  "bundleExportPackage" : "...",
  "bundleDocUrl" : "...",
  "bundleVersion" : "...",
  "groupId" : "...",
  "bundleDescription" : "...",
  "scope" : "...",
  "type" : "...",
  "bundleImportPackage" : "...",
  "packaging" : "...",
  "path" : "...",
  "url" : "...",
  "context" : "...",
  "classifier" : "...",
  "bundleRequireBundle" : "...",
  "fileExtension" : "...",
  "bundleExportService" : "...",
  "version" : "...",
  "id" : "...",
  "size" : "...",
  "goals" : [ "...", "..." ],
  "bundleLicense" : "...",
  "bundleSymbolicName" : "..."
} ],
            "description" : ""
          }
        }
      }
    }
    ,
    "\/browseService/artifactsByProperty/{key}/{value}" : {
      "get" : {
        "tags" : [ "BrowseService" ],
        "description" : "Return List of artifacts from this repository with property key matching value.\nIf repository is not provided the search runs in all repositories.",
        "operationId" : "getArtifactsByProperty",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "key",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "value",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "repositoryId",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Artifact"
}
            },
            "examples" : [ {
  "prefix" : "...",
  "repositoryId" : "...",
  "bundleName" : "...",
  "artifactId" : "...",
  "bundleExportPackage" : "...",
  "bundleDocUrl" : "...",
  "bundleVersion" : "...",
  "groupId" : "...",
  "bundleDescription" : "...",
  "scope" : "...",
  "type" : "...",
  "bundleImportPackage" : "...",
  "packaging" : "...",
  "path" : "...",
  "url" : "...",
  "context" : "...",
  "classifier" : "...",
  "bundleRequireBundle" : "...",
  "fileExtension" : "...",
  "bundleExportService" : "...",
  "version" : "...",
  "id" : "...",
  "size" : "...",
  "goals" : [ "...", "..." ],
  "bundleLicense" : "...",
  "bundleSymbolicName" : "..."
} ],
            "description" : ""
          }
        }
      }
    }
    ,
    "\/browseService/browseGroupId/{groupId}" : {
      "get" : {
        "tags" : [ "BrowseService" ],
        "operationId" : "browseGroupId",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "groupId",
            "in" : "path",
            "type" : "string",
            "description" : "groupId to browse"
          },
          {
            "name" : "repositoryId",
            "in" : "query",
            "type" : "string",
            "description" : "optionnal (repository to browse if <code>null<\/code> all available user repositories are used)"
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_BrowseResult",
"description" : ""
            },
            "examples" : {
  "browseResultEntries" : [ {
    "name" : "...",
    "project" : true,
    "groupId" : "...",
    "artifactId" : "..."
  }, {
    "name" : "...",
    "project" : true,
    "groupId" : "...",
    "artifactId" : "..."
  } ]
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/browseService/dependees/{g}/{a}/{v}" : {
      "get" : {
        "tags" : [ "BrowseService" ],
        "description" : "List of artifacts using the artifact passed in parameter.",
        "operationId" : "getDependees",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "a",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "g",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "v",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "repositoryId",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Artifact"
}
            },
            "examples" : [ {
  "prefix" : "...",
  "repositoryId" : "...",
  "bundleName" : "...",
  "artifactId" : "...",
  "bundleExportPackage" : "...",
  "bundleDocUrl" : "...",
  "bundleVersion" : "...",
  "groupId" : "...",
  "bundleDescription" : "...",
  "scope" : "...",
  "type" : "...",
  "bundleImportPackage" : "...",
  "packaging" : "...",
  "path" : "...",
  "url" : "...",
  "context" : "...",
  "classifier" : "...",
  "bundleRequireBundle" : "...",
  "fileExtension" : "...",
  "bundleExportService" : "...",
  "version" : "...",
  "id" : "...",
  "size" : "...",
  "goals" : [ "...", "..." ],
  "bundleLicense" : "...",
  "bundleSymbolicName" : "..."
} ],
            "description" : ""
          }
        }
      }
    }
    ,
    "\/browseService/importMetadata" : {
      "post" : {
        "tags" : [ "BrowseService" ],
        "operationId" : "importMetadata",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "repository",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "body",
            "required" : false,
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_MetadataAddRequest",
"description" : ""
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/browseService/metadata/{g}/{a}/{v}/{key}" : {
      "delete" : {
        "tags" : [ "BrowseService" ],
        "operationId" : "deleteMetadata",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "a",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "g",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "key",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "v",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "repositoryId",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/browseService/metadata/{g}/{a}/{v}/{key}/{value}" : {
      "put" : {
        "tags" : [ "BrowseService" ],
        "operationId" : "addMetadata",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "a",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "g",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "key",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "v",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "value",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "repositoryId",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/browseService/metadatas/{g}/{a}/{v}" : {
      "get" : {
        "tags" : [ "BrowseService" ],
        "operationId" : "getMetadatas",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "a",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "g",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "v",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "repositoryId",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Entry"
}
            },
            "examples" : [ {
  "value" : "...",
  "key" : "..."
} ],
            "description" : ""
          }
        }
      }
    }
    ,
    "\/browseService/projectVersionMetadata/{g}/{a}" : {
      "get" : {
        "tags" : [ "BrowseService" ],
        "operationId" : "getProjectVersionMetadata",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "a",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "g",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "repositoryId",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_ProjectVersionMetadata",
"description" : ""
            },
            "examples" : {
  "mailingLists" : [ {
    "otherArchives" : [ "...", "..." ],
    "subscribeAddress" : "...",
    "mainArchiveUrl" : "...",
    "name" : "...",
    "postAddress" : "...",
    "unsubscribeAddress" : "...",
    "index" : 12345
  }, {
    "otherArchives" : [ "...", "..." ],
    "subscribeAddress" : "...",
    "mainArchiveUrl" : "...",
    "name" : "...",
    "postAddress" : "...",
    "unsubscribeAddress" : "...",
    "index" : 12345
  } ],
  "name" : "...",
  "ciManagement" : {
    "system" : "...",
    "url" : "..."
  },
  "incomplete" : true,
  "properties" : {
    "property1" : "...",
    "property2" : "..."
  },
  "scm" : {
    "connection" : "...",
    "url" : "...",
    "developerConnection" : "..."
  },
  "organization" : {
    "name" : "...",
    "url" : "..."
  },
  "version" : "...",
  "licenses" : [ {
    "index" : 12345,
    "name" : "...",
    "url" : "..."
  }, {
    "index" : 12345,
    "name" : "...",
    "url" : "..."
  } ],
  "dependencies" : [ {
    "projectId" : "...",
    "artifactId" : "...",
    "optional" : true,
    "version" : "...",
    "type" : "...",
    "namespace" : "...",
    "classifier" : "...",
    "scope" : "...",
    "systemPath" : "..."
  }, {
    "projectId" : "...",
    "artifactId" : "...",
    "optional" : true,
    "version" : "...",
    "type" : "...",
    "namespace" : "...",
    "classifier" : "...",
    "scope" : "...",
    "systemPath" : "..."
  } ],
  "id" : "...",
  "url" : "...",
  "issueManagement" : {
    "url" : "...",
    "system" : "..."
  },
  "description" : "...",
  "facetIds" : [ "...", "..." ],
  "facetList" : [ {
    "name" : "...",
    "facetId" : "..."
  }, {
    "name" : "...",
    "facetId" : "..."
  } ],
  "facets" : {
    "property1" : { },
    "property2" : { }
  }
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/browseService/projectVersionMetadata/{g}/{a}/{v}" : {
      "get" : {
        "tags" : [ "BrowseService" ],
        "operationId" : "getProjectMetadata",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "a",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "g",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "v",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "repositoryId",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_ProjectVersionMetadata",
"description" : ""
            },
            "examples" : {
  "mailingLists" : [ {
    "otherArchives" : [ "...", "..." ],
    "subscribeAddress" : "...",
    "mainArchiveUrl" : "...",
    "name" : "...",
    "postAddress" : "...",
    "unsubscribeAddress" : "...",
    "index" : 12345
  }, {
    "otherArchives" : [ "...", "..." ],
    "subscribeAddress" : "...",
    "mainArchiveUrl" : "...",
    "name" : "...",
    "postAddress" : "...",
    "unsubscribeAddress" : "...",
    "index" : 12345
  } ],
  "name" : "...",
  "ciManagement" : {
    "system" : "...",
    "url" : "..."
  },
  "incomplete" : true,
  "properties" : {
    "property1" : "...",
    "property2" : "..."
  },
  "scm" : {
    "connection" : "...",
    "url" : "...",
    "developerConnection" : "..."
  },
  "organization" : {
    "name" : "...",
    "url" : "..."
  },
  "version" : "...",
  "licenses" : [ {
    "index" : 12345,
    "name" : "...",
    "url" : "..."
  }, {
    "index" : 12345,
    "name" : "...",
    "url" : "..."
  } ],
  "dependencies" : [ {
    "projectId" : "...",
    "artifactId" : "...",
    "optional" : true,
    "version" : "...",
    "type" : "...",
    "namespace" : "...",
    "classifier" : "...",
    "scope" : "...",
    "systemPath" : "..."
  }, {
    "projectId" : "...",
    "artifactId" : "...",
    "optional" : true,
    "version" : "...",
    "type" : "...",
    "namespace" : "...",
    "classifier" : "...",
    "scope" : "...",
    "systemPath" : "..."
  } ],
  "id" : "...",
  "url" : "...",
  "issueManagement" : {
    "url" : "...",
    "system" : "..."
  },
  "description" : "...",
  "facetIds" : [ "...", "..." ],
  "facetList" : [ {
    "name" : "...",
    "facetId" : "..."
  }, {
    "name" : "...",
    "facetId" : "..."
  } ],
  "facets" : {
    "property1" : { },
    "property2" : { }
  }
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/browseService/rootGroups" : {
      "get" : {
        "tags" : [ "BrowseService" ],
        "operationId" : "getRootGroups",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "repositoryId",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_BrowseResult",
"description" : ""
            },
            "examples" : {
  "browseResultEntries" : [ {
    "name" : "...",
    "project" : true,
    "groupId" : "...",
    "artifactId" : "..."
  }, {
    "name" : "...",
    "project" : true,
    "groupId" : "...",
    "artifactId" : "..."
  } ]
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/browseService/searchArtifacts/{key}/{text}" : {
      "get" : {
        "tags" : [ "BrowseService" ],
        "description" : "Search artifacts with the property specified by key matching text. If repository is not provided the search runs\nin all repositories. If exact is true only the artifacts whose property match exactly are returned.",
        "operationId" : "searchArtifacts",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "key",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "text",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "exact",
            "in" : "query",
            "type" : "boolean",
            "description" : ""
          },
          {
            "name" : "repositoryId",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Artifact"
}
            },
            "examples" : [ {
  "prefix" : "...",
  "repositoryId" : "...",
  "bundleName" : "...",
  "artifactId" : "...",
  "bundleExportPackage" : "...",
  "bundleDocUrl" : "...",
  "bundleVersion" : "...",
  "groupId" : "...",
  "bundleDescription" : "...",
  "scope" : "...",
  "type" : "...",
  "bundleImportPackage" : "...",
  "packaging" : "...",
  "path" : "...",
  "url" : "...",
  "context" : "...",
  "classifier" : "...",
  "bundleRequireBundle" : "...",
  "fileExtension" : "...",
  "bundleExportService" : "...",
  "version" : "...",
  "id" : "...",
  "size" : "...",
  "goals" : [ "...", "..." ],
  "bundleLicense" : "...",
  "bundleSymbolicName" : "..."
} ],
            "description" : ""
          }
        }
      }
    }
    ,
    "\/browseService/searchArtifacts/{text}" : {
      "get" : {
        "tags" : [ "BrowseService" ],
        "description" : "Search artifacts with any property matching text. If repository is not provided the search runs in all\nrepositories. If exact is true only the artifacts whose property match exactly are returned.",
        "operationId" : "searchArtifacts",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "text",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "exact",
            "in" : "query",
            "type" : "boolean",
            "description" : ""
          },
          {
            "name" : "repositoryId",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Artifact"
}
            },
            "examples" : [ {
  "prefix" : "...",
  "repositoryId" : "...",
  "bundleName" : "...",
  "artifactId" : "...",
  "bundleExportPackage" : "...",
  "bundleDocUrl" : "...",
  "bundleVersion" : "...",
  "groupId" : "...",
  "bundleDescription" : "...",
  "scope" : "...",
  "type" : "...",
  "bundleImportPackage" : "...",
  "packaging" : "...",
  "path" : "...",
  "url" : "...",
  "context" : "...",
  "classifier" : "...",
  "bundleRequireBundle" : "...",
  "fileExtension" : "...",
  "bundleExportService" : "...",
  "version" : "...",
  "id" : "...",
  "size" : "...",
  "goals" : [ "...", "..." ],
  "bundleLicense" : "...",
  "bundleSymbolicName" : "..."
} ],
            "description" : ""
          }
        }
      }
    }
    ,
    "\/browseService/treeEntries/{g}/{a}/{v}" : {
      "get" : {
        "tags" : [ "BrowseService" ],
        "description" : "return the dependency Tree for an artifacts\n<b>the List result has only one entry<\/b>",
        "operationId" : "getTreeEntries",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "a",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "g",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "v",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "repositoryId",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_TreeEntry"
}
            },
            "examples" : [ {
  "artifact" : {
    "prefix" : "...",
    "repositoryId" : "...",
    "bundleName" : "...",
    "artifactId" : "...",
    "bundleExportPackage" : "...",
    "bundleDocUrl" : "...",
    "bundleVersion" : "...",
    "groupId" : "...",
    "bundleDescription" : "...",
    "scope" : "...",
    "type" : "...",
    "bundleImportPackage" : "...",
    "packaging" : "...",
    "path" : "...",
    "url" : "...",
    "context" : "...",
    "classifier" : "...",
    "bundleRequireBundle" : "...",
    "fileExtension" : "...",
    "bundleExportService" : "...",
    "version" : "...",
    "id" : "...",
    "size" : "...",
    "goals" : [ "...", "..." ],
    "bundleLicense" : "...",
    "bundleSymbolicName" : "..."
  },
  "childs" : [ {
    "artifact" : {
      "prefix" : "...",
      "repositoryId" : "...",
      "bundleName" : "...",
      "artifactId" : "...",
      "bundleExportPackage" : "...",
      "bundleDocUrl" : "...",
      "bundleVersion" : "...",
      "groupId" : "...",
      "bundleDescription" : "...",
      "scope" : "...",
      "type" : "...",
      "bundleImportPackage" : "...",
      "packaging" : "...",
      "path" : "...",
      "url" : "...",
      "context" : "...",
      "classifier" : "...",
      "bundleRequireBundle" : "...",
      "fileExtension" : "...",
      "bundleExportService" : "...",
      "version" : "...",
      "id" : "...",
      "size" : "...",
      "goals" : [ "...", "..." ],
      "bundleLicense" : "...",
      "bundleSymbolicName" : "..."
    },
    "childs" : [ { }, { } ]
  }, {
    "artifact" : {
      "prefix" : "...",
      "repositoryId" : "...",
      "bundleName" : "...",
      "artifactId" : "...",
      "bundleExportPackage" : "...",
      "bundleDocUrl" : "...",
      "bundleVersion" : "...",
      "groupId" : "...",
      "bundleDescription" : "...",
      "scope" : "...",
      "type" : "...",
      "bundleImportPackage" : "...",
      "packaging" : "...",
      "path" : "...",
      "url" : "...",
      "context" : "...",
      "classifier" : "...",
      "bundleRequireBundle" : "...",
      "fileExtension" : "...",
      "bundleExportService" : "...",
      "version" : "...",
      "id" : "...",
      "size" : "...",
      "goals" : [ "...", "..." ],
      "bundleLicense" : "...",
      "bundleSymbolicName" : "..."
    },
    "childs" : [ { }, { } ]
  } ]
} ],
            "description" : ""
          }
        }
      }
    }
    ,
    "\/browseService/userManagableRepositories" : {
      "get" : {
        "tags" : [ "BrowseService" ],
        "operationId" : "getUserManagableRepositories",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "List of repositories current user can manage",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ManagedRepository"
}
            },
            "examples" : [ {
  "cronExpression" : "...",
  "location" : "...",
  "releases" : true,
  "snapshots" : true,
  "blockRedeployments" : true,
  "stagingRepository" : {
    "cronExpression" : "...",
    "location" : "...",
    "releases" : true,
    "snapshots" : true,
    "blockRedeployments" : true,
    "stagingRepository" : { },
    "scanned" : true,
    "retentionPeriod" : 12345,
    "retentionCount" : 12345,
    "deleteReleasedSnapshots" : true,
    "stageRepoNeeded" : true,
    "resetStats" : true,
    "skipPackedIndexCreation" : true,
    "layout" : "...",
    "type" : "...",
    "indexDirectory" : "...",
    "descriptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "id" : "...",
    "name" : "...",
    "packedIndexDirectory" : "...",
    "description" : "...",
    "names" : {
      "property1" : "...",
      "property2" : "..."
    }
  },
  "scanned" : true,
  "retentionPeriod" : 12345,
  "retentionCount" : 12345,
  "deleteReleasedSnapshots" : true,
  "stageRepoNeeded" : true,
  "resetStats" : true,
  "skipPackedIndexCreation" : true,
  "layout" : "...",
  "type" : "...",
  "indexDirectory" : "...",
  "descriptions" : {
    "property1" : "...",
    "property2" : "..."
  },
  "id" : "...",
  "name" : "...",
  "packedIndexDirectory" : "...",
  "description" : "...",
  "names" : {
    "property1" : "...",
    "property2" : "..."
  }
} ],
            "description" : "List of repositories current user can manage"
          }
        }
      }
    }
    ,
    "\/browseService/userRepositories" : {
      "get" : {
        "tags" : [ "BrowseService" ],
        "operationId" : "getUserRepositories",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "List of managed repositories current user can read",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ManagedRepository"
}
            },
            "examples" : [ {
  "cronExpression" : "...",
  "location" : "...",
  "releases" : true,
  "snapshots" : true,
  "blockRedeployments" : true,
  "stagingRepository" : {
    "cronExpression" : "...",
    "location" : "...",
    "releases" : true,
    "snapshots" : true,
    "blockRedeployments" : true,
    "stagingRepository" : { },
    "scanned" : true,
    "retentionPeriod" : 12345,
    "retentionCount" : 12345,
    "deleteReleasedSnapshots" : true,
    "stageRepoNeeded" : true,
    "resetStats" : true,
    "skipPackedIndexCreation" : true,
    "layout" : "...",
    "type" : "...",
    "indexDirectory" : "...",
    "descriptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "id" : "...",
    "name" : "...",
    "packedIndexDirectory" : "...",
    "description" : "...",
    "names" : {
      "property1" : "...",
      "property2" : "..."
    }
  },
  "scanned" : true,
  "retentionPeriod" : 12345,
  "retentionCount" : 12345,
  "deleteReleasedSnapshots" : true,
  "stageRepoNeeded" : true,
  "resetStats" : true,
  "skipPackedIndexCreation" : true,
  "layout" : "...",
  "type" : "...",
  "indexDirectory" : "...",
  "descriptions" : {
    "property1" : "...",
    "property2" : "..."
  },
  "id" : "...",
  "name" : "...",
  "packedIndexDirectory" : "...",
  "description" : "...",
  "names" : {
    "property1" : "...",
    "property2" : "..."
  }
} ],
            "description" : "List of managed repositories current user can read"
          }
        }
      }
    }
    ,
    "\/browseService/versionsList/{g}/{a}" : {
      "get" : {
        "tags" : [ "BrowseService" ],
        "operationId" : "getVersionsList",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "a",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "g",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "repositoryId",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VersionsList",
"description" : ""
            },
            "examples" : {
  "versions" : [ "...", "..." ]
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/commonServices/getAllI18nResources" : {
      "get" : {
        "tags" : [ "CommonServices" ],
        "description" : "will return properties available in org/apache/archiva/i18n/default.properties\nload default (en) then override with locale used so at least en are returned if no\ntranslation in the locale asked.\nThis method will add redback resources too. note Archva wins",
        "operationId" : "getAllI18nResources",
        "produces" : [ "text/plain" ],
        "parameters" : [
          {
            "name" : "locale",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/commonServices/getI18nResources" : {
      "get" : {
        "tags" : [ "CommonServices" ],
        "description" : "will return properties available in org/apache/archiva/i18n/default.properties\nload default (en) then override with locale used so at least en are returned if no\ntranslation in the locale asked.",
        "operationId" : "getI18nResources",
        "produces" : [ "text/plain" ],
        "parameters" : [
          {
            "name" : "locale",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/commonServices/validateCronExpression" : {
      "get" : {
        "tags" : [ "CommonServices" ],
        "operationId" : "validateCronExpression",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "cronExpression",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/dataValidatorService/managedRepositoryIdNotExists" : {
      "get" : {
        "tags" : [ "DataValidatorService" ],
        "operationId" : "managedRepositoryIdNotExists",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/dataValidatorService/networkProxyIdNotExists" : {
      "get" : {
        "tags" : [ "DataValidatorService" ],
        "operationId" : "networkProxyIdNotExists",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/dataValidatorService/remoteRepositoryIdNotExists" : {
      "get" : {
        "tags" : [ "DataValidatorService" ],
        "operationId" : "remoteRepositoryIdNotExists",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/fileUploadService" : {
      "post" : {
        "tags" : [ "FileUploadService" ],
        "operationId" : "post",
        "consumes" : [ "multipart/form-data" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "required" : false,
            "in" : "body",
            "schema" : {
"description" : "",
"type" : "file"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_FileMetadata",
"description" : ""
            },
            "examples" : {
  "name" : "...",
  "size" : 12345,
  "url" : "...",
  "deleteUrl" : "...",
  "deleteType" : "...",
  "errorKey" : "...",
  "classifier" : "...",
  "pomFile" : true,
  "serverFileName" : "...",
  "packaging" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/fileUploadService/clearUploadedFiles" : {
      "get" : {
        "tags" : [ "FileUploadService" ],
        "operationId" : "clearUploadedFiles",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/fileUploadService/save/{repositoryId}/{groupId}/{artifactId}/{version}/{packaging}" : {
      "get" : {
        "tags" : [ "FileUploadService" ],
        "operationId" : "save",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "artifactId",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "groupId",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "packaging",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "repositoryId",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "version",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "generatePom",
            "in" : "query",
            "required" : true,
            "type" : "boolean",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/fileUploadService/sessionFileMetadatas" : {
      "get" : {
        "tags" : [ "FileUploadService" ],
        "operationId" : "getSessionFileMetadatas",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_FileMetadata"
}
            },
            "examples" : [ {
  "name" : "...",
  "size" : 12345,
  "url" : "...",
  "deleteUrl" : "...",
  "deleteType" : "...",
  "errorKey" : "...",
  "classifier" : "...",
  "pomFile" : true,
  "serverFileName" : "...",
  "packaging" : "..."
} ],
            "description" : ""
          }
        }
      }
    }
    ,
    "\/fileUploadService/{fileName}" : {
      "delete" : {
        "tags" : [ "FileUploadService" ],
        "operationId" : "deleteFile",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "fileName",
            "in" : "path",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/javascriptLogger/debug" : {
      "put" : {
        "tags" : [ "JavascriptLogger" ],
        "operationId" : "debug",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "required" : false,
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_JavascriptLog",
"description" : ""
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/javascriptLogger/error" : {
      "put" : {
        "tags" : [ "JavascriptLogger" ],
        "operationId" : "error",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "required" : false,
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_JavascriptLog",
"description" : ""
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/javascriptLogger/info" : {
      "put" : {
        "tags" : [ "JavascriptLogger" ],
        "operationId" : "info",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "required" : false,
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_JavascriptLog",
"description" : ""
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/javascriptLogger/trace" : {
      "put" : {
        "tags" : [ "JavascriptLogger" ],
        "operationId" : "trace",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "required" : false,
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_JavascriptLog",
"description" : ""
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/javascriptLogger/warn" : {
      "put" : {
        "tags" : [ "JavascriptLogger" ],
        "operationId" : "warn",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "required" : false,
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_JavascriptLog",
"description" : ""
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/managedRepositoriesService/addManagedRepository" : {
      "post" : {
        "tags" : [ "ManagedRepositoriesService" ],
        "operationId" : "addManagedRepository",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "required" : false,
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_ManagedRepository",
"description" : ""
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_ManagedRepository",
"description" : ""
            },
            "examples" : {
  "cronExpression" : "...",
  "location" : "...",
  "releases" : true,
  "snapshots" : true,
  "blockRedeployments" : true,
  "stagingRepository" : {
    "cronExpression" : "...",
    "location" : "...",
    "releases" : true,
    "snapshots" : true,
    "blockRedeployments" : true,
    "stagingRepository" : { },
    "scanned" : true,
    "retentionPeriod" : 12345,
    "retentionCount" : 12345,
    "deleteReleasedSnapshots" : true,
    "stageRepoNeeded" : true,
    "resetStats" : true,
    "skipPackedIndexCreation" : true,
    "layout" : "...",
    "type" : "...",
    "indexDirectory" : "...",
    "descriptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "id" : "...",
    "name" : "...",
    "packedIndexDirectory" : "...",
    "description" : "...",
    "names" : {
      "property1" : "...",
      "property2" : "..."
    }
  },
  "scanned" : true,
  "retentionPeriod" : 12345,
  "retentionCount" : 12345,
  "deleteReleasedSnapshots" : true,
  "stageRepoNeeded" : true,
  "resetStats" : true,
  "skipPackedIndexCreation" : true,
  "layout" : "...",
  "type" : "...",
  "indexDirectory" : "...",
  "descriptions" : {
    "property1" : "...",
    "property2" : "..."
  },
  "id" : "...",
  "name" : "...",
  "packedIndexDirectory" : "...",
  "description" : "...",
  "names" : {
    "property1" : "...",
    "property2" : "..."
  }
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/managedRepositoriesService/deleteManagedRepository" : {
      "get" : {
        "tags" : [ "ManagedRepositoriesService" ],
        "operationId" : "deleteManagedRepository",
        "produces" : [ "text/plain", "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "deleteContent",
            "in" : "query",
            "required" : true,
            "type" : "boolean",
            "description" : ""
          },
          {
            "name" : "repositoryId",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/managedRepositoriesService/fileLocationExists" : {
      "get" : {
        "tags" : [ "ManagedRepositoriesService" ],
        "operationId" : "fileLocationExists",
        "produces" : [ "text/plain", "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "fileLocation",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/managedRepositoriesService/getManagedRepositories" : {
      "get" : {
        "tags" : [ "ManagedRepositoriesService" ],
        "operationId" : "getManagedRepositories",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ManagedRepository"
}
            },
            "examples" : [ {
  "cronExpression" : "...",
  "location" : "...",
  "releases" : true,
  "snapshots" : true,
  "blockRedeployments" : true,
  "stagingRepository" : {
    "cronExpression" : "...",
    "location" : "...",
    "releases" : true,
    "snapshots" : true,
    "blockRedeployments" : true,
    "stagingRepository" : { },
    "scanned" : true,
    "retentionPeriod" : 12345,
    "retentionCount" : 12345,
    "deleteReleasedSnapshots" : true,
    "stageRepoNeeded" : true,
    "resetStats" : true,
    "skipPackedIndexCreation" : true,
    "layout" : "...",
    "type" : "...",
    "indexDirectory" : "...",
    "descriptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "id" : "...",
    "name" : "...",
    "packedIndexDirectory" : "...",
    "description" : "...",
    "names" : {
      "property1" : "...",
      "property2" : "..."
    }
  },
  "scanned" : true,
  "retentionPeriod" : 12345,
  "retentionCount" : 12345,
  "deleteReleasedSnapshots" : true,
  "stageRepoNeeded" : true,
  "resetStats" : true,
  "skipPackedIndexCreation" : true,
  "layout" : "...",
  "type" : "...",
  "indexDirectory" : "...",
  "descriptions" : {
    "property1" : "...",
    "property2" : "..."
  },
  "id" : "...",
  "name" : "...",
  "packedIndexDirectory" : "...",
  "description" : "...",
  "names" : {
    "property1" : "...",
    "property2" : "..."
  }
} ],
            "description" : ""
          }
        }
      }
    }
    ,
    "\/managedRepositoriesService/getManagedRepository/{repositoryId}" : {
      "get" : {
        "tags" : [ "ManagedRepositoriesService" ],
        "operationId" : "getManagedRepository",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "repositoryId",
            "in" : "path",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_ManagedRepository",
"description" : ""
            },
            "examples" : {
  "cronExpression" : "...",
  "location" : "...",
  "releases" : true,
  "snapshots" : true,
  "blockRedeployments" : true,
  "stagingRepository" : {
    "cronExpression" : "...",
    "location" : "...",
    "releases" : true,
    "snapshots" : true,
    "blockRedeployments" : true,
    "stagingRepository" : { },
    "scanned" : true,
    "retentionPeriod" : 12345,
    "retentionCount" : 12345,
    "deleteReleasedSnapshots" : true,
    "stageRepoNeeded" : true,
    "resetStats" : true,
    "skipPackedIndexCreation" : true,
    "layout" : "...",
    "type" : "...",
    "indexDirectory" : "...",
    "descriptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "id" : "...",
    "name" : "...",
    "packedIndexDirectory" : "...",
    "description" : "...",
    "names" : {
      "property1" : "...",
      "property2" : "..."
    }
  },
  "scanned" : true,
  "retentionPeriod" : 12345,
  "retentionCount" : 12345,
  "deleteReleasedSnapshots" : true,
  "stageRepoNeeded" : true,
  "resetStats" : true,
  "skipPackedIndexCreation" : true,
  "layout" : "...",
  "type" : "...",
  "indexDirectory" : "...",
  "descriptions" : {
    "property1" : "...",
    "property2" : "..."
  },
  "id" : "...",
  "name" : "...",
  "packedIndexDirectory" : "...",
  "description" : "...",
  "names" : {
    "property1" : "...",
    "property2" : "..."
  }
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/managedRepositoriesService/getManagedRepositoryStatistics/{repositoryId}/{lang}" : {
      "get" : {
        "tags" : [ "ManagedRepositoriesService" ],
        "operationId" : "getManagedRepositoryStatistics",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "lang",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "repositoryId",
            "in" : "path",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_ArchivaRepositoryStatistics",
"description" : ""
            },
            "examples" : {
  "scanEndTime" : 12345,
  "scanStartTime" : 12345,
  "totalArtifactCount" : 12345,
  "totalArtifactFileSize" : 12345,
  "totalFileCount" : 12345,
  "totalGroupCount" : 12345,
  "totalProjectCount" : 12345,
  "newFileCount" : 12345,
  "duration" : 12345,
  "lastScanDate" : "...",
  "totalCountForType" : {
    "property1" : 12345,
    "property2" : 12345
  },
  "customValues" : {
    "property1" : 12345,
    "property2" : 12345
  }
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/managedRepositoriesService/getPomSnippet/{repositoryId}" : {
      "get" : {
        "tags" : [ "ManagedRepositoriesService" ],
        "description" : "return a pom snippet to use this repository with entities escaped (&lt; &gt;)",
        "operationId" : "getPomSnippet",
        "produces" : [ "text/plain" ],
        "parameters" : [
          {
            "name" : "repositoryId",
            "in" : "path",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/managedRepositoriesService/updateManagedRepository" : {
      "post" : {
        "tags" : [ "ManagedRepositoriesService" ],
        "operationId" : "updateManagedRepository",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "text/plain", "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "required" : false,
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_ManagedRepository",
"description" : ""
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/mergeRepositoriesService/mergeConflictedArtifacts/{sourceRepositoryId}/{targetRepositoryId}" : {
      "get" : {
        "tags" : [ "MergeRepositoriesService" ],
        "description" : "<b>permissions are checked in impl<\/b>",
        "operationId" : "getMergeConflictedArtifacts",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "sourceRepositoryId",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "targetRepositoryId",
            "in" : "path",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Artifact"
}
            },
            "examples" : [ {
  "prefix" : "...",
  "repositoryId" : "...",
  "bundleName" : "...",
  "artifactId" : "...",
  "bundleExportPackage" : "...",
  "bundleDocUrl" : "...",
  "bundleVersion" : "...",
  "groupId" : "...",
  "bundleDescription" : "...",
  "scope" : "...",
  "type" : "...",
  "bundleImportPackage" : "...",
  "packaging" : "...",
  "path" : "...",
  "url" : "...",
  "context" : "...",
  "classifier" : "...",
  "bundleRequireBundle" : "...",
  "fileExtension" : "...",
  "bundleExportService" : "...",
  "version" : "...",
  "id" : "...",
  "size" : "...",
  "goals" : [ "...", "..." ],
  "bundleLicense" : "...",
  "bundleSymbolicName" : "..."
} ],
            "description" : ""
          }
        }
      }
    }
    ,
    "\/mergeRepositoriesService/mergeRepositories/{sourceRepositoryId}/{targetRepositoryId}/{skipConflicts}" : {
      "get" : {
        "tags" : [ "MergeRepositoriesService" ],
        "description" : "<b>permissions are checked in impl<\/b>",
        "operationId" : "mergeRepositories",
        "parameters" : [
          {
            "name" : "skipConflicts",
            "in" : "path",
            "required" : true,
            "type" : "boolean",
            "description" : ""
          },
          {
            "name" : "sourceRepositoryId",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "targetRepositoryId",
            "in" : "path",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    }
    ,
    "\/networkProxyService/addNetworkProxy" : {
      "post" : {
        "tags" : [ "NetworkProxyService" ],
        "operationId" : "addNetworkProxy",
        "consumes" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "required" : false,
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_NetworkProxy",
"description" : ""
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "description" : "Success"
          }
        }
      }
    }
    ,
    "\/networkProxyService/deleteNetworkProxy/{networkProxyId}" : {
      "get" : {
        "tags" : [ "NetworkProxyService" ],
        "operationId" : "deleteNetworkProxy",
        "produces" : [ "text/plain", "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "networkProxyId",
            "in" : "path",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/networkProxyService/getNetworkProxies" : {
      "get" : {
        "tags" : [ "NetworkProxyService" ],
        "operationId" : "getNetworkProxies",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_NetworkProxy"
}
            },
            "examples" : [ {
  "id" : "...",
  "protocol" : "...",
  "host" : "...",
  "port" : 12345,
  "username" : "...",
  "password" : "...",
  "useNtlm" : true
} ],
            "description" : ""
          }
        }
      }
    }
    ,
    "\/networkProxyService/getNetworkProxy/{networkProxyId}" : {
      "get" : {
        "tags" : [ "NetworkProxyService" ],
        "operationId" : "getNetworkProxy",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "networkProxyId",
            "in" : "path",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_NetworkProxy",
"description" : ""
            },
            "examples" : {
  "id" : "...",
  "protocol" : "...",
  "host" : "...",
  "port" : 12345,
  "username" : "...",
  "password" : "...",
  "useNtlm" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/networkProxyService/updateNetworkProxy" : {
      "post" : {
        "tags" : [ "NetworkProxyService" ],
        "operationId" : "updateNetworkProxy",
        "consumes" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "required" : false,
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_NetworkProxy",
"description" : ""
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "description" : "Success"
          }
        }
      }
    }
    ,
    "\/pingService/ping" : {
      "get" : {
        "tags" : [ "PingService" ],
        "description" : "ping service to monitor Archiva with a nice returned message :-)",
        "operationId" : "ping",
        "produces" : [ "text/plain", "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "Yeah Baby It rocks!",
"type" : "string"
            },
            "description" : "Yeah Baby It rocks!"
          }
        }
      }
    }
    ,
    "\/pingService/pingWithAuthz" : {
      "get" : {
        "tags" : [ "PingService" ],
        "description" : "same as #ping but check authz",
        "operationId" : "pingWithAuthz",
        "produces" : [ "text/plain", "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/pluginsService/getAdminPlugins" : {
      "get" : {
        "tags" : [ "PluginsService" ],
        "operationId" : "getAdminPlugins",
        "produces" : [ "text/plain" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/proxyConnectorRuleService/deleteProxyConnectorRule" : {
      "post" : {
        "tags" : [ "ProxyConnectorRuleService" ],
        "operationId" : "deleteProxyConnectorRule",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "required" : false,
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_ProxyConnectorRule",
"description" : ""
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/proxyConnectorRuleService/proxyConnectorRule" : {
      "post" : {
        "tags" : [ "ProxyConnectorRuleService" ],
        "operationId" : "addProxyConnectorRule",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "required" : false,
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_ProxyConnectorRule",
"description" : ""
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/proxyConnectorRuleService/proxyConnectorRules" : {
      "get" : {
        "tags" : [ "ProxyConnectorRuleService" ],
        "operationId" : "getProxyConnectorRules",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ProxyConnectorRule"
}
            },
            "examples" : [ {
  "pattern" : "...",
  "proxyConnectorRuleType" : "WHITE_LIST",
  "proxyConnectors" : [ {
    "order" : 12345,
    "blackListPatterns" : [ "...", "..." ],
    "policies" : {
      "property1" : "...",
      "property2" : "..."
    },
    "proxyId" : "...",
    "policiesEntries" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "targetRepoId" : "...",
    "disabled" : true,
    "whiteListPatterns" : [ "...", "..." ],
    "propertiesEntries" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "sourceRepoId" : "...",
    "properties" : {
      "property1" : "...",
      "property2" : "..."
    }
  }, {
    "order" : 12345,
    "blackListPatterns" : [ "...", "..." ],
    "policies" : {
      "property1" : "...",
      "property2" : "..."
    },
    "proxyId" : "...",
    "policiesEntries" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "targetRepoId" : "...",
    "disabled" : true,
    "whiteListPatterns" : [ "...", "..." ],
    "propertiesEntries" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "sourceRepoId" : "...",
    "properties" : {
      "property1" : "...",
      "property2" : "..."
    }
  } ]
} ],
            "description" : ""
          }
        }
      }
    }
    ,
    "\/proxyConnectorRuleService/updateProxyConnectorRule" : {
      "post" : {
        "tags" : [ "ProxyConnectorRuleService" ],
        "description" : "<b>only to update attached proxy connectors to update pattern use delete then add<\/b>",
        "operationId" : "updateProxyConnectorRule",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "required" : false,
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_ProxyConnectorRule",
"description" : ""
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/proxyConnectorService/addProxyConnector" : {
      "post" : {
        "tags" : [ "ProxyConnectorService" ],
        "operationId" : "addProxyConnector",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "text/plain", "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "required" : false,
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_ProxyConnector",
"description" : ""
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/proxyConnectorService/allPolicies" : {
      "get" : {
        "tags" : [ "ProxyConnectorService" ],
        "operationId" : "getAllPolicyInformations",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_PolicyInformation"
}
            },
            "examples" : [ {
  "options" : [ {
    "id" : "..."
  }, {
    "id" : "..."
  } ],
  "defaultOption" : {
    "id" : "..."
  },
  "id" : "...",
  "name" : "..."
} ],
            "description" : ""
          }
        }
      }
    }
    ,
    "\/proxyConnectorService/deleteProxyConnector" : {
      "post" : {
        "tags" : [ "ProxyConnectorService" ],
        "operationId" : "deleteProxyConnector",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "text/plain", "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "required" : false,
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_ProxyConnector",
"description" : ""
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/proxyConnectorService/getProxyConnector" : {
      "get" : {
        "tags" : [ "ProxyConnectorService" ],
        "operationId" : "getProxyConnector",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "sourceRepoId",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "targetRepoId",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_ProxyConnector",
"description" : ""
            },
            "examples" : {
  "order" : 12345,
  "blackListPatterns" : [ "...", "..." ],
  "policies" : {
    "property1" : "...",
    "property2" : "..."
  },
  "proxyId" : "...",
  "policiesEntries" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "targetRepoId" : "...",
  "disabled" : true,
  "whiteListPatterns" : [ "...", "..." ],
  "propertiesEntries" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "sourceRepoId" : "...",
  "properties" : {
    "property1" : "...",
    "property2" : "..."
  }
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/proxyConnectorService/getProxyConnectors" : {
      "get" : {
        "tags" : [ "ProxyConnectorService" ],
        "operationId" : "getProxyConnectors",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_ProxyConnector"
}
            },
            "examples" : [ {
  "order" : 12345,
  "blackListPatterns" : [ "...", "..." ],
  "policies" : {
    "property1" : "...",
    "property2" : "..."
  },
  "proxyId" : "...",
  "policiesEntries" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "targetRepoId" : "...",
  "disabled" : true,
  "whiteListPatterns" : [ "...", "..." ],
  "propertiesEntries" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "sourceRepoId" : "...",
  "properties" : {
    "property1" : "...",
    "property2" : "..."
  }
} ],
            "description" : ""
          }
        }
      }
    }
    ,
    "\/proxyConnectorService/removeProxyConnector" : {
      "get" : {
        "tags" : [ "ProxyConnectorService" ],
        "operationId" : "removeProxyConnector",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "sourceRepoId",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "targetRepoId",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/proxyConnectorService/updateProxyConnector" : {
      "post" : {
        "tags" : [ "ProxyConnectorService" ],
        "description" : "<b>only for enabled/disable or changing bean values except target/source<\/b>",
        "operationId" : "updateProxyConnector",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "text/plain", "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "required" : false,
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_ProxyConnector",
"description" : ""
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/redbackRuntimeConfigurationService/checkLdapConnection" : {
      "get" : {
        "tags" : [ "RedbackRuntimeConfigurationService" ],
        "operationId" : "checkLdapConnection",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "RedbackRuntimeConfigurationService" ],
        "operationId" : "checkLdapConnection2",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "required" : false,
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_LdapConfiguration",
"description" : ""
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/redbackRuntimeConfigurationService/rbacManagerImplementationInformations" : {
      "get" : {
        "tags" : [ "RedbackRuntimeConfigurationService" ],
        "operationId" : "getRbacManagerImplementationInformations",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RBACManagerImplementationInformation"
}
            },
            "examples" : [ {
  "readOnly" : true,
  "beanId" : "...",
  "descriptionKey" : "..."
} ],
            "description" : ""
          }
        }
      }
    }
    ,
    "\/redbackRuntimeConfigurationService/redbackImplementationsInformations" : {
      "get" : {
        "tags" : [ "RedbackRuntimeConfigurationService" ],
        "operationId" : "getRedbackImplementationsInformations",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RedbackImplementationsInformations",
"description" : ""
            },
            "examples" : {
  "userManagerImplementationInformations" : [ {
    "readOnly" : true,
    "beanId" : "...",
    "descriptionKey" : "..."
  }, {
    "readOnly" : true,
    "beanId" : "...",
    "descriptionKey" : "..."
  } ],
  "rbacManagerImplementationInformations" : [ {
    "readOnly" : true,
    "beanId" : "...",
    "descriptionKey" : "..."
  }, {
    "readOnly" : true,
    "beanId" : "...",
    "descriptionKey" : "..."
  } ]
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/redbackRuntimeConfigurationService/redbackRuntimeConfiguration" : {
      "get" : {
        "tags" : [ "RedbackRuntimeConfigurationService" ],
        "operationId" : "getRedbackRuntimeConfiguration",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RedbackRuntimeConfiguration",
"description" : ""
            },
            "examples" : {
  "userManagerImpls" : [ "...", "..." ],
  "ldapConfiguration" : {
    "hostName" : "...",
    "port" : 12345,
    "ssl" : true,
    "baseDn" : "...",
    "contextFactory" : "...",
    "bindDn" : "...",
    "password" : "...",
    "authenticationMethod" : "...",
    "extraProperties" : {
      "property1" : "...",
      "property2" : "..."
    },
    "bindAuthenticatorEnabled" : true,
    "extraPropertiesEntries" : [ {
      "key" : "...",
      "value" : "..."
    }, {
      "key" : "...",
      "value" : "..."
    } ],
    "baseGroupsDn" : "...",
    "writable" : true,
    "useRoleNameAsGroup" : true
  },
  "migratedFromRedbackConfiguration" : true,
  "configurationProperties" : {
    "property1" : "...",
    "property2" : "..."
  },
  "configurationPropertiesEntries" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "useUsersCache" : true,
  "usersCacheConfiguration" : {
    "timeToIdleSeconds" : 12345,
    "timeToLiveSeconds" : 12345,
    "maxElementsInMemory" : 12345,
    "maxElementsOnDisk" : 12345
  },
  "rbacManagerImpls" : [ "...", "..." ],
  "ldapGroupMappings" : [ {
    "roleNames" : [ "...", "..." ],
    "group" : "..."
  }, {
    "roleNames" : [ "...", "..." ],
    "group" : "..."
  } ]
},
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "RedbackRuntimeConfigurationService" ],
        "operationId" : "updateRedbackRuntimeConfiguration",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "required" : false,
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_RedbackRuntimeConfiguration",
"description" : ""
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/redbackRuntimeConfigurationService/userManagerImplementationInformations" : {
      "get" : {
        "tags" : [ "RedbackRuntimeConfigurationService" ],
        "operationId" : "getUserManagerImplementationInformations",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_UserManagerImplementationInformation"
}
            },
            "examples" : [ {
  "readOnly" : true,
  "beanId" : "...",
  "descriptionKey" : "..."
} ],
            "description" : ""
          }
        }
      }
    }
    ,
    "\/remoteRepositoriesService/addRemoteRepository" : {
      "post" : {
        "tags" : [ "RemoteRepositoriesService" ],
        "operationId" : "addRemoteRepository",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "text/plain", "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "required" : false,
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_RemoteRepository",
"description" : ""
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/remoteRepositoriesService/checkRemoteConnectivity/{repositoryId}" : {
      "get" : {
        "tags" : [ "RemoteRepositoriesService" ],
        "operationId" : "checkRemoteConnectivity",
        "produces" : [ "text/plain", "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "repositoryId",
            "in" : "path",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/remoteRepositoriesService/deleteRemoteRepository/{repositoryId}" : {
      "get" : {
        "tags" : [ "RemoteRepositoriesService" ],
        "operationId" : "deleteRemoteRepository",
        "produces" : [ "text/plain", "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "repositoryId",
            "in" : "path",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/remoteRepositoriesService/getRemoteRepositories" : {
      "get" : {
        "tags" : [ "RemoteRepositoriesService" ],
        "operationId" : "getRemoteRepositories",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RemoteRepository"
}
            },
            "examples" : [ {
  "url" : "...",
  "userName" : "...",
  "password" : "...",
  "timeout" : 12345,
  "downloadRemoteIndex" : true,
  "remoteIndexUrl" : "...",
  "remoteDownloadNetworkProxyId" : "...",
  "cronExpression" : "...",
  "remoteDownloadTimeout" : 12345,
  "downloadRemoteIndexOnStartup" : true,
  "extraParameters" : {
    "property1" : "...",
    "property2" : "..."
  },
  "extraParametersEntries" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "extraHeaders" : {
    "property1" : "...",
    "property2" : "..."
  },
  "extraHeadersEntries" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "checkPath" : "...",
  "layout" : "...",
  "type" : "...",
  "indexDirectory" : "...",
  "descriptions" : {
    "property1" : "...",
    "property2" : "..."
  },
  "id" : "...",
  "name" : "...",
  "packedIndexDirectory" : "...",
  "description" : "...",
  "names" : {
    "property1" : "...",
    "property2" : "..."
  }
} ],
            "description" : ""
          }
        }
      }
    }
    ,
    "\/remoteRepositoriesService/getRemoteRepository/{repositoryId}" : {
      "get" : {
        "tags" : [ "RemoteRepositoriesService" ],
        "operationId" : "getRemoteRepository",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "repositoryId",
            "in" : "path",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RemoteRepository",
"description" : ""
            },
            "examples" : {
  "url" : "...",
  "userName" : "...",
  "password" : "...",
  "timeout" : 12345,
  "downloadRemoteIndex" : true,
  "remoteIndexUrl" : "...",
  "remoteDownloadNetworkProxyId" : "...",
  "cronExpression" : "...",
  "remoteDownloadTimeout" : 12345,
  "downloadRemoteIndexOnStartup" : true,
  "extraParameters" : {
    "property1" : "...",
    "property2" : "..."
  },
  "extraParametersEntries" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "extraHeaders" : {
    "property1" : "...",
    "property2" : "..."
  },
  "extraHeadersEntries" : [ {
    "key" : "...",
    "value" : "..."
  }, {
    "key" : "...",
    "value" : "..."
  } ],
  "checkPath" : "...",
  "layout" : "...",
  "type" : "...",
  "indexDirectory" : "...",
  "descriptions" : {
    "property1" : "...",
    "property2" : "..."
  },
  "id" : "...",
  "name" : "...",
  "packedIndexDirectory" : "...",
  "description" : "...",
  "names" : {
    "property1" : "...",
    "property2" : "..."
  }
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/remoteRepositoriesService/updateRemoteRepository" : {
      "post" : {
        "tags" : [ "RemoteRepositoriesService" ],
        "operationId" : "updateRemoteRepository",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "text/plain", "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "required" : false,
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_RemoteRepository",
"description" : ""
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/reportServices/getHealthReports/{repository}/{rowCount}" : {
      "get" : {
        "tags" : [ "ReportRepositoriesService" ],
        "operationId" : "getHealthReport",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "repository",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "rowCount",
            "in" : "path",
            "required" : true,
            "type" : "integer",
            "format" : "int32",
            "description" : ""
          },
          {
            "name" : "groupId",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RepositoryProblemFacet"
}
            },
            "examples" : [ {
  "project" : "...",
  "name" : "...",
  "id" : "...",
  "facetId" : "...",
  "problem" : "...",
  "namespace" : "...",
  "message" : "...",
  "version" : "...",
  "repositoryId" : "..."
} ],
            "description" : ""
          }
        }
      }
    }
    ,
    "\/reportServices/getStatisticsReport" : {
      "get" : {
        "tags" : [ "ReportRepositoriesService" ],
        "operationId" : "getStatisticsReport",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "endDate",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "repository",
            "in" : "query",
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : ""
          },
          {
            "name" : "rowCount",
            "in" : "query",
            "required" : true,
            "type" : "integer",
            "format" : "int32",
            "description" : ""
          },
          {
            "name" : "startDate",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RepositoryStatistics"
}
            },
            "examples" : [ {
  "totalCountForType" : {
    "property1" : 12345,
    "property2" : 12345
  },
  "duration" : 12345,
  "totalArtifactFileSize" : 12345,
  "totalArtifactCount" : 12345,
  "repositoryId" : "...",
  "totalGroupCount" : 12345,
  "totalProjectCount" : 12345,
  "scanStartTime" : 12345,
  "newFileCount" : 12345,
  "scanEndTime" : 12345,
  "totalFileCount" : 12345
} ],
            "description" : ""
          }
        }
      }
    }
    ,
    "\/repositoriesService/alreadyScanning/{repositoryId}" : {
      "get" : {
        "tags" : [ "RepositoriesService" ],
        "operationId" : "alreadyScanning",
        "produces" : [ "text/plain", "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "repositoryId",
            "in" : "path",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/repositoriesService/copyArtifact" : {
      "post" : {
        "tags" : [ "RepositoriesService" ],
        "description" : "permissions are checked in impl\nwill copy an artifact from the source repository to the target repository",
        "operationId" : "copyArtifact",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "text/plain", "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "required" : false,
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_ArtifactTransferRequest",
"description" : ""
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/repositoriesService/deleteArtifact" : {
      "post" : {
        "tags" : [ "RepositoriesService" ],
        "description" : "<b>permissions are checked in impl<\/b>",
        "operationId" : "deleteArtifact",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "text/plain", "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "required" : false,
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_Artifact",
"description" : ""
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/repositoriesService/deleteGroupId" : {
      "get" : {
        "tags" : [ "RepositoriesService" ],
        "description" : "<b>permissions are checked in impl<\/b>",
        "operationId" : "deleteGroupId",
        "produces" : [ "text/plain", "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "groupId",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "repositoryId",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/repositoriesService/isAuthorizedToDeleteArtifacts/{repositoryId}" : {
      "get" : {
        "tags" : [ "RepositoriesService" ],
        "operationId" : "isAuthorizedToDeleteArtifacts",
        "produces" : [ "text/plain", "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "repositoryId",
            "in" : "path",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/repositoriesService/project/{repositoryId}/{groupId}/{projectId}" : {
      "delete" : {
        "tags" : [ "RepositoriesService" ],
        "description" : "<b>permissions are checked in impl<\/b>",
        "operationId" : "deleteProject",
        "produces" : [ "text/plain", "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "groupId",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "projectId",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "repositoryId",
            "in" : "path",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/repositoriesService/projectVersion/{repositoryId}/{namespace}/{projectId}/{version}" : {
      "delete" : {
        "tags" : [ "RepositoriesService" ],
        "description" : "<b>permissions are checked in impl<\/b>",
        "operationId" : "removeProjectVersion",
        "produces" : [ "text/plain", "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "namespace",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "projectId",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "repositoryId",
            "in" : "path",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "version",
            "in" : "path",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/repositoriesService/removeScanningTaskFromQueue/{repositoryId}" : {
      "get" : {
        "tags" : [ "RepositoriesService" ],
        "operationId" : "removeScanningTaskFromQueue",
        "produces" : [ "text/plain", "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "repositoryId",
            "in" : "path",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/repositoriesService/runningRemoteDownloadIds" : {
      "get" : {
        "tags" : [ "RepositoriesService" ],
        "operationId" : "getRunningRemoteDownloadIds",
        "produces" : [ "text/plain", "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_StringList",
"description" : ""
            },
            "examples" : {
  "strings" : [ "...", "..." ]
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/repositoriesService/scanRepository" : {
      "get" : {
        "tags" : [ "RepositoriesService" ],
        "description" : "index repository",
        "operationId" : "scanRepository",
        "produces" : [ "text/plain", "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "fullScan",
            "in" : "query",
            "required" : true,
            "type" : "boolean",
            "description" : ""
          },
          {
            "name" : "repositoryId",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/repositoriesService/scanRepositoryDirectoriesNow/{repositoryId}" : {
      "get" : {
        "tags" : [ "RepositoriesService" ],
        "description" : "scan directories",
        "operationId" : "scanRepositoryDirectoriesNow",
        "produces" : [ "text/plain", "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "repositoryId",
            "in" : "path",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RepositoryScanStatistics",
"description" : ""
            },
            "examples" : {
  "newFileCount" : 12345,
  "whenGathered" : 12345,
  "totalSize" : 12345,
  "repositoryId" : "...",
  "duration" : 12345,
  "totalFileCount" : 12345
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/repositoriesService/scanRepositoryNow" : {
      "get" : {
        "tags" : [ "RepositoriesService" ],
        "operationId" : "scanRepositoryNow",
        "produces" : [ "text/plain", "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "fullScan",
            "in" : "query",
            "required" : true,
            "type" : "boolean",
            "description" : ""
          },
          {
            "name" : "repositoryId",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/repositoriesService/scheduleDownloadRemoteIndex" : {
      "get" : {
        "tags" : [ "RepositoriesService" ],
        "operationId" : "scheduleDownloadRemoteIndex",
        "produces" : [ "text/plain", "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "fullDownload",
            "in" : "query",
            "required" : true,
            "type" : "boolean",
            "description" : ""
          },
          {
            "name" : "now",
            "in" : "query",
            "required" : true,
            "type" : "boolean",
            "description" : ""
          },
          {
            "name" : "repositoryId",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/repositoryGroupService/addRepositoryGroup" : {
      "post" : {
        "tags" : [ "RepositoryGroupService" ],
        "operationId" : "addRepositoryGroup",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "text/plain", "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "required" : false,
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_RepositoryGroup",
"description" : ""
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/repositoryGroupService/addRepositoryToGroup" : {
      "get" : {
        "tags" : [ "RepositoryGroupService" ],
        "operationId" : "addRepositoryToGroup",
        "produces" : [ "text/plain", "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "repositoryGroupId",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "repositoryId",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/repositoryGroupService/deleteRepositoryGroup/{repositoryGroupId}" : {
      "get" : {
        "tags" : [ "RepositoryGroupService" ],
        "operationId" : "deleteRepositoryGroup",
        "produces" : [ "text/plain", "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "repositoryGroupId",
            "in" : "path",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/repositoryGroupService/getRepositoriesGroups" : {
      "get" : {
        "tags" : [ "RepositoryGroupService" ],
        "operationId" : "getRepositoriesGroups",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RepositoryGroup"
}
            },
            "examples" : [ {
  "id" : "...",
  "repositories" : [ "...", "..." ],
  "mergedIndexPath" : "...",
  "mergedIndexTtl" : 12345,
  "cronExpression" : "..."
} ],
            "description" : ""
          }
        }
      }
    }
    ,
    "\/repositoryGroupService/getRepositoryGroup/{repositoryGroupId}" : {
      "get" : {
        "tags" : [ "RepositoryGroupService" ],
        "operationId" : "getRepositoryGroup",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "repositoryGroupId",
            "in" : "path",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RepositoryGroup",
"description" : ""
            },
            "examples" : {
  "id" : "...",
  "repositories" : [ "...", "..." ],
  "mergedIndexPath" : "...",
  "mergedIndexTtl" : 12345,
  "cronExpression" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/repositoryGroupService/updateRepositoryGroup" : {
      "post" : {
        "tags" : [ "RepositoryGroupService" ],
        "operationId" : "updateRepositoryGroup",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "text/plain", "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "required" : false,
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_RepositoryGroup",
"description" : ""
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/runtimeInfoService/archivaRuntimeInfo/{locale}" : {
      "get" : {
        "tags" : [ "RuntimeInfoService" ],
        "operationId" : "getApplicationRuntimeInfo",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "locale",
            "in" : "path",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_ApplicationRuntimeInfo",
"description" : ""
            },
            "examples" : {
  "devMode" : true,
  "javascriptLog" : true,
  "version" : "...",
  "buildNumber" : "...",
  "timestamp" : 12345,
  "copyrightRange" : "...",
  "logMissingI18n" : true,
  "baseUrl" : "...",
  "timestampStr" : "...",
  "cookieInformation" : {
    "path" : "...",
    "domain" : "...",
    "secure" : "...",
    "timeout" : "...",
    "rememberMeEnabled" : true
  }
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/runtimeInfoService/logMissingI18n" : {
      "get" : {
        "tags" : [ "RuntimeInfoService" ],
        "operationId" : "logMissingI18n",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "key",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/searchService/artifact" : {
      "get" : {
        "tags" : [ "SearchService" ],
        "operationId" : "redirectToArtifactFile",
        "produces" : [ "text/html" ],
        "parameters" : [
          {
            "name" : "a",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "c",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "g",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "p",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "r",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "v",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/searchService/artifactsByChecksum" : {
      "post" : {
        "tags" : [ "SearchService" ],
        "description" : "If searchRequest contains repositories, the search will be done only on those repositories.\n<b>if no repositories, the search will be apply on all repositories the current user has karma<\/b>",
        "operationId" : "getArtifactByChecksum",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "required" : false,
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_ChecksumSearch",
"description" : ""
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Artifact"
}
            },
            "examples" : [ {
  "prefix" : "...",
  "repositoryId" : "...",
  "bundleName" : "...",
  "artifactId" : "...",
  "bundleExportPackage" : "...",
  "bundleDocUrl" : "...",
  "bundleVersion" : "...",
  "groupId" : "...",
  "bundleDescription" : "...",
  "scope" : "...",
  "type" : "...",
  "bundleImportPackage" : "...",
  "packaging" : "...",
  "path" : "...",
  "url" : "...",
  "context" : "...",
  "classifier" : "...",
  "bundleRequireBundle" : "...",
  "fileExtension" : "...",
  "bundleExportService" : "...",
  "version" : "...",
  "id" : "...",
  "size" : "...",
  "goals" : [ "...", "..." ],
  "bundleLicense" : "...",
  "bundleSymbolicName" : "..."
} ],
            "description" : ""
          }
        }
      }
    }
    ,
    "\/searchService/getAllGroupIds" : {
      "get" : {
        "tags" : [ "SearchService" ],
        "description" : "<b>this method applies on Maven Indexer lucene index, so datas not yet indexed won't be available<\/b>",
        "operationId" : "getAllGroupIds",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "selectedRepos",
            "in" : "query",
            "type" : "array",
            "items" : {
            "type" : "string"
            },
            "collectionFormat" : "multi",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_GroupIdList",
"description" : ""
            },
            "examples" : {
  "groupIds" : [ "...", "..." ]
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/searchService/getArtifactVersions" : {
      "get" : {
        "tags" : [ "SearchService" ],
        "description" : "<b>search will be apply on all repositories the current user has karma<\/b>",
        "operationId" : "getArtifactVersions",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "artifactId",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "groupId",
            "in" : "query",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "packaging",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Artifact"
}
            },
            "examples" : [ {
  "prefix" : "...",
  "repositoryId" : "...",
  "bundleName" : "...",
  "artifactId" : "...",
  "bundleExportPackage" : "...",
  "bundleDocUrl" : "...",
  "bundleVersion" : "...",
  "groupId" : "...",
  "bundleDescription" : "...",
  "scope" : "...",
  "type" : "...",
  "bundleImportPackage" : "...",
  "packaging" : "...",
  "path" : "...",
  "url" : "...",
  "context" : "...",
  "classifier" : "...",
  "bundleRequireBundle" : "...",
  "fileExtension" : "...",
  "bundleExportService" : "...",
  "version" : "...",
  "id" : "...",
  "size" : "...",
  "goals" : [ "...", "..." ],
  "bundleLicense" : "...",
  "bundleSymbolicName" : "..."
} ],
            "description" : ""
          }
        }
      }
    }
    ,
    "\/searchService/observableRepoIds" : {
      "get" : {
        "tags" : [ "SearchService" ],
        "operationId" : "getObservablesRepoIds",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_StringList",
"description" : ""
            },
            "examples" : {
  "strings" : [ "...", "..." ]
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/searchService/quickSearch" : {
      "get" : {
        "tags" : [ "SearchService" ],
        "operationId" : "quickSearch",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "queryString",
            "in" : "query",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Artifact"
}
            },
            "examples" : [ {
  "prefix" : "...",
  "repositoryId" : "...",
  "bundleName" : "...",
  "artifactId" : "...",
  "bundleExportPackage" : "...",
  "bundleDocUrl" : "...",
  "bundleVersion" : "...",
  "groupId" : "...",
  "bundleDescription" : "...",
  "scope" : "...",
  "type" : "...",
  "bundleImportPackage" : "...",
  "packaging" : "...",
  "path" : "...",
  "url" : "...",
  "context" : "...",
  "classifier" : "...",
  "bundleRequireBundle" : "...",
  "fileExtension" : "...",
  "bundleExportService" : "...",
  "version" : "...",
  "id" : "...",
  "size" : "...",
  "goals" : [ "...", "..." ],
  "bundleLicense" : "...",
  "bundleSymbolicName" : "..."
} ],
            "description" : ""
          }
        }
      }
    }
    ,
    "\/searchService/quickSearchWithRepositories" : {
      "post" : {
        "tags" : [ "SearchService" ],
        "description" : "<b>if not repositories in SearchRequest: search will be apply on all repositories the current user has karma<\/b>",
        "operationId" : "quickSearchWithRepositories",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "required" : false,
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_SearchRequest",
"description" : ""
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Artifact"
}
            },
            "examples" : [ {
  "prefix" : "...",
  "repositoryId" : "...",
  "bundleName" : "...",
  "artifactId" : "...",
  "bundleExportPackage" : "...",
  "bundleDocUrl" : "...",
  "bundleVersion" : "...",
  "groupId" : "...",
  "bundleDescription" : "...",
  "scope" : "...",
  "type" : "...",
  "bundleImportPackage" : "...",
  "packaging" : "...",
  "path" : "...",
  "url" : "...",
  "context" : "...",
  "classifier" : "...",
  "bundleRequireBundle" : "...",
  "fileExtension" : "...",
  "bundleExportService" : "...",
  "version" : "...",
  "id" : "...",
  "size" : "...",
  "goals" : [ "...", "..." ],
  "bundleLicense" : "...",
  "bundleSymbolicName" : "..."
} ],
            "description" : ""
          }
        }
      }
    }
    ,
    "\/searchService/searchArtifacts" : {
      "post" : {
        "tags" : [ "SearchService" ],
        "description" : "If searchRequest contains repositories, the search will be done only on those repositories.\n<b>if no repositories, the search will be apply on all repositories the current user has karma<\/b>",
        "operationId" : "searchArtifacts2",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "required" : false,
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_SearchRequest",
"description" : ""
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Artifact"
}
            },
            "examples" : [ {
  "prefix" : "...",
  "repositoryId" : "...",
  "bundleName" : "...",
  "artifactId" : "...",
  "bundleExportPackage" : "...",
  "bundleDocUrl" : "...",
  "bundleVersion" : "...",
  "groupId" : "...",
  "bundleDescription" : "...",
  "scope" : "...",
  "type" : "...",
  "bundleImportPackage" : "...",
  "packaging" : "...",
  "path" : "...",
  "url" : "...",
  "context" : "...",
  "classifier" : "...",
  "bundleRequireBundle" : "...",
  "fileExtension" : "...",
  "bundleExportService" : "...",
  "version" : "...",
  "id" : "...",
  "size" : "...",
  "goals" : [ "...", "..." ],
  "bundleLicense" : "...",
  "bundleSymbolicName" : "..."
} ],
            "description" : ""
          }
        }
      }
    }
    ,
    "\/systemStatusService/cacheEntries" : {
      "get" : {
        "tags" : [ "SystemStatusService" ],
        "operationId" : "getCacheEntries",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_CacheEntry"
}
            },
            "examples" : [ {
  "key" : "...",
  "size" : 12345,
  "cacheHits" : 12345,
  "cacheMiss" : 12345,
  "cacheHitRate" : "...",
  "inMemorySize" : 12345
} ],
            "description" : ""
          }
        }
      }
    }
    ,
    "\/systemStatusService/clearAllCaches" : {
      "get" : {
        "tags" : [ "SystemStatusService" ],
        "operationId" : "clearAllCaches",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/systemStatusService/clearCache/{key}" : {
      "get" : {
        "tags" : [ "SystemStatusService" ],
        "operationId" : "clearCache",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "key",
            "in" : "path",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/systemStatusService/currentServerTime/{locale}" : {
      "get" : {
        "tags" : [ "SystemStatusService" ],
        "operationId" : "getCurrentServerTime",
        "produces" : [ "text/plain" ],
        "parameters" : [
          {
            "name" : "locale",
            "in" : "path",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/systemStatusService/memoryStatus" : {
      "get" : {
        "tags" : [ "SystemStatusService" ],
        "operationId" : "getMemoryStatus",
        "produces" : [ "text/plain" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/systemStatusService/queueEntries" : {
      "get" : {
        "tags" : [ "SystemStatusService" ],
        "operationId" : "getQueueEntries",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_QueueEntry"
}
            },
            "examples" : [ {
  "key" : "...",
  "entriesNumber" : 12345
} ],
            "description" : ""
          }
        }
      }
    }
    ,
    "\/systemStatusService/repositoryScannerStatistics" : {
      "get" : {
        "tags" : [ "SystemStatusService" ],
        "operationId" : "getRepositoryScannerStatistics",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RepositoryScannerStatistics"
}
            },
            "examples" : [ {
  "managedRepository" : {
    "cronExpression" : "...",
    "location" : "...",
    "releases" : true,
    "snapshots" : true,
    "blockRedeployments" : true,
    "stagingRepository" : { },
    "scanned" : true,
    "retentionPeriod" : 12345,
    "retentionCount" : 12345,
    "deleteReleasedSnapshots" : true,
    "stageRepoNeeded" : true,
    "resetStats" : true,
    "skipPackedIndexCreation" : true,
    "layout" : "...",
    "type" : "...",
    "indexDirectory" : "...",
    "descriptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "id" : "...",
    "name" : "...",
    "packedIndexDirectory" : "...",
    "description" : "...",
    "names" : {
      "property1" : "...",
      "property2" : "..."
    }
  },
  "consumerScanningStatistics" : [ {
    "consumerKey" : "...",
    "count" : 12345,
    "time" : 12345,
    "average" : "..."
  }, {
    "consumerKey" : "...",
    "count" : 12345,
    "time" : 12345,
    "average" : "..."
  } ],
  "totalFileCount" : 12345,
  "newFileCount" : 12345
} ],
            "description" : ""
          }
        }
      }
    }
  }
}
